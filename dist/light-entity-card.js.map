{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/lit/node_modules/@lit/reactive-element/css-tag.js","webpack:///./node_modules/lit/node_modules/@lit/reactive-element/reactive-element.js","webpack:///src/lit-html.ts","webpack:///src/lit-element.ts","webpack:///src/is-server.ts","webpack:///./node_modules/@jaames/iro/dist/iro.es.js","webpack:///./node_modules/@lit-labs/scoped-registry-mixin/node_modules/@lit/reactive-element/css-tag.js","webpack:///./node_modules/@lit-labs/scoped-registry-mixin/scoped-registry-mixin.js","webpack:///./src/style.js","webpack:///./src/defaults.js","webpack:///./src/style-editor.js","webpack:///./src/buildElementDefinitions.js","webpack:///./src/globalElementLoader.js","webpack:///./src/index-editor.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","window","ShadowRoot","ShadyCSS","nativeShadow","Document","CSSStyleSheet","WeakMap","e","this","_$cssResult$","Error","cssText","length","replaceSync","set","reduce","cssRules","trustedTypes","h","emptyScript","reactiveElementPolyfillSupport","Boolean","Array","JSON","stringify","Number","parse","a","attribute","type","String","converter","reflect","hasChanged","HTMLElement","super","_$Ei","Map","isUpdatePending","hasUpdated","_$El","u","finalize","push","elementProperties","forEach","_$Ep","_$Ev","state","noAccessor","getPropertyDescriptor","requestUpdate","configurable","finalized","getPrototypeOf","properties","getOwnPropertyNames","getOwnPropertySymbols","createProperty","elementStyles","finalizeStyles","styles","isArray","Set","flat","reverse","unshift","toLowerCase","_$E_","Promise","enableUpdating","_$AL","_$Eg","constructor","_$ES","renderRoot","isConnected","hostConnected","splice","indexOf","shadowRoot","attachShadow","shadowRootOptions","adoptedStyleSheets","map","styleSheet","document","createElement","litNonce","setAttribute","textContent","appendChild","createRenderRoot","hostDisconnected","_$AK","toAttribute","removeAttribute","getPropertyOptions","fromAttribute","has","_$EC","_$Ej","reject","scheduleUpdate","performUpdate","shouldUpdate","willUpdate","hostUpdate","update","_$Ek","_$AE","hostUpdated","firstUpdated","updated","getUpdateComplete","_$EO","ReactiveElement","reactiveElementVersions","global","policy","createPolicy","createHTML","marker","Math","random","slice","markerMatch","nodeMarker","createMarker","v","createComment","isPrimitive","isIterable","iterator","textEndRegex","commentEndRegex","comment2EndRegex","tagEndRegex","RegExp","singleQuoteAttrEndRegex","doubleQuoteAttrEndRegex","rawTextElement","tag","strings","values","_$litType$","html","noChange","nothing","templateCache","walker","createTreeWalker","getTemplateHtml","rawTextEndRegex","attrNames","regex","attrName","match","attrNameEndIndex","lastIndex","exec","test","end","startsWith","htmlResult","Template","options","node","parts","nodeIndex","attrNameIndex","partCount","el","currentNode","content","svgElement","firstChild","remove","append","childNodes","nextNode","nodeType","hasAttributes","attrsToRemove","getAttributeNames","endsWith","realName","statics","getAttribute","split","index","ctor","PropertyPart","BooleanAttributePart","EventPart","AttributePart","tagName","data","static","_options","innerHTML","resolveDirective","part","attributeIndex","parent","currentDirective","_a","__directives","__directive","nextDirectiveConstructor","_$litDirective$","_b","_$AO","_$initialize","_c","_$resolve","TemplateInstance","template","_parts","_$disconnectableChildren","_$template","_$parent","parentNode","_$isConnected","_clone","fragment","creationScope","importNode","partIndex","templatePart","ChildPart","nextSibling","ElementPart","_update","_$setValue","startNode","endNode","_$committedValue","_$startNode","_$endNode","__isConnected","directiveParent","_$clear","_commitText","_commitTemplateResult","_commitNode","_commitIterable","_insert","ref","insertBefore","createTextNode","result","_$getTemplate","instance","itemPart","itemParts","item","from","start","_$notifyConnectionChanged","setConnected","element","fill","noCommit","valueIndex","change","_commitValue","emptyStringForBooleanAttribute","newListener","oldListener","shouldRemoveListener","capture","once","passive","shouldAddListener","removeEventListener","addEventListener","handleEvent","event","host","polyfillSupport","litHtmlPolyfillSupport","_d","litHtmlVersions","LitElement","__childPart","renderOptions","renderBefore","changedProperties","render","container","partOwnerNode","_$litPart$","connectedCallback","disconnectedCallback","_$litElement$","litElementHydrateSupport","globalThis","litElementPolyfillSupport","litElementVersions","removeChild","f","arguments","children","defaultProps","props","__k","__p","__b","__e","__c","vnode","context","base","__d","debounceRendering","sort","__v","pop","__P","__n","ownerSVGElement","j","y","g","k","_","D","setProperty","style","replace","removeAttributeNS","setAttributeNS","w","C","P","N","contextType","__E","sub","__h","__s","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","__r","getChildContext","getSnapshotBeforeUpdate","componentDidUpdate","localName","createElementNS","dangerouslySetInnerHTML","__html","checked","diffed","current","unmount","componentWillUnmount","target","descriptor","writable","_extends","assign","arguments$1","source","apply","setState","forceUpdate","then","resolve","setTimeout","getDerivedStateFromError","componentDidCatch","CSS_UNIT","PERMISSIVE_MATCH_3","PERMISSIVE_MATCH_4","REGEX_FUNCTIONAL_RGB","REGEX_FUNCTIONAL_RGBA","REGEX_FUNCTIONAL_HSL","REGEX_FUNCTIONAL_HSLA","REGEX_HEX_3","HEX_START","REGEX_HEX_4","REGEX_HEX_6","REGEX_HEX_8","log","round","floor","clamp","num","min","max","parseUnit","str","isPercentage","parseFloat","parseHexInt","parseInt","intToHex","_int","toString","padStart","IroColor","onChange","$","initialValue","Constructor","protoProps","staticProps","_proto","hexString","rgbString","hslString","hsva","rgb","hsv","hsl","kelvin","setChannel","format","channel","_extends2","reset","clone","unbind","undefined","hsvToRgb","q","mod","b","rgbToHsv","delta","hue","saturation","hsvToHsl","divisor","hslToHsv","kelvinToRgb","temp","rgbToKelvin","minTemp","maxTemp","_rgb","newValue","oldValue","changes","_IroColor$hsvToRgb","alpha","_IroColor$hsvToHsl","rgba","hsla","getSliderDimensions","_sliderSize","width","sliderSize","borderWidth","handleRadius","padding","sliderShape","ishorizontal","layoutDirection","handleStart","handleRange","height","cx","cy","radius","x","getSliderHandlePosition","color","_getSliderDimensions2","midPoint","handlePos","sliderType","minTemperature","temperatureRange","maxTemperature","percent","getCurrentSliderValue","BASE_ELEMENTS","TAU","PI","dist","sqrt","getHandleRange","getWheelDimensions","translateWheelAngle","angle","invert","wheelAngle","wheelDirection","getWheelValueFromInput","_getWheelDimensions3","atan2","handleDist","getBoxDimensions","boxHeight","getBoxValueFromInput","_getBoxDimensions","percentX","percentY","resolveSvgUrl","url","getElementsByTagName","ua","navigator","userAgent","isSafari","isIos","location","protocol","pathname","search","getHandleAtPoint","handlePositions","dX","dY","cssBorderStyles","boxSizing","border","borderColor","cssGradient","direction","stops","_ref","join","cssValue","SECONDARY_EVENTS","IroComponentWrapper","Component","uid","substring","__proto__","eventHandler","rootProps","onMouseDown","ontouchstart","isHorizontal","margin","sliderMargin","rootStyles","overflow","display","this$1","inputHandler","onInput","bounds","getBoundingClientRect","preventDefault","point","touches","changedTouches","clientX","left","clientY","top","IroHandle","className","isActive","transform","willChange","position","xlinkHref","stroke","IroSlider","activeIndex","activeColor","colors","gradient","range","stop","_IroColor$kelvinToRgb","noSat","fullSat","getSliderGradient","_getSliderDimensions","getSliderValueFromInput","inputActive","id","borderRadius","background","backgroundSize","handleSvg","handleProps","IroBox","colorPicker","gradients","_getBoxDimensions2","handleRangeX","handleRangeY","getBoxHandlePosition","inputType","activeHandle","setActiveColor","filter","activeHandleRadius","IroWheel","_getWheelDimensions2","handleAngle","cos","sin","getWheelHandlePosition","circleStyles","_getWheelDimensions","isInputInsideWheel","wheelLightness","opacity","IroColorPicker","events","activeEvents","deferredEvents","colorValue","addColor","layout","newColor","onColorChange","deferredEmit","removeColor","emit","setColors","newColorValues","activeColorIndex","on","eventList","callback","eventType","args","off","callbackList","len","isEventActive","fn","concat","setOptions","newOptions","resize","onMount","emitInputEvent","originId","component","transparency","class","componentIndex","UiComponent","WidgetComponent","widgetFactory","iro","IroColorPickerWidget","widget","widgetRoot","mountWidget","Element","querySelector","readyState","__component","version","Color","ColorPicker","ui","ComponentBase","Handle","Slider","Wheel","Box","registry","elementDefinitions","CustomElementRegistry","entries","define","customElements","shorten_cards","consolidate_entities","child_card","hide_header","show_header_icon","header","color_wheel","persist_features","brightness","color_temp","white_value","color_picker","speed","intensity","force_features","show_slider_percent","full_width_sliders","brightness_icon","white_icon","temperature_icon","speed_icon","intensity_icon","elements","aggregate","defineId","promise","clazz","whenDefined","fireEvent","detail","Event","bubbles","cancelable","composed","dispatchEvent","hass","_config","config","allEntities","keys","states","eid","includes","substr","_firstRendered","entity","charAt","toUpperCase","entityOptions","configChanged","stopPropagation","checkboxConfigChanged","effects_list","ev","configValue","checkedValue","console","info","setColorWheels","_firstUpdate","_shownStateObjects","colorPickerWidth","getColorPickerWidth","picker","getElementById","entity_id","attributes","hs_color","setColorPicker","offsetWidth","shorten","calcWidth","maxWidth","colorTemp","effectList","whiteValue","light","switch","__hass","cardLength","entities","getEntityLength","group","entityLength","resources","language","stateObj","_stateObjects","getEntitiesToShow","templates","htmlTemplate","createEntityTemplate","css","sliderClass","createHeader","createBrightnessSlider","createSpeedSlider","createIntensitySlider","createColorTemperature","createWhiteValue","createColorPicker","createEffectList","title","friendly_name","showHeaderIcon","isEntityOn","setToggle","dontShowFeature","_setValue","showPercent","isNaN","min_mireds","max_mireds","effect_list","inputSelect","listItems","effect","createListItem","caption","setEffect","featureName","featureSupported","featureNames","supported_features","colorModes","supported_color_modes","supportedModes","callEntityService","valueName","newState","cmdToggle","payload","entityType","callService","customCards","description"],"mappings":"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","file":"light-entity-card.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/local/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t=window,e=t.ShadowRoot&&(void 0===t.ShadyCSS||t.ShadyCSS.nativeShadow)&&\"adoptedStyleSheets\"in Document.prototype&&\"replace\"in CSSStyleSheet.prototype,s=Symbol(),n=new WeakMap;class o{constructor(t,e,n){if(this._$cssResult$=!0,n!==s)throw Error(\"CSSResult is not constructable. Use `unsafeCSS` or `css` instead.\");this.cssText=t,this.t=e}get styleSheet(){let t=this.o;const s=this.t;if(e&&void 0===t){const e=void 0!==s&&1===s.length;e&&(t=n.get(s)),void 0===t&&((this.o=t=new CSSStyleSheet).replaceSync(this.cssText),e&&n.set(s,t))}return t}toString(){return this.cssText}}const r=t=>new o(\"string\"==typeof t?t:t+\"\",void 0,s),i=(t,...e)=>{const n=1===t.length?t[0]:e.reduce(((e,s,n)=>e+(t=>{if(!0===t._$cssResult$)return t.cssText;if(\"number\"==typeof t)return t;throw Error(\"Value passed to 'css' function must be a 'css' function result: \"+t+\". Use 'unsafeCSS' to pass non-literal values, but take care to ensure page security.\")})(s)+t[n+1]),t[0]);return new o(n,t,s)},S=(s,n)=>{e?s.adoptedStyleSheets=n.map((t=>t instanceof CSSStyleSheet?t:t.styleSheet)):n.forEach((e=>{const n=document.createElement(\"style\"),o=t.litNonce;void 0!==o&&n.setAttribute(\"nonce\",o),n.textContent=e.cssText,s.appendChild(n)}))},c=e?t=>t:t=>t instanceof CSSStyleSheet?(t=>{let e=\"\";for(const s of t.cssRules)e+=s.cssText;return r(e)})(t):t;export{o as CSSResult,S as adoptStyles,i as css,c as getCompatibleStyle,e as supportsAdoptingStyleSheets,r as unsafeCSS};\n//# sourceMappingURL=css-tag.js.map\n","import{getCompatibleStyle as t,adoptStyles as i}from\"./css-tag.js\";export{CSSResult,adoptStyles,css,getCompatibleStyle,supportsAdoptingStyleSheets,unsafeCSS}from\"./css-tag.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */var s;const e=window,r=e.trustedTypes,h=r?r.emptyScript:\"\",o=e.reactiveElementPolyfillSupport,n={toAttribute(t,i){switch(i){case Boolean:t=t?h:null;break;case Object:case Array:t=null==t?t:JSON.stringify(t)}return t},fromAttribute(t,i){let s=t;switch(i){case Boolean:s=null!==t;break;case Number:s=null===t?null:Number(t);break;case Object:case Array:try{s=JSON.parse(t)}catch(t){s=null}}return s}},a=(t,i)=>i!==t&&(i==i||t==t),l={attribute:!0,type:String,converter:n,reflect:!1,hasChanged:a};class d extends HTMLElement{constructor(){super(),this._$Ei=new Map,this.isUpdatePending=!1,this.hasUpdated=!1,this._$El=null,this.u()}static addInitializer(t){var i;this.finalize(),(null!==(i=this.h)&&void 0!==i?i:this.h=[]).push(t)}static get observedAttributes(){this.finalize();const t=[];return this.elementProperties.forEach(((i,s)=>{const e=this._$Ep(s,i);void 0!==e&&(this._$Ev.set(e,s),t.push(e))})),t}static createProperty(t,i=l){if(i.state&&(i.attribute=!1),this.finalize(),this.elementProperties.set(t,i),!i.noAccessor&&!this.prototype.hasOwnProperty(t)){const s=\"symbol\"==typeof t?Symbol():\"__\"+t,e=this.getPropertyDescriptor(t,s,i);void 0!==e&&Object.defineProperty(this.prototype,t,e)}}static getPropertyDescriptor(t,i,s){return{get(){return this[i]},set(e){const r=this[t];this[i]=e,this.requestUpdate(t,r,s)},configurable:!0,enumerable:!0}}static getPropertyOptions(t){return this.elementProperties.get(t)||l}static finalize(){if(this.hasOwnProperty(\"finalized\"))return!1;this.finalized=!0;const t=Object.getPrototypeOf(this);if(t.finalize(),void 0!==t.h&&(this.h=[...t.h]),this.elementProperties=new Map(t.elementProperties),this._$Ev=new Map,this.hasOwnProperty(\"properties\")){const t=this.properties,i=[...Object.getOwnPropertyNames(t),...Object.getOwnPropertySymbols(t)];for(const s of i)this.createProperty(s,t[s])}return this.elementStyles=this.finalizeStyles(this.styles),!0}static finalizeStyles(i){const s=[];if(Array.isArray(i)){const e=new Set(i.flat(1/0).reverse());for(const i of e)s.unshift(t(i))}else void 0!==i&&s.push(t(i));return s}static _$Ep(t,i){const s=i.attribute;return!1===s?void 0:\"string\"==typeof s?s:\"string\"==typeof t?t.toLowerCase():void 0}u(){var t;this._$E_=new Promise((t=>this.enableUpdating=t)),this._$AL=new Map,this._$Eg(),this.requestUpdate(),null===(t=this.constructor.h)||void 0===t||t.forEach((t=>t(this)))}addController(t){var i,s;(null!==(i=this._$ES)&&void 0!==i?i:this._$ES=[]).push(t),void 0!==this.renderRoot&&this.isConnected&&(null===(s=t.hostConnected)||void 0===s||s.call(t))}removeController(t){var i;null===(i=this._$ES)||void 0===i||i.splice(this._$ES.indexOf(t)>>>0,1)}_$Eg(){this.constructor.elementProperties.forEach(((t,i)=>{this.hasOwnProperty(i)&&(this._$Ei.set(i,this[i]),delete this[i])}))}createRenderRoot(){var t;const s=null!==(t=this.shadowRoot)&&void 0!==t?t:this.attachShadow(this.constructor.shadowRootOptions);return i(s,this.constructor.elementStyles),s}connectedCallback(){var t;void 0===this.renderRoot&&(this.renderRoot=this.createRenderRoot()),this.enableUpdating(!0),null===(t=this._$ES)||void 0===t||t.forEach((t=>{var i;return null===(i=t.hostConnected)||void 0===i?void 0:i.call(t)}))}enableUpdating(t){}disconnectedCallback(){var t;null===(t=this._$ES)||void 0===t||t.forEach((t=>{var i;return null===(i=t.hostDisconnected)||void 0===i?void 0:i.call(t)}))}attributeChangedCallback(t,i,s){this._$AK(t,s)}_$EO(t,i,s=l){var e;const r=this.constructor._$Ep(t,s);if(void 0!==r&&!0===s.reflect){const h=(void 0!==(null===(e=s.converter)||void 0===e?void 0:e.toAttribute)?s.converter:n).toAttribute(i,s.type);this._$El=t,null==h?this.removeAttribute(r):this.setAttribute(r,h),this._$El=null}}_$AK(t,i){var s;const e=this.constructor,r=e._$Ev.get(t);if(void 0!==r&&this._$El!==r){const t=e.getPropertyOptions(r),h=\"function\"==typeof t.converter?{fromAttribute:t.converter}:void 0!==(null===(s=t.converter)||void 0===s?void 0:s.fromAttribute)?t.converter:n;this._$El=r,this[r]=h.fromAttribute(i,t.type),this._$El=null}}requestUpdate(t,i,s){let e=!0;void 0!==t&&(((s=s||this.constructor.getPropertyOptions(t)).hasChanged||a)(this[t],i)?(this._$AL.has(t)||this._$AL.set(t,i),!0===s.reflect&&this._$El!==t&&(void 0===this._$EC&&(this._$EC=new Map),this._$EC.set(t,s))):e=!1),!this.isUpdatePending&&e&&(this._$E_=this._$Ej())}async _$Ej(){this.isUpdatePending=!0;try{await this._$E_}catch(t){Promise.reject(t)}const t=this.scheduleUpdate();return null!=t&&await t,!this.isUpdatePending}scheduleUpdate(){return this.performUpdate()}performUpdate(){var t;if(!this.isUpdatePending)return;this.hasUpdated,this._$Ei&&(this._$Ei.forEach(((t,i)=>this[i]=t)),this._$Ei=void 0);let i=!1;const s=this._$AL;try{i=this.shouldUpdate(s),i?(this.willUpdate(s),null===(t=this._$ES)||void 0===t||t.forEach((t=>{var i;return null===(i=t.hostUpdate)||void 0===i?void 0:i.call(t)})),this.update(s)):this._$Ek()}catch(t){throw i=!1,this._$Ek(),t}i&&this._$AE(s)}willUpdate(t){}_$AE(t){var i;null===(i=this._$ES)||void 0===i||i.forEach((t=>{var i;return null===(i=t.hostUpdated)||void 0===i?void 0:i.call(t)})),this.hasUpdated||(this.hasUpdated=!0,this.firstUpdated(t)),this.updated(t)}_$Ek(){this._$AL=new Map,this.isUpdatePending=!1}get updateComplete(){return this.getUpdateComplete()}getUpdateComplete(){return this._$E_}shouldUpdate(t){return!0}update(t){void 0!==this._$EC&&(this._$EC.forEach(((t,i)=>this._$EO(i,this[i],t))),this._$EC=void 0),this._$Ek()}updated(t){}firstUpdated(t){}}d.finalized=!0,d.elementProperties=new Map,d.elementStyles=[],d.shadowRootOptions={mode:\"open\"},null==o||o({ReactiveElement:d}),(null!==(s=e.reactiveElementVersions)&&void 0!==s?s:e.reactiveElementVersions=[]).push(\"1.6.1\");export{d as ReactiveElement,n as defaultConverter,a as notEqual};\n//# sourceMappingURL=reactive-element.js.map\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n// IMPORTANT: these imports must be type-only\nimport type {Directive, DirectiveResult, PartInfo} from './directive.js';\n\nconst DEV_MODE = true;\nconst ENABLE_EXTRA_SECURITY_HOOKS = true;\nconst ENABLE_SHADYDOM_NOPATCH = true;\nconst NODE_MODE = false;\n// Use window for browser builds because IE11 doesn't have globalThis.\nconst global = NODE_MODE ? globalThis : window;\n\n/**\n * Contains types that are part of the unstable debug API.\n *\n * Everything in this API is not stable and may change or be removed in the future,\n * even on patch releases.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace LitUnstable {\n  /**\n   * When Lit is running in dev mode and `window.emitLitDebugLogEvents` is true,\n   * we will emit 'lit-debug' events to window, with live details about the update and render\n   * lifecycle. These can be useful for writing debug tooling and visualizations.\n   *\n   * Please be aware that running with window.emitLitDebugLogEvents has performance overhead,\n   * making certain operations that are normally very cheap (like a no-op render) much slower,\n   * because we must copy data and dispatch events.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace DebugLog {\n    export type Entry =\n      | TemplatePrep\n      | TemplateInstantiated\n      | TemplateInstantiatedAndUpdated\n      | TemplateUpdating\n      | BeginRender\n      | EndRender\n      | CommitPartEntry\n      | SetPartValue;\n    export interface TemplatePrep {\n      kind: 'template prep';\n      template: Template;\n      strings: TemplateStringsArray;\n      clonableTemplate: HTMLTemplateElement;\n      parts: TemplatePart[];\n    }\n    export interface BeginRender {\n      kind: 'begin render';\n      id: number;\n      value: unknown;\n      container: HTMLElement | DocumentFragment;\n      options: RenderOptions | undefined;\n      part: ChildPart | undefined;\n    }\n    export interface EndRender {\n      kind: 'end render';\n      id: number;\n      value: unknown;\n      container: HTMLElement | DocumentFragment;\n      options: RenderOptions | undefined;\n      part: ChildPart;\n    }\n    export interface TemplateInstantiated {\n      kind: 'template instantiated';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      fragment: Node;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface TemplateInstantiatedAndUpdated {\n      kind: 'template instantiated and updated';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      fragment: Node;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface TemplateUpdating {\n      kind: 'template updating';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface SetPartValue {\n      kind: 'set part';\n      part: Part;\n      value: unknown;\n      valueIndex: number;\n      values: unknown[];\n      templateInstance: TemplateInstance;\n    }\n\n    export type CommitPartEntry =\n      | CommitNothingToChildEntry\n      | CommitText\n      | CommitNode\n      | CommitAttribute\n      | CommitProperty\n      | CommitBooleanAttribute\n      | CommitEventListener\n      | CommitToElementBinding;\n\n    export interface CommitNothingToChildEntry {\n      kind: 'commit nothing to child';\n      start: ChildNode;\n      end: ChildNode | null;\n      parent: Disconnectable | undefined;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitText {\n      kind: 'commit text';\n      node: Text;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitNode {\n      kind: 'commit node';\n      start: Node;\n      parent: Disconnectable | undefined;\n      value: Node;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitAttribute {\n      kind: 'commit attribute';\n      element: Element;\n      name: string;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitProperty {\n      kind: 'commit property';\n      element: Element;\n      name: string;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitBooleanAttribute {\n      kind: 'commit boolean attribute';\n      element: Element;\n      name: string;\n      value: boolean;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitEventListener {\n      kind: 'commit event listener';\n      element: Element;\n      name: string;\n      value: unknown;\n      oldListener: unknown;\n      options: RenderOptions | undefined;\n      // True if we're removing the old event listener (e.g. because settings changed, or value is nothing)\n      removeListener: boolean;\n      // True if we're adding a new event listener (e.g. because first render, or settings changed)\n      addListener: boolean;\n    }\n\n    export interface CommitToElementBinding {\n      kind: 'commit to element binding';\n      element: Element;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n  }\n}\n\ninterface DebugLoggingWindow {\n  // Even in dev mode, we generally don't want to emit these events, as that's\n  // another level of cost, so only emit them when DEV_MODE is true _and_ when\n  // window.emitLitDebugEvents is true.\n  emitLitDebugLogEvents?: boolean;\n}\n\n/**\n * Useful for visualizing and logging insights into what the Lit template system is doing.\n *\n * Compiled out of prod mode builds.\n */\nconst debugLogEvent = DEV_MODE\n  ? (event: LitUnstable.DebugLog.Entry) => {\n      const shouldEmit = (global as unknown as DebugLoggingWindow)\n        .emitLitDebugLogEvents;\n      if (!shouldEmit) {\n        return;\n      }\n      global.dispatchEvent(\n        new CustomEvent<LitUnstable.DebugLog.Entry>('lit-debug', {\n          detail: event,\n        })\n      );\n    }\n  : undefined;\n// Used for connecting beginRender and endRender events when there are nested\n// renders when errors are thrown preventing an endRender event from being\n// called.\nlet debugLogRenderId = 0;\n\nlet issueWarning: (code: string, warning: string) => void;\n\nif (DEV_MODE) {\n  global.litIssuedWarnings ??= new Set();\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += code\n      ? ` See https://lit.dev/msg/${code} for more information.`\n      : '';\n    if (!global.litIssuedWarnings!.has(warning)) {\n      console.warn(warning);\n      global.litIssuedWarnings!.add(warning);\n    }\n  };\n\n  issueWarning(\n    'dev-mode',\n    `Lit is in dev mode. Not recommended for production!`\n  );\n}\n\nconst wrap =\n  ENABLE_SHADYDOM_NOPATCH &&\n  global.ShadyDOM?.inUse &&\n  global.ShadyDOM?.noPatch === true\n    ? global.ShadyDOM!.wrap\n    : (node: Node) => node;\n\nconst trustedTypes = (global as unknown as Partial<Window>).trustedTypes;\n\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = trustedTypes\n  ? trustedTypes.createPolicy('lit-html', {\n      createHTML: (s) => s,\n    })\n  : undefined;\n\n/**\n * Used to sanitize any value before it is written into the DOM. This can be\n * used to implement a security policy of allowed and disallowed values in\n * order to prevent XSS attacks.\n *\n * One way of using this callback would be to check attributes and properties\n * against a list of high risk fields, and require that values written to such\n * fields be instances of a class which is safe by construction. Closure's Safe\n * HTML Types is one implementation of this technique (\n * https://github.com/google/safe-html-types/blob/master/doc/safehtml-types.md).\n * The TrustedTypes polyfill in API-only mode could also be used as a basis\n * for this technique (https://github.com/WICG/trusted-types).\n *\n * @param node The HTML node (usually either a #text node or an Element) that\n *     is being written to. Note that this is just an exemplar node, the write\n *     may take place against another instance of the same class of node.\n * @param name The name of an attribute or property (for example, 'href').\n * @param type Indicates whether the write that's about to be performed will\n *     be to a property or a node.\n * @return A function that will sanitize this class of writes.\n */\nexport type SanitizerFactory = (\n  node: Node,\n  name: string,\n  type: 'property' | 'attribute'\n) => ValueSanitizer;\n\n/**\n * A function which can sanitize values that will be written to a specific kind\n * of DOM sink.\n *\n * See SanitizerFactory.\n *\n * @param value The value to sanitize. Will be the actual value passed into\n *     the lit-html template literal, so this could be of any type.\n * @return The value to write to the DOM. Usually the same as the input value,\n *     unless sanitization is needed.\n */\nexport type ValueSanitizer = (value: unknown) => unknown;\n\nconst identityFunction: ValueSanitizer = (value: unknown) => value;\nconst noopSanitizer: SanitizerFactory = (\n  _node: Node,\n  _name: string,\n  _type: 'property' | 'attribute'\n) => identityFunction;\n\n/** Sets the global sanitizer factory. */\nconst setSanitizer = (newSanitizer: SanitizerFactory) => {\n  if (!ENABLE_EXTRA_SECURITY_HOOKS) {\n    return;\n  }\n  if (sanitizerFactoryInternal !== noopSanitizer) {\n    throw new Error(\n      `Attempted to overwrite existing lit-html security policy.` +\n        ` setSanitizeDOMValueFactory should be called at most once.`\n    );\n  }\n  sanitizerFactoryInternal = newSanitizer;\n};\n\n/**\n * Only used in internal tests, not a part of the public API.\n */\nconst _testOnlyClearSanitizerFactoryDoNotCallOrElse = () => {\n  sanitizerFactoryInternal = noopSanitizer;\n};\n\nconst createSanitizer: SanitizerFactory = (node, name, type) => {\n  return sanitizerFactoryInternal(node, name, type);\n};\n\n// Added to an attribute name to mark the attribute as bound so we can find\n// it easily.\nconst boundAttributeSuffix = '$lit$';\n\n// This marker is used in many syntactic positions in HTML, so it must be\n// a valid element name and attribute name. We don't support dynamic names (yet)\n// but this at least ensures that the parse tree is closer to the template\n// intention.\nconst marker = `lit$${String(Math.random()).slice(9)}$`;\n\n// String used to tell if a comment is a marker comment\nconst markerMatch = '?' + marker;\n\n// Text used to insert a comment marker node. We use processing instruction\n// syntax because it's slightly smaller, but parses as a comment node.\nconst nodeMarker = `<${markerMatch}>`;\n\nconst d =\n  NODE_MODE && global.document === undefined\n    ? ({\n        createTreeWalker() {\n          return {};\n        },\n      } as unknown as Document)\n    : document;\n\n// Creates a dynamic marker. We never have to search for these in the DOM.\nconst createMarker = (v = '') => d.createComment(v);\n\n// https://tc39.github.io/ecma262/#sec-typeof-operator\ntype Primitive = null | undefined | boolean | number | string | symbol | bigint;\nconst isPrimitive = (value: unknown): value is Primitive =>\n  value === null || (typeof value != 'object' && typeof value != 'function');\nconst isArray = Array.isArray;\nconst isIterable = (value: unknown): value is Iterable<unknown> =>\n  isArray(value) ||\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  typeof (value as any)?.[Symbol.iterator] === 'function';\n\nconst SPACE_CHAR = `[ \\t\\n\\f\\r]`;\nconst ATTR_VALUE_CHAR = `[^ \\t\\n\\f\\r\"'\\`<>=]`;\nconst NAME_CHAR = `[^\\\\s\"'>=/]`;\n\n// These regexes represent the five parsing states that we care about in the\n// Template's HTML scanner. They match the *end* of the state they're named\n// after.\n// Depending on the match, we transition to a new state. If there's no match,\n// we stay in the same state.\n// Note that the regexes are stateful. We utilize lastIndex and sync it\n// across the multiple regexes used. In addition to the five regexes below\n// we also dynamically create a regex to find the matching end tags for raw\n// text elements.\n\n/**\n * End of text is: `<` followed by:\n *   (comment start) or (tag) or (dynamic tag binding)\n */\nconst textEndRegex = /<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g;\nconst COMMENT_START = 1;\nconst TAG_NAME = 2;\nconst DYNAMIC_TAG_NAME = 3;\n\nconst commentEndRegex = /-->/g;\n/**\n * Comments not started with <!--, like </{, can be ended by a single `>`\n */\nconst comment2EndRegex = />/g;\n\n/**\n * The tagEnd regex matches the end of the \"inside an opening\" tag syntax\n * position. It either matches a `>`, an attribute-like sequence, or the end\n * of the string after a space (attribute-name position ending).\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\t\\n\\f\\r\" are HTML space characters:\n * https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * So an attribute is:\n *  * The name: any character except a whitespace character, (\"), ('), \">\",\n *    \"=\", or \"/\". Note: this is different from the HTML spec which also excludes control characters.\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nconst tagEndRegex = new RegExp(\n  `>|${SPACE_CHAR}(?:(${NAME_CHAR}+)(${SPACE_CHAR}*=${SPACE_CHAR}*(?:${ATTR_VALUE_CHAR}|(\"|')|))|$)`,\n  'g'\n);\nconst ENTIRE_MATCH = 0;\nconst ATTRIBUTE_NAME = 1;\nconst SPACES_AND_EQUALS = 2;\nconst QUOTE_CHAR = 3;\n\nconst singleQuoteAttrEndRegex = /'/g;\nconst doubleQuoteAttrEndRegex = /\"/g;\n/**\n * Matches the raw text elements.\n *\n * Comments are not parsed within raw text elements, so we need to search their\n * text content for marker strings.\n */\nconst rawTextElement = /^(?:script|style|textarea|title)$/i;\n\n/** TemplateResult types */\nconst HTML_RESULT = 1;\nconst SVG_RESULT = 2;\n\ntype ResultType = typeof HTML_RESULT | typeof SVG_RESULT;\n\n// TemplatePart types\n// IMPORTANT: these must match the values in PartType\nconst ATTRIBUTE_PART = 1;\nconst CHILD_PART = 2;\nconst PROPERTY_PART = 3;\nconst BOOLEAN_ATTRIBUTE_PART = 4;\nconst EVENT_PART = 5;\nconst ELEMENT_PART = 6;\nconst COMMENT_PART = 7;\n\n/**\n * The return type of the template tag functions, {@linkcode html} and\n * {@linkcode svg}.\n *\n * A `TemplateResult` object holds all the information about a template\n * expression required to render it: the template strings, expression values,\n * and type of template (html or svg).\n *\n * `TemplateResult` objects do not create any DOM on their own. To create or\n * update DOM you need to render the `TemplateResult`. See\n * [Rendering](https://lit.dev/docs/components/rendering) for more information.\n *\n */\nexport type TemplateResult<T extends ResultType = ResultType> = {\n  // This property needs to remain unminified.\n  ['_$litType$']: T;\n  strings: TemplateStringsArray;\n  values: unknown[];\n};\n\nexport type HTMLTemplateResult = TemplateResult<typeof HTML_RESULT>;\n\nexport type SVGTemplateResult = TemplateResult<typeof SVG_RESULT>;\n\nexport interface CompiledTemplateResult {\n  // This is a factory in order to make template initialization lazy\n  // and allow ShadyRenderOptions scope to be passed in.\n  // This property needs to remain unminified.\n  ['_$litType$']: CompiledTemplate;\n  values: unknown[];\n}\n\nexport interface CompiledTemplate extends Omit<Template, 'el'> {\n  // el is overridden to be optional. We initialize it on first render\n  el?: HTMLTemplateElement;\n\n  // The prepared HTML string to create a template element from.\n  h: TrustedHTML;\n}\n\n/**\n * Generates a template literal tag function that returns a TemplateResult with\n * the given result type.\n */\nconst tag =\n  <T extends ResultType>(type: T) =>\n  (strings: TemplateStringsArray, ...values: unknown[]): TemplateResult<T> => {\n    // Warn against templates octal escape sequences\n    // We do this here rather than in render so that the warning is closer to the\n    // template definition.\n    if (DEV_MODE && strings.some((s) => s === undefined)) {\n      console.warn(\n        'Some template strings are undefined.\\n' +\n          'This is probably caused by illegal octal escape sequences.'\n      );\n    }\n    return {\n      // This property needs to remain unminified.\n      ['_$litType$']: type,\n      strings,\n      values,\n    };\n  };\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n *\n * ```ts\n * const header = (title: string) => html`<h1>${title}</h1>`;\n * ```\n *\n * The `html` tag returns a description of the DOM to render as a value. It is\n * lazy, meaning no work is done until the template is rendered. When rendering,\n * if a template comes from the same expression as a previously rendered result,\n * it's efficiently updated instead of replaced.\n */\nexport const html = tag(HTML_RESULT);\n\n/**\n * Interprets a template literal as an SVG fragment that can efficiently\n * render to and update a container.\n *\n * ```ts\n * const rect = svg`<rect width=\"10\" height=\"10\"></rect>`;\n *\n * const myImage = html`\n *   <svg viewBox=\"0 0 10 10\" xmlns=\"http://www.w3.org/2000/svg\">\n *     ${rect}\n *   </svg>`;\n * ```\n *\n * The `svg` *tag function* should only be used for SVG fragments, or elements\n * that would be contained **inside** an `<svg>` HTML element. A common error is\n * placing an `<svg>` *element* in a template tagged with the `svg` tag\n * function. The `<svg>` element is an HTML element and should be used within a\n * template tagged with the {@linkcode html} tag function.\n *\n * In LitElement usage, it's invalid to return an SVG fragment from the\n * `render()` method, as the SVG fragment will be contained within the element's\n * shadow root and thus cannot be used within an `<svg>` HTML element.\n */\nexport const svg = tag(SVG_RESULT);\n\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = Symbol.for('lit-noChange');\n\n/**\n * A sentinel value that signals a ChildPart to fully clear its content.\n *\n * ```ts\n * const button = html`${\n *  user.isAdmin\n *    ? html`<button>DELETE</button>`\n *    : nothing\n * }`;\n * ```\n *\n * Prefer using `nothing` over other falsy values as it provides a consistent\n * behavior between various expression binding contexts.\n *\n * In child expressions, `undefined`, `null`, `''`, and `nothing` all behave the\n * same and render no nodes. In attribute expressions, `nothing` _removes_ the\n * attribute, while `undefined` and `null` will render an empty string. In\n * property expressions `nothing` becomes `undefined`.\n */\nexport const nothing = Symbol.for('lit-nothing');\n\n/**\n * The cache of prepared templates, keyed by the tagged TemplateStringsArray\n * and _not_ accounting for the specific template tag used. This means that\n * template tags cannot be dynamic - the must statically be one of html, svg,\n * or attr. This restriction simplifies the cache lookup, which is on the hot\n * path for rendering.\n */\nconst templateCache = new WeakMap<TemplateStringsArray, Template>();\n\n/**\n * Object specifying options for controlling lit-html rendering. Note that\n * while `render` may be called multiple times on the same `container` (and\n * `renderBefore` reference node) to efficiently update the rendered content,\n * only the options passed in during the first render are respected during\n * the lifetime of renders to that unique `container` + `renderBefore`\n * combination.\n */\nexport interface RenderOptions {\n  /**\n   * An object to use as the `this` value for event listeners. It's often\n   * useful to set this to the host component rendering a template.\n   */\n  host?: object;\n  /**\n   * A DOM node before which to render content in the container.\n   */\n  renderBefore?: ChildNode | null;\n  /**\n   * Node used for cloning the template (`importNode` will be called on this\n   * node). This controls the `ownerDocument` of the rendered DOM, along with\n   * any inherited context. Defaults to the global `document`.\n   */\n  creationScope?: {importNode(node: Node, deep?: boolean): Node};\n  /**\n   * The initial connected state for the top-level part being rendered. If no\n   * `isConnected` option is set, `AsyncDirective`s will be connected by\n   * default. Set to `false` if the initial render occurs in a disconnected tree\n   * and `AsyncDirective`s should see `isConnected === false` for their initial\n   * render. The `part.setConnected()` method must be used subsequent to initial\n   * render to change the connected state of the part.\n   */\n  isConnected?: boolean;\n}\n\nconst walker = d.createTreeWalker(\n  d,\n  129 /* NodeFilter.SHOW_{ELEMENT|COMMENT} */,\n  null,\n  false\n);\n\nlet sanitizerFactoryInternal: SanitizerFactory = noopSanitizer;\n\n//\n// Classes only below here, const variable declarations only above here...\n//\n// Keeping variable declarations and classes together improves minification.\n// Interfaces and type aliases can be interleaved freely.\n//\n\n// Type for classes that have a `_directive` or `_directives[]` field, used by\n// `resolveDirective`\nexport interface DirectiveParent {\n  _$parent?: DirectiveParent;\n  _$isConnected: boolean;\n  __directive?: Directive;\n  __directives?: Array<Directive | undefined>;\n}\n\n/**\n * Returns an HTML string for the given TemplateStringsArray and result type\n * (HTML or SVG), along with the case-sensitive bound attribute names in\n * template order. The HTML contains comment markers denoting the `ChildPart`s\n * and suffixes on bound attributes denoting the `AttributeParts`.\n *\n * @param strings template strings array\n * @param type HTML or SVG\n * @return Array containing `[html, attrNames]` (array returned for terseness,\n *     to avoid object fields since this code is shared with non-minified SSR\n *     code)\n */\nconst getTemplateHtml = (\n  strings: TemplateStringsArray,\n  type: ResultType\n): [TrustedHTML, Array<string | undefined>] => {\n  // Insert makers into the template HTML to represent the position of\n  // bindings. The following code scans the template strings to determine the\n  // syntactic position of the bindings. They can be in text position, where\n  // we insert an HTML comment, attribute value position, where we insert a\n  // sentinel string and re-write the attribute name, or inside a tag where\n  // we insert the sentinel string.\n  const l = strings.length - 1;\n  // Stores the case-sensitive bound attribute names in the order of their\n  // parts. ElementParts are also reflected in this array as undefined\n  // rather than a string, to disambiguate from attribute bindings.\n  const attrNames: Array<string | undefined> = [];\n  let html = type === SVG_RESULT ? '<svg>' : '';\n\n  // When we're inside a raw text tag (not it's text content), the regex\n  // will still be tagRegex so we can find attributes, but will switch to\n  // this regex when the tag ends.\n  let rawTextEndRegex: RegExp | undefined;\n\n  // The current parsing state, represented as a reference to one of the\n  // regexes\n  let regex = textEndRegex;\n\n  for (let i = 0; i < l; i++) {\n    const s = strings[i];\n    // The index of the end of the last attribute name. When this is\n    // positive at end of a string, it means we're in an attribute value\n    // position and need to rewrite the attribute name.\n    // We also use a special value of -2 to indicate that we encountered\n    // the end of a string in attribute name position.\n    let attrNameEndIndex = -1;\n    let attrName: string | undefined;\n    let lastIndex = 0;\n    let match!: RegExpExecArray | null;\n\n    // The conditions in this loop handle the current parse state, and the\n    // assignments to the `regex` variable are the state transitions.\n    while (lastIndex < s.length) {\n      // Make sure we start searching from where we previously left off\n      regex.lastIndex = lastIndex;\n      match = regex.exec(s);\n      if (match === null) {\n        break;\n      }\n      lastIndex = regex.lastIndex;\n      if (regex === textEndRegex) {\n        if (match[COMMENT_START] === '!--') {\n          regex = commentEndRegex;\n        } else if (match[COMMENT_START] !== undefined) {\n          // We started a weird comment, like </{\n          regex = comment2EndRegex;\n        } else if (match[TAG_NAME] !== undefined) {\n          if (rawTextElement.test(match[TAG_NAME])) {\n            // Record if we encounter a raw-text element. We'll switch to\n            // this regex at the end of the tag.\n            rawTextEndRegex = new RegExp(`</${match[TAG_NAME]}`, 'g');\n          }\n          regex = tagEndRegex;\n        } else if (match[DYNAMIC_TAG_NAME] !== undefined) {\n          if (DEV_MODE) {\n            throw new Error(\n              'Bindings in tag names are not supported. Please use static templates instead. ' +\n                'See https://lit.dev/docs/templates/expressions/#static-expressions'\n            );\n          }\n          regex = tagEndRegex;\n        }\n      } else if (regex === tagEndRegex) {\n        if (match[ENTIRE_MATCH] === '>') {\n          // End of a tag. If we had started a raw-text element, use that\n          // regex\n          regex = rawTextEndRegex ?? textEndRegex;\n          // We may be ending an unquoted attribute value, so make sure we\n          // clear any pending attrNameEndIndex\n          attrNameEndIndex = -1;\n        } else if (match[ATTRIBUTE_NAME] === undefined) {\n          // Attribute name position\n          attrNameEndIndex = -2;\n        } else {\n          attrNameEndIndex = regex.lastIndex - match[SPACES_AND_EQUALS].length;\n          attrName = match[ATTRIBUTE_NAME];\n          regex =\n            match[QUOTE_CHAR] === undefined\n              ? tagEndRegex\n              : match[QUOTE_CHAR] === '\"'\n              ? doubleQuoteAttrEndRegex\n              : singleQuoteAttrEndRegex;\n        }\n      } else if (\n        regex === doubleQuoteAttrEndRegex ||\n        regex === singleQuoteAttrEndRegex\n      ) {\n        regex = tagEndRegex;\n      } else if (regex === commentEndRegex || regex === comment2EndRegex) {\n        regex = textEndRegex;\n      } else {\n        // Not one of the five state regexes, so it must be the dynamically\n        // created raw text regex and we're at the close of that element.\n        regex = tagEndRegex;\n        rawTextEndRegex = undefined;\n      }\n    }\n\n    if (DEV_MODE) {\n      // If we have a attrNameEndIndex, which indicates that we should\n      // rewrite the attribute name, assert that we're in a valid attribute\n      // position - either in a tag, or a quoted attribute value.\n      console.assert(\n        attrNameEndIndex === -1 ||\n          regex === tagEndRegex ||\n          regex === singleQuoteAttrEndRegex ||\n          regex === doubleQuoteAttrEndRegex,\n        'unexpected parse state B'\n      );\n    }\n\n    // We have four cases:\n    //  1. We're in text position, and not in a raw text element\n    //     (regex === textEndRegex): insert a comment marker.\n    //  2. We have a non-negative attrNameEndIndex which means we need to\n    //     rewrite the attribute name to add a bound attribute suffix.\n    //  3. We're at the non-first binding in a multi-binding attribute, use a\n    //     plain marker.\n    //  4. We're somewhere else inside the tag. If we're in attribute name\n    //     position (attrNameEndIndex === -2), add a sequential suffix to\n    //     generate a unique attribute name.\n\n    // Detect a binding next to self-closing tag end and insert a space to\n    // separate the marker from the tag end:\n    const end =\n      regex === tagEndRegex && strings[i + 1].startsWith('/>') ? ' ' : '';\n    html +=\n      regex === textEndRegex\n        ? s + nodeMarker\n        : attrNameEndIndex >= 0\n        ? (attrNames.push(attrName!),\n          s.slice(0, attrNameEndIndex) +\n            boundAttributeSuffix +\n            s.slice(attrNameEndIndex)) +\n          marker +\n          end\n        : s +\n          marker +\n          (attrNameEndIndex === -2 ? (attrNames.push(undefined), i) : end);\n  }\n\n  const htmlResult: string | TrustedHTML =\n    html + (strings[l] || '<?>') + (type === SVG_RESULT ? '</svg>' : '');\n\n  // A security check to prevent spoofing of Lit template results.\n  // In the future, we may be able to replace this with Array.isTemplateObject,\n  // though we might need to make that check inside of the html and svg\n  // functions, because precompiled templates don't come in as\n  // TemplateStringArray objects.\n  if (!Array.isArray(strings) || !strings.hasOwnProperty('raw')) {\n    let message = 'invalid template strings array';\n    if (DEV_MODE) {\n      message = `\n          Internal Error: expected template strings to be an array\n          with a 'raw' field. Faking a template strings array by\n          calling html or svg like an ordinary function is effectively\n          the same as calling unsafeHtml and can lead to major security\n          issues, e.g. opening your code up to XSS attacks.\n\n          If you're using the html or svg tagged template functions normally\n          and and still seeing this error, please file a bug at\n          https://github.com/lit/lit/issues/new?template=bug_report.md\n          and include information about your build tooling, if any.\n        `\n        .trim()\n        .replace(/\\n */g, '\\n');\n    }\n    throw new Error(message);\n  }\n  // Returned as an array for terseness\n  return [\n    policy !== undefined\n      ? policy.createHTML(htmlResult)\n      : (htmlResult as unknown as TrustedHTML),\n    attrNames,\n  ];\n};\n\n/** @internal */\nexport type {Template};\nclass Template {\n  /** @internal */\n  el!: HTMLTemplateElement;\n  /** @internal */\n  parts: Array<TemplatePart> = [];\n\n  constructor(\n    // This property needs to remain unminified.\n    {strings, ['_$litType$']: type}: TemplateResult,\n    options?: RenderOptions\n  ) {\n    let node: Node | null;\n    let nodeIndex = 0;\n    let attrNameIndex = 0;\n    const partCount = strings.length - 1;\n    const parts = this.parts;\n\n    // Create template element\n    const [html, attrNames] = getTemplateHtml(strings, type);\n    this.el = Template.createElement(html, options);\n    walker.currentNode = this.el.content;\n\n    // Reparent SVG nodes into template root\n    if (type === SVG_RESULT) {\n      const content = this.el.content;\n      const svgElement = content.firstChild!;\n      svgElement.remove();\n      content.append(...svgElement.childNodes);\n    }\n\n    // Walk the template to find binding markers and create TemplateParts\n    while ((node = walker.nextNode()) !== null && parts.length < partCount) {\n      if (node.nodeType === 1) {\n        if (DEV_MODE) {\n          const tag = (node as Element).localName;\n          // Warn if `textarea` includes an expression and throw if `template`\n          // does since these are not supported. We do this by checking\n          // innerHTML for anything that looks like a marker. This catches\n          // cases like bindings in textarea there markers turn into text nodes.\n          if (\n            /^(?:textarea|template)$/i!.test(tag) &&\n            (node as Element).innerHTML.includes(marker)\n          ) {\n            const m =\n              `Expressions are not supported inside \\`${tag}\\` ` +\n              `elements. See https://lit.dev/msg/expression-in-${tag} for more ` +\n              `information.`;\n            if (tag === 'template') {\n              throw new Error(m);\n            } else issueWarning('', m);\n          }\n        }\n        // TODO (justinfagnani): for attempted dynamic tag names, we don't\n        // increment the bindingIndex, and it'll be off by 1 in the element\n        // and off by two after it.\n        if ((node as Element).hasAttributes()) {\n          // We defer removing bound attributes because on IE we might not be\n          // iterating attributes in their template order, and would sometimes\n          // remove an attribute that we still need to create a part for.\n          const attrsToRemove = [];\n          for (const name of (node as Element).getAttributeNames()) {\n            // `name` is the name of the attribute we're iterating over, but not\n            // _neccessarily_ the name of the attribute we will create a part\n            // for. They can be different in browsers that don't iterate on\n            // attributes in source order. In that case the attrNames array\n            // contains the attribute name we'll process next. We only need the\n            // attribute name here to know if we should process a bound attribute\n            // on this element.\n            if (\n              name.endsWith(boundAttributeSuffix) ||\n              name.startsWith(marker)\n            ) {\n              const realName = attrNames[attrNameIndex++];\n              attrsToRemove.push(name);\n              if (realName !== undefined) {\n                // Lowercase for case-sensitive SVG attributes like viewBox\n                const value = (node as Element).getAttribute(\n                  realName.toLowerCase() + boundAttributeSuffix\n                )!;\n                const statics = value.split(marker);\n                const m = /([.?@])?(.*)/.exec(realName)!;\n                parts.push({\n                  type: ATTRIBUTE_PART,\n                  index: nodeIndex,\n                  name: m[2],\n                  strings: statics,\n                  ctor:\n                    m[1] === '.'\n                      ? PropertyPart\n                      : m[1] === '?'\n                      ? BooleanAttributePart\n                      : m[1] === '@'\n                      ? EventPart\n                      : AttributePart,\n                });\n              } else {\n                parts.push({\n                  type: ELEMENT_PART,\n                  index: nodeIndex,\n                });\n              }\n            }\n          }\n          for (const name of attrsToRemove) {\n            (node as Element).removeAttribute(name);\n          }\n        }\n        // TODO (justinfagnani): benchmark the regex against testing for each\n        // of the 3 raw text element names.\n        if (rawTextElement.test((node as Element).tagName)) {\n          // For raw text elements we need to split the text content on\n          // markers, create a Text node for each segment, and create\n          // a TemplatePart for each marker.\n          const strings = (node as Element).textContent!.split(marker);\n          const lastIndex = strings.length - 1;\n          if (lastIndex > 0) {\n            (node as Element).textContent = trustedTypes\n              ? (trustedTypes.emptyScript as unknown as '')\n              : '';\n            // Generate a new text node for each literal section\n            // These nodes are also used as the markers for node parts\n            // We can't use empty text nodes as markers because they're\n            // normalized when cloning in IE (could simplify when\n            // IE is no longer supported)\n            for (let i = 0; i < lastIndex; i++) {\n              (node as Element).append(strings[i], createMarker());\n              // Walk past the marker node we just added\n              walker.nextNode();\n              parts.push({type: CHILD_PART, index: ++nodeIndex});\n            }\n            // Note because this marker is added after the walker's current\n            // node, it will be walked to in the outer loop (and ignored), so\n            // we don't need to adjust nodeIndex here\n            (node as Element).append(strings[lastIndex], createMarker());\n          }\n        }\n      } else if (node.nodeType === 8) {\n        const data = (node as Comment).data;\n        if (data === markerMatch) {\n          parts.push({type: CHILD_PART, index: nodeIndex});\n        } else {\n          let i = -1;\n          while ((i = (node as Comment).data.indexOf(marker, i + 1)) !== -1) {\n            // Comment node has a binding marker inside, make an inactive part\n            // The binding won't work, but subsequent bindings will\n            parts.push({type: COMMENT_PART, index: nodeIndex});\n            // Move to the end of the match\n            i += marker.length - 1;\n          }\n        }\n      }\n      nodeIndex++;\n    }\n    debugLogEvent?.({\n      kind: 'template prep',\n      template: this,\n      clonableTemplate: this.el,\n      parts: this.parts,\n      strings,\n    });\n  }\n\n  // Overridden via `litHtmlPolyfillSupport` to provide platform support.\n  /** @nocollapse */\n  static createElement(html: TrustedHTML, _options?: RenderOptions) {\n    const el = d.createElement('template');\n    el.innerHTML = html as unknown as string;\n    return el;\n  }\n}\n\nexport interface Disconnectable {\n  _$parent?: Disconnectable;\n  _$disconnectableChildren?: Set<Disconnectable>;\n  // Rather than hold connection state on instances, Disconnectables recursively\n  // fetch the connection state from the RootPart they are connected in via\n  // getters up the Disconnectable tree via _$parent references. This pushes the\n  // cost of tracking the isConnected state to `AsyncDirectives`, and avoids\n  // needing to pass all Disconnectables (parts, template instances, and\n  // directives) their connection state each time it changes, which would be\n  // costly for trees that have no AsyncDirectives.\n  _$isConnected: boolean;\n}\n\nfunction resolveDirective(\n  part: ChildPart | AttributePart | ElementPart,\n  value: unknown,\n  parent: DirectiveParent = part,\n  attributeIndex?: number\n): unknown {\n  // Bail early if the value is explicitly noChange. Note, this means any\n  // nested directive is still attached and is not run.\n  if (value === noChange) {\n    return value;\n  }\n  let currentDirective =\n    attributeIndex !== undefined\n      ? (parent as AttributePart).__directives?.[attributeIndex]\n      : (parent as ChildPart | ElementPart | Directive).__directive;\n  const nextDirectiveConstructor = isPrimitive(value)\n    ? undefined\n    : // This property needs to remain unminified.\n      (value as DirectiveResult)['_$litDirective$'];\n  if (currentDirective?.constructor !== nextDirectiveConstructor) {\n    // This property needs to remain unminified.\n    currentDirective?.['_$notifyDirectiveConnectionChanged']?.(false);\n    if (nextDirectiveConstructor === undefined) {\n      currentDirective = undefined;\n    } else {\n      currentDirective = new nextDirectiveConstructor(part as PartInfo);\n      currentDirective._$initialize(part, parent, attributeIndex);\n    }\n    if (attributeIndex !== undefined) {\n      ((parent as AttributePart).__directives ??= [])[attributeIndex] =\n        currentDirective;\n    } else {\n      (parent as ChildPart | Directive).__directive = currentDirective;\n    }\n  }\n  if (currentDirective !== undefined) {\n    value = resolveDirective(\n      part,\n      currentDirective._$resolve(part, (value as DirectiveResult).values),\n      currentDirective,\n      attributeIndex\n    );\n  }\n  return value;\n}\n\n/**\n * An updateable instance of a Template. Holds references to the Parts used to\n * update the template instance.\n */\nclass TemplateInstance implements Disconnectable {\n  /** @internal */\n  _$template: Template;\n  /** @internal */\n  _parts: Array<Part | undefined> = [];\n\n  /** @internal */\n  _$parent: ChildPart;\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  constructor(template: Template, parent: ChildPart) {\n    this._$template = template;\n    this._$parent = parent;\n  }\n\n  // Called by ChildPart parentNode getter\n  get parentNode() {\n    return this._$parent.parentNode;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  // This method is separate from the constructor because we need to return a\n  // DocumentFragment and we don't want to hold onto it with an instance field.\n  _clone(options: RenderOptions | undefined) {\n    const {\n      el: {content},\n      parts: parts,\n    } = this._$template;\n    const fragment = (options?.creationScope ?? d).importNode(content, true);\n    walker.currentNode = fragment;\n\n    let node = walker.nextNode()!;\n    let nodeIndex = 0;\n    let partIndex = 0;\n    let templatePart = parts[0];\n\n    while (templatePart !== undefined) {\n      if (nodeIndex === templatePart.index) {\n        let part: Part | undefined;\n        if (templatePart.type === CHILD_PART) {\n          part = new ChildPart(\n            node as HTMLElement,\n            node.nextSibling,\n            this,\n            options\n          );\n        } else if (templatePart.type === ATTRIBUTE_PART) {\n          part = new templatePart.ctor(\n            node as HTMLElement,\n            templatePart.name,\n            templatePart.strings,\n            this,\n            options\n          );\n        } else if (templatePart.type === ELEMENT_PART) {\n          part = new ElementPart(node as HTMLElement, this, options);\n        }\n        this._parts.push(part);\n        templatePart = parts[++partIndex];\n      }\n      if (nodeIndex !== templatePart?.index) {\n        node = walker.nextNode()!;\n        nodeIndex++;\n      }\n    }\n    return fragment;\n  }\n\n  _update(values: Array<unknown>) {\n    let i = 0;\n    for (const part of this._parts) {\n      if (part !== undefined) {\n        debugLogEvent?.({\n          kind: 'set part',\n          part,\n          value: values[i],\n          valueIndex: i,\n          values,\n          templateInstance: this,\n        });\n        if ((part as AttributePart).strings !== undefined) {\n          (part as AttributePart)._$setValue(values, part as AttributePart, i);\n          // The number of values the part consumes is part.strings.length - 1\n          // since values are in between template spans. We increment i by 1\n          // later in the loop, so increment it by part.strings.length - 2 here\n          i += (part as AttributePart).strings!.length - 2;\n        } else {\n          part._$setValue(values[i]);\n        }\n      }\n      i++;\n    }\n  }\n}\n\n/*\n * Parts\n */\ntype AttributeTemplatePart = {\n  readonly type: typeof ATTRIBUTE_PART;\n  readonly index: number;\n  readonly name: string;\n  /** @internal */\n  readonly ctor: typeof AttributePart;\n  /** @internal */\n  readonly strings: ReadonlyArray<string>;\n};\ntype NodeTemplatePart = {\n  readonly type: typeof CHILD_PART;\n  readonly index: number;\n};\ntype ElementTemplatePart = {\n  readonly type: typeof ELEMENT_PART;\n  readonly index: number;\n};\ntype CommentTemplatePart = {\n  readonly type: typeof COMMENT_PART;\n  readonly index: number;\n};\n\n/**\n * A TemplatePart represents a dynamic part in a template, before the template\n * is instantiated. When a template is instantiated Parts are created from\n * TemplateParts.\n */\ntype TemplatePart =\n  | NodeTemplatePart\n  | AttributeTemplatePart\n  | ElementTemplatePart\n  | CommentTemplatePart;\n\nexport type Part =\n  | ChildPart\n  | AttributePart\n  | PropertyPart\n  | BooleanAttributePart\n  | ElementPart\n  | EventPart;\n\nexport type {ChildPart};\nclass ChildPart implements Disconnectable {\n  readonly type = CHILD_PART;\n  readonly options: RenderOptions | undefined;\n  _$committedValue: unknown = nothing;\n  /** @internal */\n  __directive?: Directive;\n  /** @internal */\n  _$startNode: ChildNode;\n  /** @internal */\n  _$endNode: ChildNode | null;\n  private _textSanitizer: ValueSanitizer | undefined;\n  /** @internal */\n  _$parent: Disconnectable | undefined;\n  /**\n   * Connection state for RootParts only (i.e. ChildPart without _$parent\n   * returned from top-level `render`). This field is unsed otherwise. The\n   * intention would clearer if we made `RootPart` a subclass of `ChildPart`\n   * with this field (and a different _$isConnected getter), but the subclass\n   * caused a perf regression, possibly due to making call sites polymorphic.\n   * @internal\n   */\n  __isConnected: boolean;\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    // ChildParts that are not at the root should always be created with a\n    // parent; only RootChildNode's won't, so they return the local isConnected\n    // state\n    return this._$parent?._$isConnected ?? this.__isConnected;\n  }\n\n  // The following fields will be patched onto ChildParts when required by\n  // AsyncDirective\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n  /** @internal */\n  _$notifyConnectionChanged?(\n    isConnected: boolean,\n    removeFromParent?: boolean,\n    from?: number\n  ): void;\n  /** @internal */\n  _$reparentDisconnectables?(parent: Disconnectable): void;\n\n  constructor(\n    startNode: ChildNode,\n    endNode: ChildNode | null,\n    parent: TemplateInstance | ChildPart | undefined,\n    options: RenderOptions | undefined\n  ) {\n    this._$startNode = startNode;\n    this._$endNode = endNode;\n    this._$parent = parent;\n    this.options = options;\n    // Note __isConnected is only ever accessed on RootParts (i.e. when there is\n    // no _$parent); the value on a non-root-part is \"don't care\", but checking\n    // for parent would be more code\n    this.__isConnected = options?.isConnected ?? true;\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      // Explicitly initialize for consistent class shape.\n      this._textSanitizer = undefined;\n    }\n  }\n\n  /**\n   * The parent node into which the part renders its content.\n   *\n   * A ChildPart's content consists of a range of adjacent child nodes of\n   * `.parentNode`, possibly bordered by 'marker nodes' (`.startNode` and\n   * `.endNode`).\n   *\n   * - If both `.startNode` and `.endNode` are non-null, then the part's content\n   * consists of all siblings between `.startNode` and `.endNode`, exclusively.\n   *\n   * - If `.startNode` is non-null but `.endNode` is null, then the part's\n   * content consists of all siblings following `.startNode`, up to and\n   * including the last child of `.parentNode`. If `.endNode` is non-null, then\n   * `.startNode` will always be non-null.\n   *\n   * - If both `.endNode` and `.startNode` are null, then the part's content\n   * consists of all child nodes of `.parentNode`.\n   */\n  get parentNode(): Node {\n    let parentNode: Node = wrap(this._$startNode).parentNode!;\n    const parent = this._$parent;\n    if (\n      parent !== undefined &&\n      parentNode.nodeType === 11 /* Node.DOCUMENT_FRAGMENT */\n    ) {\n      // If the parentNode is a DocumentFragment, it may be because the DOM is\n      // still in the cloned fragment during initial render; if so, get the real\n      // parentNode the part will be committed into by asking the parent.\n      parentNode = (parent as ChildPart | TemplateInstance).parentNode;\n    }\n    return parentNode;\n  }\n\n  /**\n   * The part's leading marker node, if any. See `.parentNode` for more\n   * information.\n   */\n  get startNode(): Node | null {\n    return this._$startNode;\n  }\n\n  /**\n   * The part's trailing marker node, if any. See `.parentNode` for more\n   * information.\n   */\n  get endNode(): Node | null {\n    return this._$endNode;\n  }\n\n  _$setValue(value: unknown, directiveParent: DirectiveParent = this): void {\n    if (DEV_MODE && this.parentNode === null) {\n      throw new Error(\n        `This \\`ChildPart\\` has no \\`parentNode\\` and therefore cannot accept a value. This likely means the element containing the part was manipulated in an unsupported way outside of Lit's control such that the part's marker nodes were ejected from DOM. For example, setting the element's \\`innerHTML\\` or \\`textContent\\` can do this.`\n      );\n    }\n    value = resolveDirective(this, value, directiveParent);\n    if (isPrimitive(value)) {\n      // Non-rendering child values. It's important that these do not render\n      // empty text nodes to avoid issues with preventing default <slot>\n      // fallback content.\n      if (value === nothing || value == null || value === '') {\n        if (this._$committedValue !== nothing) {\n          debugLogEvent?.({\n            kind: 'commit nothing to child',\n            start: this._$startNode,\n            end: this._$endNode,\n            parent: this._$parent,\n            options: this.options,\n          });\n          this._$clear();\n        }\n        this._$committedValue = nothing;\n      } else if (value !== this._$committedValue && value !== noChange) {\n        this._commitText(value);\n      }\n      // This property needs to remain unminified.\n    } else if ((value as TemplateResult)['_$litType$'] !== undefined) {\n      this._commitTemplateResult(value as TemplateResult);\n    } else if ((value as Node).nodeType !== undefined) {\n      if (DEV_MODE && this.options?.host === value) {\n        this._commitText(\n          `[probable mistake: rendered a template's host in itself ` +\n            `(commonly caused by writing \\${this} in a template]`\n        );\n        console.warn(\n          `Attempted to render the template host`,\n          value,\n          `inside itself. This is almost always a mistake, and in dev mode `,\n          `we render some warning text. In production however, we'll `,\n          `render it, which will usually result in an error, and sometimes `,\n          `in the element disappearing from the DOM.`\n        );\n        return;\n      }\n      this._commitNode(value as Node);\n    } else if (isIterable(value)) {\n      this._commitIterable(value);\n    } else {\n      // Fallback, will render the string representation\n      this._commitText(value);\n    }\n  }\n\n  private _insert<T extends Node>(node: T, ref = this._$endNode) {\n    return wrap(wrap(this._$startNode).parentNode!).insertBefore(node, ref);\n  }\n\n  private _commitNode(value: Node): void {\n    if (this._$committedValue !== value) {\n      this._$clear();\n      if (\n        ENABLE_EXTRA_SECURITY_HOOKS &&\n        sanitizerFactoryInternal !== noopSanitizer\n      ) {\n        const parentNodeName = this._$startNode.parentNode?.nodeName;\n        if (parentNodeName === 'STYLE' || parentNodeName === 'SCRIPT') {\n          let message = 'Forbidden';\n          if (DEV_MODE) {\n            if (parentNodeName === 'STYLE') {\n              message =\n                `Lit does not support binding inside style nodes. ` +\n                `This is a security risk, as style injection attacks can ` +\n                `exfiltrate data and spoof UIs. ` +\n                `Consider instead using css\\`...\\` literals ` +\n                `to compose styles, and make do dynamic styling with ` +\n                `css custom properties, ::parts, <slot>s, ` +\n                `and by mutating the DOM rather than stylesheets.`;\n            } else {\n              message =\n                `Lit does not support binding inside script nodes. ` +\n                `This is a security risk, as it could allow arbitrary ` +\n                `code execution.`;\n            }\n          }\n          throw new Error(message);\n        }\n      }\n      debugLogEvent?.({\n        kind: 'commit node',\n        start: this._$startNode,\n        parent: this._$parent,\n        value: value,\n        options: this.options,\n      });\n      this._$committedValue = this._insert(value);\n    }\n  }\n\n  private _commitText(value: unknown): void {\n    // If the committed value is a primitive it means we called _commitText on\n    // the previous render, and we know that this._$startNode.nextSibling is a\n    // Text node. We can now just replace the text content (.data) of the node.\n    if (\n      this._$committedValue !== nothing &&\n      isPrimitive(this._$committedValue)\n    ) {\n      const node = wrap(this._$startNode).nextSibling as Text;\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        if (this._textSanitizer === undefined) {\n          this._textSanitizer = createSanitizer(node, 'data', 'property');\n        }\n        value = this._textSanitizer(value);\n      }\n      debugLogEvent?.({\n        kind: 'commit text',\n        node,\n        value,\n        options: this.options,\n      });\n      (node as Text).data = value as string;\n    } else {\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        const textNode = document.createTextNode('');\n        this._commitNode(textNode);\n        // When setting text content, for security purposes it matters a lot\n        // what the parent is. For example, <style> and <script> need to be\n        // handled with care, while <span> does not. So first we need to put a\n        // text node into the document, then we can sanitize its content.\n        if (this._textSanitizer === undefined) {\n          this._textSanitizer = createSanitizer(textNode, 'data', 'property');\n        }\n        value = this._textSanitizer(value);\n        debugLogEvent?.({\n          kind: 'commit text',\n          node: textNode,\n          value,\n          options: this.options,\n        });\n        textNode.data = value as string;\n      } else {\n        this._commitNode(d.createTextNode(value as string));\n        debugLogEvent?.({\n          kind: 'commit text',\n          node: wrap(this._$startNode).nextSibling as Text,\n          value,\n          options: this.options,\n        });\n      }\n    }\n    this._$committedValue = value;\n  }\n\n  private _commitTemplateResult(\n    result: TemplateResult | CompiledTemplateResult\n  ): void {\n    // This property needs to remain unminified.\n    const {values, ['_$litType$']: type} = result;\n    // If $litType$ is a number, result is a plain TemplateResult and we get\n    // the template from the template cache. If not, result is a\n    // CompiledTemplateResult and _$litType$ is a CompiledTemplate and we need\n    // to create the <template> element the first time we see it.\n    const template: Template | CompiledTemplate =\n      typeof type === 'number'\n        ? this._$getTemplate(result as TemplateResult)\n        : (type.el === undefined &&\n            (type.el = Template.createElement(type.h, this.options)),\n          type);\n\n    if ((this._$committedValue as TemplateInstance)?._$template === template) {\n      debugLogEvent?.({\n        kind: 'template updating',\n        template,\n        instance: this._$committedValue as TemplateInstance,\n        parts: (this._$committedValue as TemplateInstance)._parts,\n        options: this.options,\n        values,\n      });\n      (this._$committedValue as TemplateInstance)._update(values);\n    } else {\n      const instance = new TemplateInstance(template as Template, this);\n      const fragment = instance._clone(this.options);\n      debugLogEvent?.({\n        kind: 'template instantiated',\n        template,\n        instance,\n        parts: instance._parts,\n        options: this.options,\n        fragment,\n        values,\n      });\n      instance._update(values);\n      debugLogEvent?.({\n        kind: 'template instantiated and updated',\n        template,\n        instance,\n        parts: instance._parts,\n        options: this.options,\n        fragment,\n        values,\n      });\n      this._commitNode(fragment);\n      this._$committedValue = instance;\n    }\n  }\n\n  // Overridden via `litHtmlPolyfillSupport` to provide platform support.\n  /** @internal */\n  _$getTemplate(result: TemplateResult) {\n    let template = templateCache.get(result.strings);\n    if (template === undefined) {\n      templateCache.set(result.strings, (template = new Template(result)));\n    }\n    return template;\n  }\n\n  private _commitIterable(value: Iterable<unknown>): void {\n    // For an Iterable, we create a new InstancePart per item, then set its\n    // value to the item. This is a little bit of overhead for every item in\n    // an Iterable, but it lets us recurse easily and efficiently update Arrays\n    // of TemplateResults that will be commonly returned from expressions like:\n    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n\n    // If value is an array, then the previous render was of an\n    // iterable and value will contain the ChildParts from the previous\n    // render. If value is not an array, clear this part and make a new\n    // array for ChildParts.\n    if (!isArray(this._$committedValue)) {\n      this._$committedValue = [];\n      this._$clear();\n    }\n\n    // Lets us keep track of how many items we stamped so we can clear leftover\n    // items from a previous render\n    const itemParts = this._$committedValue as ChildPart[];\n    let partIndex = 0;\n    let itemPart: ChildPart | undefined;\n\n    for (const item of value) {\n      if (partIndex === itemParts.length) {\n        // If no existing part, create a new one\n        // TODO (justinfagnani): test perf impact of always creating two parts\n        // instead of sharing parts between nodes\n        // https://github.com/lit/lit/issues/1266\n        itemParts.push(\n          (itemPart = new ChildPart(\n            this._insert(createMarker()),\n            this._insert(createMarker()),\n            this,\n            this.options\n          ))\n        );\n      } else {\n        // Reuse an existing part\n        itemPart = itemParts[partIndex];\n      }\n      itemPart._$setValue(item);\n      partIndex++;\n    }\n\n    if (partIndex < itemParts.length) {\n      // itemParts always have end nodes\n      this._$clear(\n        itemPart && wrap(itemPart._$endNode!).nextSibling,\n        partIndex\n      );\n      // Truncate the parts array so _value reflects the current state\n      itemParts.length = partIndex;\n    }\n  }\n\n  /**\n   * Removes the nodes contained within this Part from the DOM.\n   *\n   * @param start Start node to clear from, for clearing a subset of the part's\n   *     DOM (used when truncating iterables)\n   * @param from  When `start` is specified, the index within the iterable from\n   *     which ChildParts are being removed, used for disconnecting directives in\n   *     those Parts.\n   *\n   * @internal\n   */\n  _$clear(\n    start: ChildNode | null = wrap(this._$startNode).nextSibling,\n    from?: number\n  ) {\n    this._$notifyConnectionChanged?.(false, true, from);\n    while (start && start !== this._$endNode) {\n      const n = wrap(start!).nextSibling;\n      (wrap(start!) as Element).remove();\n      start = n;\n    }\n  }\n  /**\n   * Implementation of RootPart's `isConnected`. Note that this metod\n   * should only be called on `RootPart`s (the `ChildPart` returned from a\n   * top-level `render()` call). It has no effect on non-root ChildParts.\n   * @param isConnected Whether to set\n   * @internal\n   */\n  setConnected(isConnected: boolean) {\n    if (this._$parent === undefined) {\n      this.__isConnected = isConnected;\n      this._$notifyConnectionChanged?.(isConnected);\n    } else if (DEV_MODE) {\n      throw new Error(\n        'part.setConnected() may only be called on a ' +\n          'RootPart returned from render().'\n      );\n    }\n  }\n}\n\n/**\n * A top-level `ChildPart` returned from `render` that manages the connected\n * state of `AsyncDirective`s created throughout the tree below it.\n */\nexport interface RootPart extends ChildPart {\n  /**\n   * Sets the connection state for `AsyncDirective`s contained within this root\n   * ChildPart.\n   *\n   * lit-html does not automatically monitor the connectedness of DOM rendered;\n   * as such, it is the responsibility of the caller to `render` to ensure that\n   * `part.setConnected(false)` is called before the part object is potentially\n   * discarded, to ensure that `AsyncDirective`s have a chance to dispose of\n   * any resources being held. If a `RootPart` that was prevously\n   * disconnected is subsequently re-connected (and its `AsyncDirective`s should\n   * re-connect), `setConnected(true)` should be called.\n   *\n   * @param isConnected Whether directives within this tree should be connected\n   * or not\n   */\n  setConnected(isConnected: boolean): void;\n}\n\nexport type {AttributePart};\nclass AttributePart implements Disconnectable {\n  readonly type = ATTRIBUTE_PART as\n    | typeof ATTRIBUTE_PART\n    | typeof PROPERTY_PART\n    | typeof BOOLEAN_ATTRIBUTE_PART\n    | typeof EVENT_PART;\n  readonly element: HTMLElement;\n  readonly name: string;\n  readonly options: RenderOptions | undefined;\n\n  /**\n   * If this attribute part represents an interpolation, this contains the\n   * static strings of the interpolation. For single-value, complete bindings,\n   * this is undefined.\n   */\n  readonly strings?: ReadonlyArray<string>;\n  /** @internal */\n  _$committedValue: unknown | Array<unknown> = nothing;\n  /** @internal */\n  __directives?: Array<Directive | undefined>;\n  /** @internal */\n  _$parent: Disconnectable;\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  protected _sanitizer: ValueSanitizer | undefined;\n\n  get tagName() {\n    return this.element.tagName;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  constructor(\n    element: HTMLElement,\n    name: string,\n    strings: ReadonlyArray<string>,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    this.element = element;\n    this.name = name;\n    this._$parent = parent;\n    this.options = options;\n    if (strings.length > 2 || strings[0] !== '' || strings[1] !== '') {\n      this._$committedValue = new Array(strings.length - 1).fill(new String());\n      this.strings = strings;\n    } else {\n      this._$committedValue = nothing;\n    }\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      this._sanitizer = undefined;\n    }\n  }\n\n  /**\n   * Sets the value of this part by resolving the value from possibly multiple\n   * values and static strings and committing it to the DOM.\n   * If this part is single-valued, `this._strings` will be undefined, and the\n   * method will be called with a single value argument. If this part is\n   * multi-value, `this._strings` will be defined, and the method is called\n   * with the value array of the part's owning TemplateInstance, and an offset\n   * into the value array from which the values should be read.\n   * This method is overloaded this way to eliminate short-lived array slices\n   * of the template instance values, and allow a fast-path for single-valued\n   * parts.\n   *\n   * @param value The part value, or an array of values for multi-valued parts\n   * @param valueIndex the index to start reading values from. `undefined` for\n   *   single-valued parts\n   * @param noCommit causes the part to not commit its value to the DOM. Used\n   *   in hydration to prime attribute parts with their first-rendered value,\n   *   but not set the attribute, and in SSR to no-op the DOM operation and\n   *   capture the value for serialization.\n   *\n   * @internal\n   */\n  _$setValue(\n    value: unknown | Array<unknown>,\n    directiveParent: DirectiveParent = this,\n    valueIndex?: number,\n    noCommit?: boolean\n  ) {\n    const strings = this.strings;\n\n    // Whether any of the values has changed, for dirty-checking\n    let change = false;\n\n    if (strings === undefined) {\n      // Single-value binding case\n      value = resolveDirective(this, value, directiveParent, 0);\n      change =\n        !isPrimitive(value) ||\n        (value !== this._$committedValue && value !== noChange);\n      if (change) {\n        this._$committedValue = value;\n      }\n    } else {\n      // Interpolation case\n      const values = value as Array<unknown>;\n      value = strings[0];\n\n      let i, v;\n      for (i = 0; i < strings.length - 1; i++) {\n        v = resolveDirective(this, values[valueIndex! + i], directiveParent, i);\n\n        if (v === noChange) {\n          // If the user-provided value is `noChange`, use the previous value\n          v = (this._$committedValue as Array<unknown>)[i];\n        }\n        change ||=\n          !isPrimitive(v) || v !== (this._$committedValue as Array<unknown>)[i];\n        if (v === nothing) {\n          value = nothing;\n        } else if (value !== nothing) {\n          value += (v ?? '') + strings[i + 1];\n        }\n        // We always record each value, even if one is `nothing`, for future\n        // change detection.\n        (this._$committedValue as Array<unknown>)[i] = v;\n      }\n    }\n    if (change && !noCommit) {\n      this._commitValue(value);\n    }\n  }\n\n  /** @internal */\n  _commitValue(value: unknown) {\n    if (value === nothing) {\n      (wrap(this.element) as Element).removeAttribute(this.name);\n    } else {\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        if (this._sanitizer === undefined) {\n          this._sanitizer = sanitizerFactoryInternal(\n            this.element,\n            this.name,\n            'attribute'\n          );\n        }\n        value = this._sanitizer(value ?? '');\n      }\n      debugLogEvent?.({\n        kind: 'commit attribute',\n        element: this.element,\n        name: this.name,\n        value,\n        options: this.options,\n      });\n      (wrap(this.element) as Element).setAttribute(\n        this.name,\n        (value ?? '') as string\n      );\n    }\n  }\n}\n\nexport type {PropertyPart};\nclass PropertyPart extends AttributePart {\n  override readonly type = PROPERTY_PART;\n\n  /** @internal */\n  override _commitValue(value: unknown) {\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      if (this._sanitizer === undefined) {\n        this._sanitizer = sanitizerFactoryInternal(\n          this.element,\n          this.name,\n          'property'\n        );\n      }\n      value = this._sanitizer(value);\n    }\n    debugLogEvent?.({\n      kind: 'commit property',\n      element: this.element,\n      name: this.name,\n      value,\n      options: this.options,\n    });\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (this.element as any)[this.name] = value === nothing ? undefined : value;\n  }\n}\n\n// Temporary workaround for https://crbug.com/993268\n// Currently, any attribute starting with \"on\" is considered to be a\n// TrustedScript source. Such boolean attributes must be set to the equivalent\n// trusted emptyScript value.\nconst emptyStringForBooleanAttribute = trustedTypes\n  ? (trustedTypes.emptyScript as unknown as '')\n  : '';\n\nexport type {BooleanAttributePart};\nclass BooleanAttributePart extends AttributePart {\n  override readonly type = BOOLEAN_ATTRIBUTE_PART;\n\n  /** @internal */\n  override _commitValue(value: unknown) {\n    debugLogEvent?.({\n      kind: 'commit boolean attribute',\n      element: this.element,\n      name: this.name,\n      value: !!(value && value !== nothing),\n      options: this.options,\n    });\n    if (value && value !== nothing) {\n      (wrap(this.element) as Element).setAttribute(\n        this.name,\n        emptyStringForBooleanAttribute\n      );\n    } else {\n      (wrap(this.element) as Element).removeAttribute(this.name);\n    }\n  }\n}\n\ntype EventListenerWithOptions = EventListenerOrEventListenerObject &\n  Partial<AddEventListenerOptions>;\n\n/**\n * An AttributePart that manages an event listener via add/removeEventListener.\n *\n * This part works by adding itself as the event listener on an element, then\n * delegating to the value passed to it. This reduces the number of calls to\n * add/removeEventListener if the listener changes frequently, such as when an\n * inline function is used as a listener.\n *\n * Because event options are passed when adding listeners, we must take case\n * to add and remove the part as a listener when the event options change.\n */\nexport type {EventPart};\nclass EventPart extends AttributePart {\n  override readonly type = EVENT_PART;\n\n  constructor(\n    element: HTMLElement,\n    name: string,\n    strings: ReadonlyArray<string>,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    super(element, name, strings, parent, options);\n\n    if (DEV_MODE && this.strings !== undefined) {\n      throw new Error(\n        `A \\`<${element.localName}>\\` has a \\`@${name}=...\\` listener with ` +\n          'invalid content. Event listeners in templates must have exactly ' +\n          'one expression and no surrounding text.'\n      );\n    }\n  }\n\n  // EventPart does not use the base _$setValue/_resolveValue implementation\n  // since the dirty checking is more complex\n  /** @internal */\n  override _$setValue(\n    newListener: unknown,\n    directiveParent: DirectiveParent = this\n  ) {\n    newListener =\n      resolveDirective(this, newListener, directiveParent, 0) ?? nothing;\n    if (newListener === noChange) {\n      return;\n    }\n    const oldListener = this._$committedValue;\n\n    // If the new value is nothing or any options change we have to remove the\n    // part as a listener.\n    const shouldRemoveListener =\n      (newListener === nothing && oldListener !== nothing) ||\n      (newListener as EventListenerWithOptions).capture !==\n        (oldListener as EventListenerWithOptions).capture ||\n      (newListener as EventListenerWithOptions).once !==\n        (oldListener as EventListenerWithOptions).once ||\n      (newListener as EventListenerWithOptions).passive !==\n        (oldListener as EventListenerWithOptions).passive;\n\n    // If the new value is not nothing and we removed the listener, we have\n    // to add the part as a listener.\n    const shouldAddListener =\n      newListener !== nothing &&\n      (oldListener === nothing || shouldRemoveListener);\n\n    debugLogEvent?.({\n      kind: 'commit event listener',\n      element: this.element,\n      name: this.name,\n      value: newListener,\n      options: this.options,\n      removeListener: shouldRemoveListener,\n      addListener: shouldAddListener,\n      oldListener,\n    });\n    if (shouldRemoveListener) {\n      this.element.removeEventListener(\n        this.name,\n        this,\n        oldListener as EventListenerWithOptions\n      );\n    }\n    if (shouldAddListener) {\n      // Beware: IE11 and Chrome 41 don't like using the listener as the\n      // options object. Figure out how to deal w/ this in IE11 - maybe\n      // patch addEventListener?\n      this.element.addEventListener(\n        this.name,\n        this,\n        newListener as EventListenerWithOptions\n      );\n    }\n    this._$committedValue = newListener;\n  }\n\n  handleEvent(event: Event) {\n    if (typeof this._$committedValue === 'function') {\n      this._$committedValue.call(this.options?.host ?? this.element, event);\n    } else {\n      (this._$committedValue as EventListenerObject).handleEvent(event);\n    }\n  }\n}\n\nexport type {ElementPart};\nclass ElementPart implements Disconnectable {\n  readonly type = ELEMENT_PART;\n\n  /** @internal */\n  __directive?: Directive;\n\n  // This is to ensure that every Part has a _$committedValue\n  _$committedValue: undefined;\n\n  /** @internal */\n  _$parent!: Disconnectable;\n\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  options: RenderOptions | undefined;\n\n  constructor(\n    public element: Element,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    this._$parent = parent;\n    this.options = options;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  _$setValue(value: unknown): void {\n    debugLogEvent?.({\n      kind: 'commit to element binding',\n      element: this.element,\n      value,\n      options: this.options,\n    });\n    resolveDirective(this, value);\n  }\n}\n\n/**\n * END USERS SHOULD NOT RELY ON THIS OBJECT.\n *\n * Private exports for use by other Lit packages, not intended for use by\n * external users.\n *\n * We currently do not make a mangled rollup build of the lit-ssr code. In order\n * to keep a number of (otherwise private) top-level exports  mangled in the\n * client side code, we export a _$LH object containing those members (or\n * helper methods for accessing private fields of those members), and then\n * re-export them for use in lit-ssr. This keeps lit-ssr agnostic to whether the\n * client-side code is being used in `dev` mode or `prod` mode.\n *\n * This has a unique name, to disambiguate it from private exports in\n * lit-element, which re-exports all of lit-html.\n *\n * @private\n */\nexport const _$LH = {\n  // Used in lit-ssr\n  _boundAttributeSuffix: boundAttributeSuffix,\n  _marker: marker,\n  _markerMatch: markerMatch,\n  _HTML_RESULT: HTML_RESULT,\n  _getTemplateHtml: getTemplateHtml,\n  // Used in hydrate\n  _TemplateInstance: TemplateInstance,\n  _isIterable: isIterable,\n  _resolveDirective: resolveDirective,\n  // Used in tests and private-ssr-support\n  _ChildPart: ChildPart,\n  _AttributePart: AttributePart,\n  _BooleanAttributePart: BooleanAttributePart,\n  _EventPart: EventPart,\n  _PropertyPart: PropertyPart,\n  _ElementPart: ElementPart,\n};\n\n// Apply polyfills if available\nconst polyfillSupport = DEV_MODE\n  ? global.litHtmlPolyfillSupportDevMode\n  : global.litHtmlPolyfillSupport;\npolyfillSupport?.(Template, ChildPart);\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n(global.litHtmlVersions ??= []).push('2.6.1');\nif (DEV_MODE && global.litHtmlVersions.length > 1) {\n  issueWarning!(\n    'multiple-versions',\n    `Multiple versions of Lit loaded. ` +\n      `Loading multiple versions is not recommended.`\n  );\n}\n\n/**\n * Renders a value, usually a lit-html TemplateResult, to the container.\n *\n * This example renders the text \"Hello, Zoe!\" inside a paragraph tag, appending\n * it to the container `document.body`.\n *\n * ```js\n * import {html, render} from 'lit';\n *\n * const name = \"Zoe\";\n * render(html`<p>Hello, ${name}!</p>`, document.body);\n * ```\n *\n * @param value Any [renderable\n *   value](https://lit.dev/docs/templates/expressions/#child-expressions),\n *   typically a {@linkcode TemplateResult} created by evaluating a template tag\n *   like {@linkcode html} or {@linkcode svg}.\n * @param container A DOM container to render to. The first render will append\n *   the rendered value to the container, and subsequent renders will\n *   efficiently update the rendered value if the same result type was\n *   previously rendered there.\n * @param options See {@linkcode RenderOptions} for options documentation.\n * @see\n * {@link https://lit.dev/docs/libraries/standalone-templates/#rendering-lit-html-templates| Rendering Lit HTML Templates}\n */\nexport const render = (\n  value: unknown,\n  container: HTMLElement | DocumentFragment,\n  options?: RenderOptions\n): RootPart => {\n  if (DEV_MODE && container == null) {\n    // Give a clearer error message than\n    //     Uncaught TypeError: Cannot read properties of null (reading\n    //     '_$litPart$')\n    // which reads like an internal Lit error.\n    throw new TypeError(`The container to render into may not be ${container}`);\n  }\n  const renderId = DEV_MODE ? debugLogRenderId++ : 0;\n  const partOwnerNode = options?.renderBefore ?? container;\n  // This property needs to remain unminified.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let part: ChildPart = (partOwnerNode as any)['_$litPart$'];\n  debugLogEvent?.({\n    kind: 'begin render',\n    id: renderId,\n    value,\n    container,\n    options,\n    part,\n  });\n  if (part === undefined) {\n    const endNode = options?.renderBefore ?? null;\n    // This property needs to remain unminified.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (partOwnerNode as any)['_$litPart$'] = part = new ChildPart(\n      container.insertBefore(createMarker(), endNode),\n      endNode,\n      undefined,\n      options ?? {}\n    );\n  }\n  part._$setValue(value);\n  debugLogEvent?.({\n    kind: 'end render',\n    id: renderId,\n    value,\n    container,\n    options,\n    part,\n  });\n  return part as RootPart;\n};\n\nif (ENABLE_EXTRA_SECURITY_HOOKS) {\n  render.setSanitizer = setSanitizer;\n  render.createSanitizer = createSanitizer;\n  if (DEV_MODE) {\n    render._testOnlyClearSanitizerFactoryDoNotCallOrElse =\n      _testOnlyClearSanitizerFactoryDoNotCallOrElse;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * The main LitElement module, which defines the {@linkcode LitElement} base\n * class and related APIs.\n *\n *  LitElement components can define a template and a set of observed\n * properties. Changing an observed property triggers a re-render of the\n * element.\n *\n *  Import {@linkcode LitElement} and {@linkcode html} from this module to\n * create a component:\n *\n *  ```js\n * import {LitElement, html} from 'lit-element';\n *\n * class MyElement extends LitElement {\n *\n *   // Declare observed properties\n *   static get properties() {\n *     return {\n *       adjective: {}\n *     }\n *   }\n *\n *   constructor() {\n *     this.adjective = 'awesome';\n *   }\n *\n *   // Define the element's template\n *   render() {\n *     return html`<p>your ${adjective} template here</p>`;\n *   }\n * }\n *\n * customElements.define('my-element', MyElement);\n * ```\n *\n * `LitElement` extends {@linkcode ReactiveElement} and adds lit-html\n * templating. The `ReactiveElement` class is provided for users that want to\n * build their own custom element base classes that don't use lit-html.\n *\n * @packageDocumentation\n */\nimport {PropertyValues, ReactiveElement} from '@lit/reactive-element';\nimport {render, RenderOptions, noChange, RootPart} from 'lit-html';\nexport * from '@lit/reactive-element';\nexport * from 'lit-html';\n\nimport {LitUnstable} from 'lit-html';\nimport {ReactiveUnstable} from '@lit/reactive-element';\n\n/**\n * Contains types that are part of the unstable debug API.\n *\n * Everything in this API is not stable and may change or be removed in the future,\n * even on patch releases.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace Unstable {\n  /**\n   * When Lit is running in dev mode and `window.emitLitDebugLogEvents` is true,\n   * we will emit 'lit-debug' events to window, with live details about the update and render\n   * lifecycle. These can be useful for writing debug tooling and visualizations.\n   *\n   * Please be aware that running with window.emitLitDebugLogEvents has performance overhead,\n   * making certain operations that are normally very cheap (like a no-op render) much slower,\n   * because we must copy data and dispatch events.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace DebugLog {\n    export type Entry =\n      | LitUnstable.DebugLog.Entry\n      | ReactiveUnstable.DebugLog.Entry;\n  }\n}\n\n// For backwards compatibility export ReactiveElement as UpdatingElement. Note,\n// IE transpilation requires exporting like this.\nexport const UpdatingElement = ReactiveElement;\n\nconst DEV_MODE = true;\n\nlet issueWarning: (code: string, warning: string) => void;\n\nif (DEV_MODE) {\n  // Ensure warnings are issued only 1x, even if multiple versions of Lit\n  // are loaded.\n  const issuedWarnings: Set<string | undefined> =\n    (globalThis.litIssuedWarnings ??= new Set());\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += ` See https://lit.dev/msg/${code} for more information.`;\n    if (!issuedWarnings.has(warning)) {\n      console.warn(warning);\n      issuedWarnings.add(warning);\n    }\n  };\n}\n\n/**\n * Base element class that manages element properties and attributes, and\n * renders a lit-html template.\n *\n * To define a component, subclass `LitElement` and implement a\n * `render` method to provide the component's template. Define properties\n * using the {@linkcode LitElement.properties properties} property or the\n * {@linkcode property} decorator.\n */\nexport class LitElement extends ReactiveElement {\n  /**\n   * Ensure this class is marked as `finalized` as an optimization ensuring\n   * it will not needlessly try to `finalize`.\n   *\n   * Note this property name is a string to prevent breaking Closure JS Compiler\n   * optimizations. See @lit/reactive-element for more information.\n   */\n  protected static override ['finalized'] = true;\n\n  // This property needs to remain unminified.\n  static ['_$litElement$'] = true;\n\n  /**\n   * @category rendering\n   */\n  readonly renderOptions: RenderOptions = {host: this};\n\n  private __childPart: RootPart | undefined = undefined;\n\n  /**\n   * @category rendering\n   */\n  protected override createRenderRoot() {\n    const renderRoot = super.createRenderRoot();\n    // When adoptedStyleSheets are shimmed, they are inserted into the\n    // shadowRoot by createRenderRoot. Adjust the renderBefore node so that\n    // any styles in Lit content render before adoptedStyleSheets. This is\n    // important so that adoptedStyleSheets have precedence over styles in\n    // the shadowRoot.\n    this.renderOptions.renderBefore ??= renderRoot!.firstChild as ChildNode;\n    return renderRoot;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes\n   * and calls `render` to render DOM via lit-html. Setting properties inside\n   * this method will *not* trigger another update.\n   * @param changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected override update(changedProperties: PropertyValues) {\n    // Setting properties in `render` should not trigger an update. Since\n    // updates are allowed after super.update, it's important to call `render`\n    // before that.\n    const value = this.render();\n    if (!this.hasUpdated) {\n      this.renderOptions.isConnected = this.isConnected;\n    }\n    super.update(changedProperties);\n    this.__childPart = render(value, this.renderRoot, this.renderOptions);\n  }\n\n  /**\n   * Invoked when the component is added to the document's DOM.\n   *\n   * In `connectedCallback()` you should setup tasks that should only occur when\n   * the element is connected to the document. The most common of these is\n   * adding event listeners to nodes external to the element, like a keydown\n   * event handler added to the window.\n   *\n   * ```ts\n   * connectedCallback() {\n   *   super.connectedCallback();\n   *   addEventListener('keydown', this._handleKeydown);\n   * }\n   * ```\n   *\n   * Typically, anything done in `connectedCallback()` should be undone when the\n   * element is disconnected, in `disconnectedCallback()`.\n   *\n   * @category lifecycle\n   */\n  override connectedCallback() {\n    super.connectedCallback();\n    this.__childPart?.setConnected(true);\n  }\n\n  /**\n   * Invoked when the component is removed from the document's DOM.\n   *\n   * This callback is the main signal to the element that it may no longer be\n   * used. `disconnectedCallback()` should ensure that nothing is holding a\n   * reference to the element (such as event listeners added to nodes external\n   * to the element), so that it is free to be garbage collected.\n   *\n   * ```ts\n   * disconnectedCallback() {\n   *   super.disconnectedCallback();\n   *   window.removeEventListener('keydown', this._handleKeydown);\n   * }\n   * ```\n   *\n   * An element may be re-connected after being disconnected.\n   *\n   * @category lifecycle\n   */\n  override disconnectedCallback() {\n    super.disconnectedCallback();\n    this.__childPart?.setConnected(false);\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method may return\n   * any value renderable by lit-html's `ChildPart` - typically a\n   * `TemplateResult`. Setting properties inside this method will *not* trigger\n   * the element to update.\n   * @category rendering\n   */\n  protected render(): unknown {\n    return noChange;\n  }\n}\n\n// Install hydration if available\nglobalThis.litElementHydrateSupport?.({LitElement});\n\n// Apply polyfills if available\nconst polyfillSupport = DEV_MODE\n  ? globalThis.litElementPolyfillSupportDevMode\n  : globalThis.litElementPolyfillSupport;\npolyfillSupport?.({LitElement});\n\n// DEV mode warnings\nif (DEV_MODE) {\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  // Note, for compatibility with closure compilation, this access\n  // needs to be as a string property index.\n  (LitElement as any)['finalize'] = function (this: typeof LitElement) {\n    const finalized = (ReactiveElement as any).finalize.call(this);\n    if (!finalized) {\n      return false;\n    }\n    const warnRemovedOrRenamed = (obj: any, name: string, renamed = false) => {\n      if (obj.hasOwnProperty(name)) {\n        const ctorName = (typeof obj === 'function' ? obj : obj.constructor)\n          .name;\n        issueWarning(\n          renamed ? 'renamed-api' : 'removed-api',\n          `\\`${name}\\` is implemented on class ${ctorName}. It ` +\n            `has been ${renamed ? 'renamed' : 'removed'} ` +\n            `in this version of LitElement.`\n        );\n      }\n    };\n    warnRemovedOrRenamed(this, 'render');\n    warnRemovedOrRenamed(this, 'getStyles', true);\n    warnRemovedOrRenamed((this as typeof LitElement).prototype, 'adoptStyles');\n    return true;\n  };\n  /* eslint-enable @typescript-eslint/no-explicit-any */\n}\n\n/**\n * END USERS SHOULD NOT RELY ON THIS OBJECT.\n *\n * Private exports for use by other Lit packages, not intended for use by\n * external users.\n *\n * We currently do not make a mangled rollup build of the lit-ssr code. In order\n * to keep a number of (otherwise private) top-level exports  mangled in the\n * client side code, we export a _$LE object containing those members (or\n * helper methods for accessing private fields of those members), and then\n * re-export them for use in lit-ssr. This keeps lit-ssr agnostic to whether the\n * client-side code is being used in `dev` mode or `prod` mode.\n *\n * This has a unique name, to disambiguate it from private exports in\n * lit-html, since this module re-exports all of lit-html.\n *\n * @private\n */\nexport const _$LE = {\n  _$attributeToProperty: (\n    el: LitElement,\n    name: string,\n    value: string | null\n  ) => {\n    // eslint-disable-next-line\n    (el as any)._$attributeToProperty(name, value);\n  },\n  // eslint-disable-next-line\n  _$changedProperties: (el: LitElement) => (el as any)._$changedProperties,\n};\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n(globalThis.litElementVersions ??= []).push('3.2.2');\nif (DEV_MODE && globalThis.litElementVersions.length > 1) {\n  issueWarning!(\n    'multiple-versions',\n    `Multiple versions of Lit loaded. Loading multiple versions ` +\n      `is not recommended.`\n  );\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * @fileoverview\n *\n * This file exports a boolean const whose value will depend on what environment\n * the module is being imported from.\n */\n\nconst NODE_MODE = false;\n\n/**\n * A boolean that will be `true` in server environments like Node, and `false`\n * in browser environments. Note that your server environment or toolchain must\n * support the `\"node\"` export condition for this to be `true`.\n *\n * This can be used when authoring components to change behavior based on\n * whether or not the component is executing in an SSR context.\n */\nexport const isServer = NODE_MODE;\n","/*!\n * iro.js v5.5.2\n * 2016-2021 James Daniel\n * Licensed under MPL 2.0\n * github.com/jaames/iro.js\n */\n\nvar n,u,t,i,r,o,f={},e=[],c=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|^--/i;function s(n,l){for(var u in l){ n[u]=l[u]; }return n}function a(n){var l=n.parentNode;l&&l.removeChild(n);}function h(n,l,u){var t,i,r,o,f=arguments;if(l=s({},l),arguments.length>3){ for(u=[u],t=3;t<arguments.length;t++){ u.push(f[t]); } }if(null!=u&&(l.children=u),null!=n&&null!=n.defaultProps){ for(i in n.defaultProps){ void 0===l[i]&&(l[i]=n.defaultProps[i]); } }return o=l.key,null!=(r=l.ref)&&delete l.ref,null!=o&&delete l.key,v(n,l,o,r)}function v(l,u,t,i){var r={type:l,props:u,key:t,ref:i,__k:null,__p:null,__b:0,__e:null,l:null,__c:null,constructor:void 0};return n.vnode&&n.vnode(r),r}function d(n){return n.children}function y(n){if(null==n||\"boolean\"==typeof n){ return null; }if(\"string\"==typeof n||\"number\"==typeof n){ return v(null,n,null,null); }if(null!=n.__e||null!=n.__c){var l=v(n.type,n.props,n.key,null);return l.__e=n.__e,l}return n}function m(n,l){this.props=n,this.context=l;}function w(n,l){if(null==l){ return n.__p?w(n.__p,n.__p.__k.indexOf(n)+1):null; }for(var u;l<n.__k.length;l++){ if(null!=(u=n.__k[l])&&null!=u.__e){ return u.__e; } }return \"function\"==typeof n.type?w(n):null}function g(n){var l,u;if(null!=(n=n.__p)&&null!=n.__c){for(n.__e=n.__c.base=null,l=0;l<n.__k.length;l++){ if(null!=(u=n.__k[l])&&null!=u.__e){n.__e=n.__c.base=u.__e;break} }return g(n)}}function k(l){(!l.__d&&(l.__d=!0)&&1===u.push(l)||i!==n.debounceRendering)&&(i=n.debounceRendering,(n.debounceRendering||t)(_));}function _(){var n,l,t,i,r,o,f,e;for(u.sort(function(n,l){return l.__v.__b-n.__v.__b});n=u.pop();){ n.__d&&(t=void 0,i=void 0,o=(r=(l=n).__v).__e,f=l.__P,e=l.u,l.u=!1,f&&(t=[],i=$(f,r,s({},r),l.__n,void 0!==f.ownerSVGElement,null,t,e,null==o?w(r):o),j(t,r),i!=o&&g(r))); }}function b(n,l,u,t,i,r,o,c,s){var h,v,p,d,y,m,g,k=u&&u.__k||e,_=k.length;if(c==f&&(c=null!=r?r[0]:_?w(u,0):null),h=0,l.__k=x(l.__k,function(u){if(null!=u){if(u.__p=l,u.__b=l.__b+1,null===(p=k[h])||p&&u.key==p.key&&u.type===p.type){ k[h]=void 0; }else { for(v=0;v<_;v++){if((p=k[v])&&u.key==p.key&&u.type===p.type){k[v]=void 0;break}p=null;} }if(d=$(n,u,p=p||f,t,i,r,o,null,c,s),(v=u.ref)&&p.ref!=v&&(g||(g=[])).push(v,u.__c||d,u),null!=d){if(null==m&&(m=d),null!=u.l){ d=u.l,u.l=null; }else if(r==p||d!=c||null==d.parentNode){n:if(null==c||c.parentNode!==n){ n.appendChild(d); }else{for(y=c,v=0;(y=y.nextSibling)&&v<_;v+=2){ if(y==d){ break n; } }n.insertBefore(d,c);}\"option\"==l.type&&(n.value=\"\");}c=d.nextSibling,\"function\"==typeof l.type&&(l.l=d);}}return h++,u}),l.__e=m,null!=r&&\"function\"!=typeof l.type){ for(h=r.length;h--;){ null!=r[h]&&a(r[h]); } }for(h=_;h--;){ null!=k[h]&&D(k[h],k[h]); }if(g){ for(h=0;h<g.length;h++){ A(g[h],g[++h],g[++h]); } }}function x(n,l,u){if(null==u&&(u=[]),null==n||\"boolean\"==typeof n){ l&&u.push(l(null)); }else if(Array.isArray(n)){ for(var t=0;t<n.length;t++){ x(n[t],l,u); } }else { u.push(l?l(y(n)):n); }return u}function C(n,l,u,t,i){var r;for(r in u){ r in l||N(n,r,null,u[r],t); }for(r in l){ i&&\"function\"!=typeof l[r]||\"value\"===r||\"checked\"===r||u[r]===l[r]||N(n,r,l[r],u[r],t); }}function P(n,l,u){\"-\"===l[0]?n.setProperty(l,u):n[l]=\"number\"==typeof u&&!1===c.test(l)?u+\"px\":null==u?\"\":u;}function N(n,l,u,t,i){var r,o,f,e,c;if(\"key\"===(l=i?\"className\"===l?\"class\":l:\"class\"===l?\"className\":l)||\"children\"===l);else if(\"style\"===l){ if(r=n.style,\"string\"==typeof u){ r.cssText=u; }else{if(\"string\"==typeof t&&(r.cssText=\"\",t=null),t){ for(o in t){ u&&o in u||P(r,o,\"\"); } }if(u){ for(f in u){ t&&u[f]===t[f]||P(r,f,u[f]); } }} }else{ \"o\"===l[0]&&\"n\"===l[1]?(e=l!==(l=l.replace(/Capture$/,\"\")),c=l.toLowerCase(),l=(c in n?c:l).slice(2),u?(t||n.addEventListener(l,T,e),(n.t||(n.t={}))[l]=u):n.removeEventListener(l,T,e)):\"list\"!==l&&\"tagName\"!==l&&\"form\"!==l&&!i&&l in n?n[l]=null==u?\"\":u:\"function\"!=typeof u&&\"dangerouslySetInnerHTML\"!==l&&(l!==(l=l.replace(/^xlink:?/,\"\"))?null==u||!1===u?n.removeAttributeNS(\"http://www.w3.org/1999/xlink\",l.toLowerCase()):n.setAttributeNS(\"http://www.w3.org/1999/xlink\",l.toLowerCase(),u):null==u||!1===u?n.removeAttribute(l):n.setAttribute(l,u)); }}function T(l){return this.t[l.type](n.event?n.event(l):l)}function $(l,u,t,i,r,o,f,e,c,a){var h,v,p,y,w,g,k,_,C,P,N=u.type;if(void 0!==u.constructor){ return null; }(h=n.__b)&&h(u);try{n:if(\"function\"==typeof N){if(_=u.props,C=(h=N.contextType)&&i[h.__c],P=h?C?C.props.value:h.__p:i,t.__c?k=(v=u.__c=t.__c).__p=v.__E:(\"prototype\"in N&&N.prototype.render?u.__c=v=new N(_,P):(u.__c=v=new m(_,P),v.constructor=N,v.render=H),C&&C.sub(v),v.props=_,v.state||(v.state={}),v.context=P,v.__n=i,p=v.__d=!0,v.__h=[]),null==v.__s&&(v.__s=v.state),null!=N.getDerivedStateFromProps&&s(v.__s==v.state?v.__s=s({},v.__s):v.__s,N.getDerivedStateFromProps(_,v.__s)),p){ null==N.getDerivedStateFromProps&&null!=v.componentWillMount&&v.componentWillMount(),null!=v.componentDidMount&&f.push(v); }else{if(null==N.getDerivedStateFromProps&&null==e&&null!=v.componentWillReceiveProps&&v.componentWillReceiveProps(_,P),!e&&null!=v.shouldComponentUpdate&&!1===v.shouldComponentUpdate(_,v.__s,P)){for(v.props=_,v.state=v.__s,v.__d=!1,v.__v=u,u.__e=null!=c?c!==t.__e?c:t.__e:null,u.__k=t.__k,h=0;h<u.__k.length;h++){ u.__k[h]&&(u.__k[h].__p=u); }break n}null!=v.componentWillUpdate&&v.componentWillUpdate(_,v.__s,P);}for(y=v.props,w=v.state,v.context=P,v.props=_,v.state=v.__s,(h=n.__r)&&h(u),v.__d=!1,v.__v=u,v.__P=l,h=v.render(v.props,v.state,v.context),u.__k=x(null!=h&&h.type==d&&null==h.key?h.props.children:h),null!=v.getChildContext&&(i=s(s({},i),v.getChildContext())),p||null==v.getSnapshotBeforeUpdate||(g=v.getSnapshotBeforeUpdate(y,w)),b(l,u,t,i,r,o,f,c,a),v.base=u.__e;h=v.__h.pop();){ v.__s&&(v.state=v.__s),h.call(v); }p||null==y||null==v.componentDidUpdate||v.componentDidUpdate(y,w,g),k&&(v.__E=v.__p=null);}else { u.__e=z(t.__e,u,t,i,r,o,f,a); }(h=n.diffed)&&h(u);}catch(l){n.__e(l,u,t);}return u.__e}function j(l,u){for(var t;t=l.pop();){ try{t.componentDidMount();}catch(l){n.__e(l,t.__v);} }n.__c&&n.__c(u);}function z(n,l,u,t,i,r,o,c){var s,a,h,v,p=u.props,d=l.props;if(i=\"svg\"===l.type||i,null==n&&null!=r){ for(s=0;s<r.length;s++){ if(null!=(a=r[s])&&(null===l.type?3===a.nodeType:a.localName===l.type)){n=a,r[s]=null;break} } }if(null==n){if(null===l.type){ return document.createTextNode(d); }n=i?document.createElementNS(\"http://www.w3.org/2000/svg\",l.type):document.createElement(l.type),r=null;}return null===l.type?p!==d&&(null!=r&&(r[r.indexOf(n)]=null),n.data=d):l!==u&&(null!=r&&(r=e.slice.call(n.childNodes)),h=(p=u.props||f).dangerouslySetInnerHTML,v=d.dangerouslySetInnerHTML,c||(v||h)&&(v&&h&&v.__html==h.__html||(n.innerHTML=v&&v.__html||\"\")),C(n,d,p,i,c),l.__k=l.props.children,v||b(n,l,u,t,\"foreignObject\"!==l.type&&i,r,o,f,c),c||(\"value\"in d&&void 0!==d.value&&d.value!==n.value&&(n.value=null==d.value?\"\":d.value),\"checked\"in d&&void 0!==d.checked&&d.checked!==n.checked&&(n.checked=d.checked))),n}function A(l,u,t){try{\"function\"==typeof l?l(u):l.current=u;}catch(l){n.__e(l,t);}}function D(l,u,t){var i,r,o;if(n.unmount&&n.unmount(l),(i=l.ref)&&A(i,null,u),t||\"function\"==typeof l.type||(t=null!=(r=l.__e)),l.__e=l.l=null,null!=(i=l.__c)){if(i.componentWillUnmount){ try{i.componentWillUnmount();}catch(l){n.__e(l,u);} }i.base=i.__P=null;}if(i=l.__k){ for(o=0;o<i.length;o++){ i[o]&&D(i[o],u,t); } }null!=r&&a(r);}function H(n,l,u){return this.constructor(n,u)}function I(l,u,t){var i,o,c;n.__p&&n.__p(l,u),o=(i=t===r)?null:t&&t.__k||u.__k,l=h(d,null,[l]),c=[],$(u,i?u.__k=l:(t||u).__k=l,o||f,f,void 0!==u.ownerSVGElement,t&&!i?[t]:o?null:e.slice.call(u.childNodes),c,!1,t||f,i),j(c,l);}n={},m.prototype.setState=function(n,l){var u=this.__s!==this.state&&this.__s||(this.__s=s({},this.state));(\"function\"!=typeof n||(n=n(u,this.props)))&&s(u,n),null!=n&&this.__v&&(this.u=!1,l&&this.__h.push(l),k(this));},m.prototype.forceUpdate=function(n){this.__v&&(n&&this.__h.push(n),this.u=!0,k(this));},m.prototype.render=d,u=[],t=\"function\"==typeof Promise?Promise.prototype.then.bind(Promise.resolve()):setTimeout,i=n.debounceRendering,n.__e=function(n,l,u){for(var t;l=l.__p;){ if((t=l.__c)&&!t.__p){ try{if(t.constructor&&null!=t.constructor.getDerivedStateFromError){ t.setState(t.constructor.getDerivedStateFromError(n)); }else{if(null==t.componentDidCatch){ continue; }t.componentDidCatch(n);}return k(t.__E=t)}catch(l){n=l;} } }throw n},r=f,o=0;\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) { descriptor.writable = true; }\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) { _defineProperties(Constructor.prototype, protoProps); }\n  if (staticProps) { _defineProperties(Constructor, staticProps); }\n  return Constructor;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    var arguments$1 = arguments;\n\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments$1[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\n// Some regular expressions for rgb() and hsl() Colors are borrowed from tinyColor\n// https://github.com/bgrins/TinyColor\n// Kelvin temperature math borrowed from Neil Barlett's implementation\n// from https://github.com/neilbartlett/color-temperature\n// https://www.w3.org/TR/css3-values/#integers\nvar CSS_INTEGER = '[-\\\\+]?\\\\d+%?'; // http://www.w3.org/TR/css3-values/#number-value\n\nvar CSS_NUMBER = '[-\\\\+]?\\\\d*\\\\.\\\\d+%?'; // Allow positive/negative integer/number. Don't capture the either/or, just the entire outcome\n\nvar CSS_UNIT = '(?:' + CSS_NUMBER + ')|(?:' + CSS_INTEGER + ')'; // Parse function params\n// Parens and commas are optional, and this also allows for whitespace between numbers\n\nvar PERMISSIVE_MATCH_3 = '[\\\\s|\\\\(]+(' + CSS_UNIT + ')[,|\\\\s]+(' + CSS_UNIT + ')[,|\\\\s]+(' + CSS_UNIT + ')\\\\s*\\\\)?';\nvar PERMISSIVE_MATCH_4 = '[\\\\s|\\\\(]+(' + CSS_UNIT + ')[,|\\\\s]+(' + CSS_UNIT + ')[,|\\\\s]+(' + CSS_UNIT + ')[,|\\\\s]+(' + CSS_UNIT + ')\\\\s*\\\\)?'; // Regex patterns for functional color strings\n\nvar REGEX_FUNCTIONAL_RGB = new RegExp('rgb' + PERMISSIVE_MATCH_3);\nvar REGEX_FUNCTIONAL_RGBA = new RegExp('rgba' + PERMISSIVE_MATCH_4);\nvar REGEX_FUNCTIONAL_HSL = new RegExp('hsl' + PERMISSIVE_MATCH_3);\nvar REGEX_FUNCTIONAL_HSLA = new RegExp('hsla' + PERMISSIVE_MATCH_4); // Color string parsing regex\n\nvar HEX_START = '^(?:#?|0x?)';\nvar HEX_INT_SINGLE = '([0-9a-fA-F]{1})';\nvar HEX_INT_DOUBLE = '([0-9a-fA-F]{2})';\nvar REGEX_HEX_3 = new RegExp(HEX_START + HEX_INT_SINGLE + HEX_INT_SINGLE + HEX_INT_SINGLE + '$');\nvar REGEX_HEX_4 = new RegExp(HEX_START + HEX_INT_SINGLE + HEX_INT_SINGLE + HEX_INT_SINGLE + HEX_INT_SINGLE + '$');\nvar REGEX_HEX_6 = new RegExp(HEX_START + HEX_INT_DOUBLE + HEX_INT_DOUBLE + HEX_INT_DOUBLE + '$');\nvar REGEX_HEX_8 = new RegExp(HEX_START + HEX_INT_DOUBLE + HEX_INT_DOUBLE + HEX_INT_DOUBLE + HEX_INT_DOUBLE + '$'); // Kelvin temperature bounds\n\nvar KELVIN_MIN = 2000;\nvar KELVIN_MAX = 40000; // Math shorthands\n\nvar log = Math.log,\n    round = Math.round,\n    floor = Math.floor;\n/**\r\n * @desc Clamp a number between a min and max value\r\n * @param num - input value\r\n * @param min - min allowed value\r\n * @param max - max allowed value\r\n */\n\nfunction clamp(num, min, max) {\n  return Math.min(Math.max(num, min), max);\n}\n/**\r\n * @desc Parse a css unit string - either regular int or a percentage number\r\n * @param str - css unit string\r\n * @param max - max unit value, used for calculating percentages\r\n */\n\n\nfunction parseUnit(str, max) {\n  var isPercentage = str.indexOf('%') > -1;\n  var num = parseFloat(str);\n  return isPercentage ? max / 100 * num : num;\n}\n/**\r\n * @desc Parse hex str to an int\r\n * @param str - hex string to parse\r\n */\n\n\nfunction parseHexInt(str) {\n  return parseInt(str, 16);\n}\n/**\r\n * @desc Convert nunber into to 2-digit hex\r\n * @param int - number to convert\r\n */\n\n\nfunction intToHex(_int) {\n  return _int.toString(16).padStart(2, '0');\n}\n\nvar IroColor =\n/*#__PURE__*/\nfunction () {\n  /**\r\n    * @constructor Color object\r\n    * @param value - initial color value\r\n  */\n  function IroColor(value, onChange) {\n    // The default Color value\n    this.$ = {\n      h: 0,\n      s: 0,\n      v: 0,\n      a: 1\n    };\n    if (value) { this.set(value); } // The watch callback function for this Color will be stored here\n\n    this.onChange = onChange;\n    this.initialValue = _extends({}, this.$); // copy initial value\n  }\n  /**\r\n    * @desc Set the Color from any valid value\r\n    * @param value - new color value\r\n  */\n\n\n  var _proto = IroColor.prototype;\n\n  _proto.set = function set(value) {\n    if (typeof value === 'string') {\n      if (/^(?:#?|0x?)[0-9a-fA-F]{3,8}$/.test(value)) {\n        this.hexString = value;\n      } else if (/^rgba?/.test(value)) {\n        this.rgbString = value;\n      } else if (/^hsla?/.test(value)) {\n        this.hslString = value;\n      }\n    } else if (typeof value === 'object') {\n      if (value instanceof IroColor) {\n        this.hsva = value.hsva;\n      } else if ('r' in value && 'g' in value && 'b' in value) {\n        this.rgb = value;\n      } else if ('h' in value && 's' in value && 'v' in value) {\n        this.hsv = value;\n      } else if ('h' in value && 's' in value && 'l' in value) {\n        this.hsl = value;\n      } else if ('kelvin' in value) {\n        this.kelvin = value.kelvin;\n      }\n    } else {\n      throw new Error('Invalid color value');\n    }\n  }\n  /**\r\n    * @desc Shortcut to set a specific channel value\r\n    * @param format - hsv | hsl | rgb\r\n    * @param channel - individual channel to set, for example if model = hsl, chanel = h | s | l\r\n    * @param value - new value for the channel\r\n  */\n  ;\n\n  _proto.setChannel = function setChannel(format, channel, value) {\n    var _extends2;\n\n    this[format] = _extends({}, this[format], (_extends2 = {}, _extends2[channel] = value, _extends2));\n  }\n  /**\r\n   * @desc Reset color back to its initial value\r\n   */\n  ;\n\n  _proto.reset = function reset() {\n    this.hsva = this.initialValue;\n  }\n  /**\r\n    * @desc make new Color instance with the same value as this one\r\n  */\n  ;\n\n  _proto.clone = function clone() {\n    return new IroColor(this);\n  }\n  /**\r\n   * @desc remove color onChange\r\n   */\n  ;\n\n  _proto.unbind = function unbind() {\n    this.onChange = undefined;\n  }\n  /**\r\n    * @desc Convert hsv object to rgb\r\n    * @param hsv - hsv color object\r\n  */\n  ;\n\n  IroColor.hsvToRgb = function hsvToRgb(hsv) {\n    var h = hsv.h / 60;\n    var s = hsv.s / 100;\n    var v = hsv.v / 100;\n    var i = floor(h);\n    var f = h - i;\n    var p = v * (1 - s);\n    var q = v * (1 - f * s);\n    var t = v * (1 - (1 - f) * s);\n    var mod = i % 6;\n    var r = [v, q, p, p, t, v][mod];\n    var g = [t, v, v, q, p, p][mod];\n    var b = [p, p, t, v, v, q][mod];\n    return {\n      r: clamp(r * 255, 0, 255),\n      g: clamp(g * 255, 0, 255),\n      b: clamp(b * 255, 0, 255)\n    };\n  }\n  /**\r\n    * @desc Convert rgb object to hsv\r\n    * @param rgb - rgb object\r\n  */\n  ;\n\n  IroColor.rgbToHsv = function rgbToHsv(rgb) {\n    var r = rgb.r / 255;\n    var g = rgb.g / 255;\n    var b = rgb.b / 255;\n    var max = Math.max(r, g, b);\n    var min = Math.min(r, g, b);\n    var delta = max - min;\n    var hue = 0;\n    var value = max;\n    var saturation = max === 0 ? 0 : delta / max;\n\n    switch (max) {\n      case min:\n        hue = 0; // achromatic\n\n        break;\n\n      case r:\n        hue = (g - b) / delta + (g < b ? 6 : 0);\n        break;\n\n      case g:\n        hue = (b - r) / delta + 2;\n        break;\n\n      case b:\n        hue = (r - g) / delta + 4;\n        break;\n    }\n\n    return {\n      h: hue * 60 % 360,\n      s: clamp(saturation * 100, 0, 100),\n      v: clamp(value * 100, 0, 100)\n    };\n  }\n  /**\r\n    * @desc Convert hsv object to hsl\r\n    * @param hsv - hsv object\r\n  */\n  ;\n\n  IroColor.hsvToHsl = function hsvToHsl(hsv) {\n    var s = hsv.s / 100;\n    var v = hsv.v / 100;\n    var l = (2 - s) * v;\n    var divisor = l <= 1 ? l : 2 - l; // Avoid division by zero when lightness is close to zero\n\n    var saturation = divisor < 1e-9 ? 0 : s * v / divisor;\n    return {\n      h: hsv.h,\n      s: clamp(saturation * 100, 0, 100),\n      l: clamp(l * 50, 0, 100)\n    };\n  }\n  /**\r\n    * @desc Convert hsl object to hsv\r\n    * @param hsl - hsl object\r\n  */\n  ;\n\n  IroColor.hslToHsv = function hslToHsv(hsl) {\n    var l = hsl.l * 2;\n    var s = hsl.s * (l <= 100 ? l : 200 - l) / 100; // Avoid division by zero when l + s is near 0\n\n    var saturation = l + s < 1e-9 ? 0 : 2 * s / (l + s);\n    return {\n      h: hsl.h,\n      s: clamp(saturation * 100, 0, 100),\n      v: clamp((l + s) / 2, 0, 100)\n    };\n  }\n  /**\r\n    * @desc Convert a kelvin temperature to an approx, RGB value\r\n    * @param kelvin - kelvin temperature\r\n  */\n  ;\n\n  IroColor.kelvinToRgb = function kelvinToRgb(kelvin) {\n    var temp = kelvin / 100;\n    var r, g, b;\n\n    if (temp < 66) {\n      r = 255;\n      g = -155.25485562709179 - 0.44596950469579133 * (g = temp - 2) + 104.49216199393888 * log(g);\n      b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp - 10) + 115.67994401066147 * log(b);\n    } else {\n      r = 351.97690566805693 + 0.114206453784165 * (r = temp - 55) - 40.25366309332127 * log(r);\n      g = 325.4494125711974 + 0.07943456536662342 * (g = temp - 50) - 28.0852963507957 * log(g);\n      b = 255;\n    }\n\n    return {\n      r: clamp(floor(r), 0, 255),\n      g: clamp(floor(g), 0, 255),\n      b: clamp(floor(b), 0, 255)\n    };\n  }\n  /**\r\n   * @desc Convert an RGB color to an approximate kelvin temperature\r\n   * @param kelvin - kelvin temperature\r\n  */\n  ;\n\n  IroColor.rgbToKelvin = function rgbToKelvin(rgb) {\n    var r = rgb.r,\n        b = rgb.b;\n    var eps = 0.4;\n    var minTemp = KELVIN_MIN;\n    var maxTemp = KELVIN_MAX;\n    var temp;\n\n    while (maxTemp - minTemp > eps) {\n      temp = (maxTemp + minTemp) * 0.5;\n\n      var _rgb = IroColor.kelvinToRgb(temp);\n\n      if (_rgb.b / _rgb.r >= b / r) {\n        maxTemp = temp;\n      } else {\n        minTemp = temp;\n      }\n    }\n\n    return temp;\n  };\n\n  _createClass(IroColor, [{\n    key: \"hsv\",\n    get: function get() {\n      // value is cloned to allow changes to be made to the values before passing them back\n      var value = this.$;\n      return {\n        h: value.h,\n        s: value.s,\n        v: value.v\n      };\n    },\n    set: function set(newValue) {\n      var oldValue = this.$;\n      newValue = _extends({}, oldValue, newValue); // If this Color is being watched for changes we need to compare the new and old values to check the difference\n      // Otherwise we can just be lazy\n\n      if (this.onChange) {\n        // Compute changed values\n        var changes = {\n          h: false,\n          v: false,\n          s: false,\n          a: false\n        };\n\n        for (var key in oldValue) {\n          changes[key] = newValue[key] != oldValue[key];\n        }\n\n        this.$ = newValue; // If the value has changed, call hook callback\n\n        if (changes.h || changes.s || changes.v || changes.a) { this.onChange(this, changes); }\n      } else {\n        this.$ = newValue;\n      }\n    }\n  }, {\n    key: \"hsva\",\n    get: function get() {\n      return _extends({}, this.$);\n    },\n    set: function set(value) {\n      this.hsv = value;\n    }\n  }, {\n    key: \"hue\",\n    get: function get() {\n      return this.$.h;\n    },\n    set: function set(value) {\n      this.hsv = {\n        h: value\n      };\n    }\n  }, {\n    key: \"saturation\",\n    get: function get() {\n      return this.$.s;\n    },\n    set: function set(value) {\n      this.hsv = {\n        s: value\n      };\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this.$.v;\n    },\n    set: function set(value) {\n      this.hsv = {\n        v: value\n      };\n    }\n  }, {\n    key: \"alpha\",\n    get: function get() {\n      return this.$.a;\n    },\n    set: function set(value) {\n      this.hsv = _extends({}, this.hsv, {\n        a: value\n      });\n    }\n  }, {\n    key: \"kelvin\",\n    get: function get() {\n      return IroColor.rgbToKelvin(this.rgb);\n    },\n    set: function set(value) {\n      this.rgb = IroColor.kelvinToRgb(value);\n    }\n  }, {\n    key: \"red\",\n    get: function get() {\n      var rgb = this.rgb;\n      return rgb.r;\n    },\n    set: function set(value) {\n      this.rgb = _extends({}, this.rgb, {\n        r: value\n      });\n    }\n  }, {\n    key: \"green\",\n    get: function get() {\n      var rgb = this.rgb;\n      return rgb.g;\n    },\n    set: function set(value) {\n      this.rgb = _extends({}, this.rgb, {\n        g: value\n      });\n    }\n  }, {\n    key: \"blue\",\n    get: function get() {\n      var rgb = this.rgb;\n      return rgb.b;\n    },\n    set: function set(value) {\n      this.rgb = _extends({}, this.rgb, {\n        b: value\n      });\n    }\n  }, {\n    key: \"rgb\",\n    get: function get() {\n      var _IroColor$hsvToRgb = IroColor.hsvToRgb(this.$),\n          r = _IroColor$hsvToRgb.r,\n          g = _IroColor$hsvToRgb.g,\n          b = _IroColor$hsvToRgb.b;\n\n      return {\n        r: round(r),\n        g: round(g),\n        b: round(b)\n      };\n    },\n    set: function set(value) {\n      this.hsv = _extends({}, IroColor.rgbToHsv(value), {\n        a: value.a === undefined ? 1 : value.a\n      });\n    }\n  }, {\n    key: \"rgba\",\n    get: function get() {\n      return _extends({}, this.rgb, {\n        a: this.alpha\n      });\n    },\n    set: function set(value) {\n      this.rgb = value;\n    }\n  }, {\n    key: \"hsl\",\n    get: function get() {\n      var _IroColor$hsvToHsl = IroColor.hsvToHsl(this.$),\n          h = _IroColor$hsvToHsl.h,\n          s = _IroColor$hsvToHsl.s,\n          l = _IroColor$hsvToHsl.l;\n\n      return {\n        h: round(h),\n        s: round(s),\n        l: round(l)\n      };\n    },\n    set: function set(value) {\n      this.hsv = _extends({}, IroColor.hslToHsv(value), {\n        a: value.a === undefined ? 1 : value.a\n      });\n    }\n  }, {\n    key: \"hsla\",\n    get: function get() {\n      return _extends({}, this.hsl, {\n        a: this.alpha\n      });\n    },\n    set: function set(value) {\n      this.hsl = value;\n    }\n  }, {\n    key: \"rgbString\",\n    get: function get() {\n      var rgb = this.rgb;\n      return \"rgb(\" + rgb.r + \", \" + rgb.g + \", \" + rgb.b + \")\";\n    },\n    set: function set(value) {\n      var match;\n      var r,\n          g,\n          b,\n          a = 1;\n\n      if (match = REGEX_FUNCTIONAL_RGB.exec(value)) {\n        r = parseUnit(match[1], 255);\n        g = parseUnit(match[2], 255);\n        b = parseUnit(match[3], 255);\n      } else if (match = REGEX_FUNCTIONAL_RGBA.exec(value)) {\n        r = parseUnit(match[1], 255);\n        g = parseUnit(match[2], 255);\n        b = parseUnit(match[3], 255);\n        a = parseUnit(match[4], 1);\n      }\n\n      if (match) {\n        this.rgb = {\n          r: r,\n          g: g,\n          b: b,\n          a: a\n        };\n      } else {\n        throw new Error('Invalid rgb string');\n      }\n    }\n  }, {\n    key: \"rgbaString\",\n    get: function get() {\n      var rgba = this.rgba;\n      return \"rgba(\" + rgba.r + \", \" + rgba.g + \", \" + rgba.b + \", \" + rgba.a + \")\";\n    },\n    set: function set(value) {\n      this.rgbString = value;\n    }\n  }, {\n    key: \"hexString\",\n    get: function get() {\n      var rgb = this.rgb;\n      return \"#\" + intToHex(rgb.r) + intToHex(rgb.g) + intToHex(rgb.b);\n    },\n    set: function set(value) {\n      var match;\n      var r,\n          g,\n          b,\n          a = 255;\n\n      if (match = REGEX_HEX_3.exec(value)) {\n        r = parseHexInt(match[1]) * 17;\n        g = parseHexInt(match[2]) * 17;\n        b = parseHexInt(match[3]) * 17;\n      } else if (match = REGEX_HEX_4.exec(value)) {\n        r = parseHexInt(match[1]) * 17;\n        g = parseHexInt(match[2]) * 17;\n        b = parseHexInt(match[3]) * 17;\n        a = parseHexInt(match[4]) * 17;\n      } else if (match = REGEX_HEX_6.exec(value)) {\n        r = parseHexInt(match[1]);\n        g = parseHexInt(match[2]);\n        b = parseHexInt(match[3]);\n      } else if (match = REGEX_HEX_8.exec(value)) {\n        r = parseHexInt(match[1]);\n        g = parseHexInt(match[2]);\n        b = parseHexInt(match[3]);\n        a = parseHexInt(match[4]);\n      }\n\n      if (match) {\n        this.rgb = {\n          r: r,\n          g: g,\n          b: b,\n          a: a / 255\n        };\n      } else {\n        throw new Error('Invalid hex string');\n      }\n    }\n  }, {\n    key: \"hex8String\",\n    get: function get() {\n      var rgba = this.rgba;\n      return \"#\" + intToHex(rgba.r) + intToHex(rgba.g) + intToHex(rgba.b) + intToHex(floor(rgba.a * 255));\n    },\n    set: function set(value) {\n      this.hexString = value;\n    }\n  }, {\n    key: \"hslString\",\n    get: function get() {\n      var hsl = this.hsl;\n      return \"hsl(\" + hsl.h + \", \" + hsl.s + \"%, \" + hsl.l + \"%)\";\n    },\n    set: function set(value) {\n      var match;\n      var h,\n          s,\n          l,\n          a = 1;\n\n      if (match = REGEX_FUNCTIONAL_HSL.exec(value)) {\n        h = parseUnit(match[1], 360);\n        s = parseUnit(match[2], 100);\n        l = parseUnit(match[3], 100);\n      } else if (match = REGEX_FUNCTIONAL_HSLA.exec(value)) {\n        h = parseUnit(match[1], 360);\n        s = parseUnit(match[2], 100);\n        l = parseUnit(match[3], 100);\n        a = parseUnit(match[4], 1);\n      }\n\n      if (match) {\n        this.hsl = {\n          h: h,\n          s: s,\n          l: l,\n          a: a\n        };\n      } else {\n        throw new Error('Invalid hsl string');\n      }\n    }\n  }, {\n    key: \"hslaString\",\n    get: function get() {\n      var hsla = this.hsla;\n      return \"hsla(\" + hsla.h + \", \" + hsla.s + \"%, \" + hsla.l + \"%, \" + hsla.a + \")\";\n    },\n    set: function set(value) {\n      this.hslString = value;\n    }\n  }]);\n\n  return IroColor;\n}();\n\nvar sliderDefaultOptions = {\n  sliderShape: 'bar',\n  sliderType: 'value',\n  minTemperature: 2200,\n  maxTemperature: 11000\n};\n/**\r\n * @desc Get the bounding dimensions of the slider\r\n * @param props - slider props\r\n */\n\nfunction getSliderDimensions(props) {\n  var _sliderSize;\n\n  var width = props.width,\n      sliderSize = props.sliderSize,\n      borderWidth = props.borderWidth,\n      handleRadius = props.handleRadius,\n      padding = props.padding,\n      sliderShape = props.sliderShape;\n  var ishorizontal = props.layoutDirection === 'horizontal'; // automatically calculate sliderSize if its not defined\n\n  sliderSize = (_sliderSize = sliderSize) != null ? _sliderSize : padding * 2 + handleRadius * 2;\n\n  if (sliderShape === 'circle') {\n    return {\n      handleStart: props.padding + props.handleRadius,\n      handleRange: width - padding * 2 - handleRadius * 2,\n      width: width,\n      height: width,\n      cx: width / 2,\n      cy: width / 2,\n      radius: width / 2 - borderWidth / 2\n    };\n  } else {\n    return {\n      handleStart: sliderSize / 2,\n      handleRange: width - sliderSize,\n      radius: sliderSize / 2,\n      x: 0,\n      y: 0,\n      width: ishorizontal ? sliderSize : width,\n      height: ishorizontal ? width : sliderSize\n    };\n  }\n}\n/**\r\n * @desc Get the current slider value for a given color, as a percentage\r\n * @param props - slider props\r\n * @param color\r\n */\n\nfunction getCurrentSliderValue(props, color) {\n  var hsva = color.hsva;\n  var rgb = color.rgb;\n\n  switch (props.sliderType) {\n    case 'red':\n      return rgb.r / 2.55;\n\n    case 'green':\n      return rgb.g / 2.55;\n\n    case 'blue':\n      return rgb.b / 2.55;\n\n    case 'alpha':\n      return hsva.a * 100;\n\n    case 'kelvin':\n      var minTemperature = props.minTemperature,\n          maxTemperature = props.maxTemperature;\n      var temperatureRange = maxTemperature - minTemperature;\n      var percent = (color.kelvin - minTemperature) / temperatureRange * 100; // clmap percentage\n\n      return Math.max(0, Math.min(percent, 100));\n\n    case 'hue':\n      return hsva.h /= 3.6;\n\n    case 'saturation':\n      return hsva.s;\n\n    case 'value':\n    default:\n      return hsva.v;\n  }\n}\n/**\r\n * @desc Get the current slider value from user input\r\n * @param props - slider props\r\n * @param x - global input x position\r\n * @param y - global input y position\r\n */\n\nfunction getSliderValueFromInput(props, x, y) {\n  var _getSliderDimensions = getSliderDimensions(props),\n      handleRange = _getSliderDimensions.handleRange,\n      handleStart = _getSliderDimensions.handleStart;\n\n  var handlePos;\n\n  if (props.layoutDirection === 'horizontal') {\n    handlePos = -1 * y + handleRange + handleStart;\n  } else {\n    handlePos = x - handleStart;\n  } // clamp handle position\n\n\n  handlePos = Math.max(Math.min(handlePos, handleRange), 0);\n  var percent = Math.round(100 / handleRange * handlePos);\n\n  switch (props.sliderType) {\n    case 'kelvin':\n      var minTemperature = props.minTemperature,\n          maxTemperature = props.maxTemperature;\n      var temperatureRange = maxTemperature - minTemperature;\n      return minTemperature + temperatureRange * (percent / 100);\n\n    case 'alpha':\n      return percent / 100;\n\n    case 'hue':\n      return percent * 3.6;\n\n    case 'red':\n    case 'blue':\n    case 'green':\n      return percent * 2.55;\n\n    default:\n      return percent;\n  }\n}\n/**\r\n * @desc Get the current handle position for a given color\r\n * @param props - slider props\r\n * @param color\r\n */\n\nfunction getSliderHandlePosition(props, color) {\n  var _getSliderDimensions2 = getSliderDimensions(props),\n      width = _getSliderDimensions2.width,\n      height = _getSliderDimensions2.height,\n      handleRange = _getSliderDimensions2.handleRange,\n      handleStart = _getSliderDimensions2.handleStart;\n\n  var ishorizontal = props.layoutDirection === 'horizontal';\n  var sliderValue = getCurrentSliderValue(props, color);\n  var midPoint = ishorizontal ? width / 2 : height / 2;\n  var handlePos = handleStart + sliderValue / 100 * handleRange;\n\n  if (ishorizontal) {\n    handlePos = -1 * handlePos + handleRange + handleStart * 2;\n  }\n\n  return {\n    x: ishorizontal ? midPoint : handlePos,\n    y: ishorizontal ? handlePos : midPoint\n  };\n}\n/**\r\n * @desc Get the gradient stops for a slider\r\n * @param props - slider props\r\n * @param color\r\n */\n\nfunction getSliderGradient(props, color) {\n  var hsv = color.hsv;\n  var rgb = color.rgb;\n\n  switch (props.sliderType) {\n    case 'red':\n      return [[0, \"rgb(\" + 0 + \",\" + rgb.g + \",\" + rgb.b + \")\"], [100, \"rgb(\" + 255 + \",\" + rgb.g + \",\" + rgb.b + \")\"]];\n\n    case 'green':\n      return [[0, \"rgb(\" + rgb.r + \",\" + 0 + \",\" + rgb.b + \")\"], [100, \"rgb(\" + rgb.r + \",\" + 255 + \",\" + rgb.b + \")\"]];\n\n    case 'blue':\n      return [[0, \"rgb(\" + rgb.r + \",\" + rgb.g + \",\" + 0 + \")\"], [100, \"rgb(\" + rgb.r + \",\" + rgb.g + \",\" + 255 + \")\"]];\n\n    case 'alpha':\n      return [[0, \"rgba(\" + rgb.r + \",\" + rgb.g + \",\" + rgb.b + \",0)\"], [100, \"rgb(\" + rgb.r + \",\" + rgb.g + \",\" + rgb.b + \")\"]];\n\n    case 'kelvin':\n      var stops = [];\n      var min = props.minTemperature;\n      var max = props.maxTemperature;\n      var numStops = 8;\n      var range = max - min;\n\n      for (var kelvin = min, stop = 0; kelvin < max; kelvin += range / numStops, stop += 1) {\n        var _IroColor$kelvinToRgb = IroColor.kelvinToRgb(kelvin),\n            r = _IroColor$kelvinToRgb.r,\n            g = _IroColor$kelvinToRgb.g,\n            b = _IroColor$kelvinToRgb.b;\n\n        stops.push([100 / numStops * stop, \"rgb(\" + r + \",\" + g + \",\" + b + \")\"]);\n      }\n\n      return stops;\n\n    case 'hue':\n      return [[0, '#f00'], [16.666, '#ff0'], [33.333, '#0f0'], [50, '#0ff'], [66.666, '#00f'], [83.333, '#f0f'], [100, '#f00']];\n\n    case 'saturation':\n      var noSat = IroColor.hsvToHsl({\n        h: hsv.h,\n        s: 0,\n        v: hsv.v\n      });\n      var fullSat = IroColor.hsvToHsl({\n        h: hsv.h,\n        s: 100,\n        v: hsv.v\n      });\n      return [[0, \"hsl(\" + noSat.h + \",\" + noSat.s + \"%,\" + noSat.l + \"%)\"], [100, \"hsl(\" + fullSat.h + \",\" + fullSat.s + \"%,\" + fullSat.l + \"%)\"]];\n\n    case 'value':\n    default:\n      var hsl = IroColor.hsvToHsl({\n        h: hsv.h,\n        s: hsv.s,\n        v: 100\n      });\n      return [[0, '#000'], [100, \"hsl(\" + hsl.h + \",\" + hsl.s + \"%,\" + hsl.l + \"%)\"]];\n  }\n}\n\nvar TAU = Math.PI * 2; // javascript's modulo operator doesn't produce positive numbers with negative input\n// https://dev.to/maurobringolf/a-neat-trick-to-compute-modulo-of-negative-numbers-111e\n\nvar mod = function mod(a, n) {\n  return (a % n + n) % n;\n}; // distance between points (x, y) and (0, 0)\n\n\nvar dist = function dist(x, y) {\n  return Math.sqrt(x * x + y * y);\n};\n/**\r\n * @param props - wheel props\r\n * @internal\r\n */\n\n\nfunction getHandleRange(props) {\n  return props.width / 2 - props.padding - props.handleRadius - props.borderWidth;\n}\n/**\r\n * Returns true if point (x, y) lands inside the wheel\r\n * @param props - wheel props\r\n * @param x\r\n * @param y\r\n */\n\n\nfunction isInputInsideWheel(props, x, y) {\n  var _getWheelDimensions = getWheelDimensions(props),\n      cx = _getWheelDimensions.cx,\n      cy = _getWheelDimensions.cy;\n\n  var r = props.width / 2;\n  return dist(cx - x, cy - y) < r;\n}\n/**\r\n * @desc Get the point as the center of the wheel\r\n * @param props - wheel props\r\n */\n\nfunction getWheelDimensions(props) {\n  var r = props.width / 2;\n  return {\n    width: props.width,\n    radius: r - props.borderWidth,\n    cx: r,\n    cy: r\n  };\n}\n/**\r\n * @desc Translate an angle according to wheelAngle and wheelDirection\r\n * @param props - wheel props\r\n * @param angle - input angle\r\n */\n\nfunction translateWheelAngle(props, angle, invert) {\n  var wheelAngle = props.wheelAngle;\n  var wheelDirection = props.wheelDirection; // inverted and clockwisee\n\n  if (invert && wheelDirection === 'clockwise') { angle = wheelAngle + angle; } // clockwise (input handling)\n  else if (wheelDirection === 'clockwise') { angle = 360 - wheelAngle + angle; } // inverted and anticlockwise\n    else if (invert && wheelDirection === 'anticlockwise') { angle = wheelAngle + 180 - angle; } // anticlockwise (input handling)\n      else if (wheelDirection === 'anticlockwise') { angle = wheelAngle - angle; }\n  return mod(angle, 360);\n}\n/**\r\n * @desc Get the current handle position for a given color\r\n * @param props - wheel props\r\n * @param color\r\n */\n\nfunction getWheelHandlePosition(props, color) {\n  var hsv = color.hsv;\n\n  var _getWheelDimensions2 = getWheelDimensions(props),\n      cx = _getWheelDimensions2.cx,\n      cy = _getWheelDimensions2.cy;\n\n  var handleRange = getHandleRange(props);\n  var handleAngle = (180 + translateWheelAngle(props, hsv.h, true)) * (TAU / 360);\n  var handleDist = hsv.s / 100 * handleRange;\n  var direction = props.wheelDirection === 'clockwise' ? -1 : 1;\n  return {\n    x: cx + handleDist * Math.cos(handleAngle) * direction,\n    y: cy + handleDist * Math.sin(handleAngle) * direction\n  };\n}\n/**\r\n * @desc Get the current wheel value from user input\r\n * @param props - wheel props\r\n * @param x - global input x position\r\n * @param y - global input y position\r\n */\n\nfunction getWheelValueFromInput(props, x, y) {\n  var _getWheelDimensions3 = getWheelDimensions(props),\n      cx = _getWheelDimensions3.cx,\n      cy = _getWheelDimensions3.cy;\n\n  var handleRange = getHandleRange(props);\n  x = cx - x;\n  y = cy - y; // Calculate the hue by converting the angle to radians\n\n  var hue = translateWheelAngle(props, Math.atan2(-y, -x) * (360 / TAU)); // Find the point's distance from the center of the wheel\n  // This is used to show the saturation level\n\n  var handleDist = Math.min(dist(x, y), handleRange);\n  return {\n    h: Math.round(hue),\n    s: Math.round(100 / handleRange * handleDist)\n  };\n}\n/**\r\n * @desc Get the bounding dimensions of the box\r\n * @param props - box props\r\n */\n\nfunction getBoxDimensions(props) {\n  var width = props.width,\n      boxHeight = props.boxHeight,\n      padding = props.padding,\n      handleRadius = props.handleRadius;\n  return {\n    width: width,\n    height: boxHeight != null ? boxHeight : width,\n    radius: padding + handleRadius\n  };\n}\n/**\r\n * @desc Get the current box value from user input\r\n * @param props - box props\r\n * @param x - global input x position\r\n * @param y - global input y position\r\n */\n\nfunction getBoxValueFromInput(props, x, y) {\n  var _getBoxDimensions = getBoxDimensions(props),\n      width = _getBoxDimensions.width,\n      height = _getBoxDimensions.height,\n      radius = _getBoxDimensions.radius;\n\n  var handleStart = radius;\n  var handleRangeX = width - radius * 2;\n  var handleRangeY = height - radius * 2;\n  var percentX = (x - handleStart) / handleRangeX * 100;\n  var percentY = (y - handleStart) / handleRangeY * 100;\n  return {\n    s: Math.max(0, Math.min(percentX, 100)),\n    v: Math.max(0, Math.min(100 - percentY, 100))\n  };\n}\n/**\r\n * @desc Get the current box handle position for a given color\r\n * @param props - box props\r\n * @param color\r\n */\n\nfunction getBoxHandlePosition(props, color) {\n  var _getBoxDimensions2 = getBoxDimensions(props),\n      width = _getBoxDimensions2.width,\n      height = _getBoxDimensions2.height,\n      radius = _getBoxDimensions2.radius;\n\n  var hsv = color.hsv;\n  var handleStart = radius;\n  var handleRangeX = width - radius * 2;\n  var handleRangeY = height - radius * 2;\n  return {\n    x: handleStart + hsv.s / 100 * handleRangeX,\n    y: handleStart + (handleRangeY - hsv.v / 100 * handleRangeY)\n  };\n}\n/**\r\n * @desc Get the gradient stops for a box\r\n * @param props - box props\r\n * @param color\r\n */\n\nfunction getBoxGradients(props, color) {\n  var hue = color.hue;\n  return [// saturation gradient\n  [[0, '#fff'], [100, \"hsl(\" + hue + \",100%,50%)\"]], // lightness gradient\n  [[0, 'rgba(0,0,0,0)'], [100, '#000']]];\n}\n\n// Keep track of html <base> elements for resolveSvgUrl\n// getElementsByTagName returns a live HTMLCollection, which stays in sync with the DOM tree\n// So it only needs to be called once\nvar BASE_ELEMENTS;\n/**\r\n * @desc Resolve an SVG reference URL\r\n * This is required to work around how Safari and iOS webviews handle gradient URLS under certain conditions\r\n * If a page is using a client-side routing library which makes use of the HTML <base> tag,\r\n * Safari won't be able to render SVG gradients properly (as they are referenced by URLs)\r\n * More info on the problem:\r\n * https://stackoverflow.com/questions/19742805/angular-and-svg-filters/19753427#19753427\r\n * https://github.com/jaames/iro.js/issues/18\r\n * https://github.com/jaames/iro.js/issues/45\r\n * https://github.com/jaames/iro.js/pull/89\r\n * @props url - SVG reference URL\r\n */\n\nfunction resolveSvgUrl(url) {\n  if (!BASE_ELEMENTS) { BASE_ELEMENTS = document.getElementsByTagName('base'); } // Sniff useragent string to check if the user is running Safari\n\n  var ua = window.navigator.userAgent;\n  var isSafari = /^((?!chrome|android).)*safari/i.test(ua);\n  var isIos = /iPhone|iPod|iPad/i.test(ua);\n  var location = window.location;\n  return (isSafari || isIos) && BASE_ELEMENTS.length > 0 ? location.protocol + \"//\" + location.host + location.pathname + location.search + url : url;\n}\n/**\r\n * @desc Given a specifc (x, y) position, test if there's a handle there and return its index, else return null.\r\n *       This is used for components like the box and wheel which support multiple handles when multicolor is active\r\n * @props x - point x position\r\n * @props y - point y position\r\n * @props handlePositions - array of {x, y} coords for each handle\r\n */\n\nfunction getHandleAtPoint(props, x, y, handlePositions) {\n  for (var i = 0; i < handlePositions.length; i++) {\n    var dX = handlePositions[i].x - x;\n    var dY = handlePositions[i].y - y;\n    var dist = Math.sqrt(dX * dX + dY * dY);\n\n    if (dist < props.handleRadius) {\n      return i;\n    }\n  }\n\n  return null;\n}\n\nfunction cssBorderStyles(props) {\n  return {\n    boxSizing: 'border-box',\n    border: props.borderWidth + \"px solid \" + props.borderColor\n  };\n}\nfunction cssGradient(type, direction, stops) {\n  return type + \"-gradient(\" + direction + \", \" + stops.map(function (_ref) {\n    var o = _ref[0],\n        col = _ref[1];\n    return col + \" \" + o + \"%\";\n  }).join(',') + \")\";\n}\nfunction cssValue(value) {\n  if (typeof value === 'string') { return value; }\n  return value + \"px\";\n}\n\nvar iroColorPickerOptionDefaults = {\n  width: 300,\n  height: 300,\n  color: '#fff',\n  colors: [],\n  padding: 6,\n  layoutDirection: 'vertical',\n  borderColor: '#fff',\n  borderWidth: 0,\n  handleRadius: 8,\n  activeHandleRadius: null,\n  handleSvg: null,\n  handleProps: {\n    x: 0,\n    y: 0\n  },\n  wheelLightness: true,\n  wheelAngle: 0,\n  wheelDirection: 'anticlockwise',\n  sliderSize: null,\n  sliderMargin: 12,\n  boxHeight: null\n};\n\nvar SECONDARY_EVENTS = [\"mousemove\" /* MouseMove */, \"touchmove\" /* TouchMove */, \"mouseup\" /* MouseUp */, \"touchend\" /* TouchEnd */];\r\n// Base component class for iro UI components\r\n// This extends the Preact component class to allow them to react to mouse/touch input events by themselves\r\nvar IroComponentWrapper = /*@__PURE__*/(function (Component) {\n    function IroComponentWrapper(props) {\r\n        Component.call(this, props);\r\n        // Generate unique ID for the component\r\n        // This can be used to generate unique IDs for gradients, etc\r\n        this.uid = (Math.random() + 1).toString(36).substring(5);\r\n    }\n\n    if ( Component ) IroComponentWrapper.__proto__ = Component;\n    IroComponentWrapper.prototype = Object.create( Component && Component.prototype );\n    IroComponentWrapper.prototype.constructor = IroComponentWrapper;\r\n    IroComponentWrapper.prototype.render = function render (props) {\r\n        var eventHandler = this.handleEvent.bind(this);\r\n        var rootProps = {\r\n            onMouseDown: eventHandler,\r\n            // https://github.com/jaames/iro.js/issues/126\r\n            // https://github.com/preactjs/preact/issues/2113#issuecomment-553408767\r\n            ontouchstart: eventHandler,\r\n        };\r\n        var isHorizontal = props.layoutDirection === 'horizontal';\r\n        var margin = props.margin === null ? props.sliderMargin : props.margin;\r\n        var rootStyles = {\r\n            overflow: 'visible',\r\n            display: isHorizontal ? 'inline-block' : 'block'\r\n        };\r\n        // first component shouldn't have any margin\r\n        if (props.index > 0) {\r\n            rootStyles[isHorizontal ? 'marginLeft' : 'marginTop'] = margin;\r\n        }\r\n        return (h(d, null, props.children(this.uid, rootProps, rootStyles)));\r\n    };\r\n    // More info on handleEvent:\r\n    // https://medium.com/@WebReflection/dom-handleevent-a-cross-platform-standard-since-year-2000-5bf17287fd38\r\n    // TL;DR this lets us have a single point of entry for multiple events, and we can avoid callback/binding hell\r\n    IroComponentWrapper.prototype.handleEvent = function handleEvent (e) {\n        var this$1 = this;\n\r\n        var inputHandler = this.props.onInput;\r\n        // Get the screen position of the component\r\n        var bounds = this.base.getBoundingClientRect();\r\n        // Prefect default browser action\r\n        e.preventDefault();\r\n        // Detect if the event is a touch event by checking if it has the `touches` property\r\n        // If it is a touch event, use the first touch input\r\n        var point = e.touches ? e.changedTouches[0] : e;\r\n        var x = point.clientX - bounds.left;\r\n        var y = point.clientY - bounds.top;\r\n        switch (e.type) {\r\n            case \"mousedown\" /* MouseDown */:\r\n            case \"touchstart\" /* TouchStart */:\r\n                var result = inputHandler(x, y, 0 /* Start */);\r\n                if (result !== false) {\r\n                    SECONDARY_EVENTS.forEach(function (event) {\r\n                        document.addEventListener(event, this$1, { passive: false });\r\n                    });\r\n                }\r\n                break;\r\n            case \"mousemove\" /* MouseMove */:\r\n            case \"touchmove\" /* TouchMove */:\r\n                inputHandler(x, y, 1 /* Move */);\r\n                break;\r\n            case \"mouseup\" /* MouseUp */:\r\n            case \"touchend\" /* TouchEnd */:\r\n                inputHandler(x, y, 2 /* End */);\r\n                SECONDARY_EVENTS.forEach(function (event) {\r\n                    document.removeEventListener(event, this$1, { passive: false });\r\n                });\r\n                break;\r\n        }\r\n    };\n\n    return IroComponentWrapper;\n}(m));\n\nfunction IroHandle(props) {\r\n    var radius = props.r;\r\n    var url = props.url;\r\n    var cx = radius;\r\n    var cy = radius;\r\n    return (h(\"svg\", { className: (\"IroHandle IroHandle--\" + (props.index) + \" \" + (props.isActive ? 'IroHandle--isActive' : '')), style: {\r\n            '-webkit-tap-highlight-color': 'rgba(0, 0, 0, 0);',\r\n            transform: (\"translate(\" + (cssValue(props.x)) + \", \" + (cssValue(props.y)) + \")\"),\r\n            willChange: 'transform',\r\n            top: cssValue(-radius),\r\n            left: cssValue(-radius),\r\n            width: cssValue(radius * 2),\r\n            height: cssValue(radius * 2),\r\n            position: 'absolute',\r\n            overflow: 'visible'\r\n        } },\r\n        url && (h(\"use\", Object.assign({ xlinkHref: resolveSvgUrl(url) }, props.props))),\r\n        !url && (h(\"circle\", { cx: cx, cy: cy, r: radius, fill: \"none\", \"stroke-width\": 2, stroke: \"#000\" })),\r\n        !url && (h(\"circle\", { cx: cx, cy: cy, r: radius - 2, fill: props.fill, \"stroke-width\": 2, stroke: \"#fff\" }))));\r\n}\r\nIroHandle.defaultProps = {\r\n    fill: 'none',\r\n    x: 0,\r\n    y: 0,\r\n    r: 8,\r\n    url: null,\r\n    props: { x: 0, y: 0 }\r\n};\n\nfunction IroSlider(props) {\r\n    var activeIndex = props.activeIndex;\r\n    var activeColor = (activeIndex !== undefined && activeIndex < props.colors.length) ? props.colors[activeIndex] : props.color;\r\n    var ref = getSliderDimensions(props);\n    var width = ref.width;\n    var height = ref.height;\n    var radius = ref.radius;\r\n    var handlePos = getSliderHandlePosition(props, activeColor);\r\n    var gradient = getSliderGradient(props, activeColor);\r\n    function handleInput(x, y, type) {\r\n        var value = getSliderValueFromInput(props, x, y);\r\n        props.parent.inputActive = true;\r\n        activeColor[props.sliderType] = value;\r\n        props.onInput(type, props.id);\r\n    }\r\n    return (h(IroComponentWrapper, Object.assign({}, props, { onInput: handleInput }), function (uid, rootProps, rootStyles) { return (h(\"div\", Object.assign({}, rootProps, { className: \"IroSlider\", style: Object.assign({}, {position: 'relative',\r\n            width: cssValue(width),\r\n            height: cssValue(height),\r\n            borderRadius: cssValue(radius),\r\n            // checkered bg to represent alpha\r\n            background: \"conic-gradient(#ccc 25%, #fff 0 50%, #ccc 0 75%, #fff 0)\",\r\n            backgroundSize: '8px 8px'},\r\n            rootStyles) }),\r\n        h(\"div\", { className: \"IroSliderGradient\", style: Object.assign({}, {position: 'absolute',\r\n                top: 0,\r\n                left: 0,\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                borderRadius: cssValue(radius),\r\n                background: cssGradient('linear', props.layoutDirection === 'horizontal' ? 'to top' : 'to right', gradient)},\r\n                cssBorderStyles(props)) }),\r\n        h(IroHandle, { isActive: true, index: activeColor.index, r: props.handleRadius, url: props.handleSvg, props: props.handleProps, x: handlePos.x, y: handlePos.y }))); }));\r\n}\r\nIroSlider.defaultProps = Object.assign({}, sliderDefaultOptions);\n\nfunction IroBox(props) {\r\n    var ref = getBoxDimensions(props);\n    var width = ref.width;\n    var height = ref.height;\n    var radius = ref.radius;\r\n    var colors = props.colors;\r\n    var colorPicker = props.parent;\r\n    var activeIndex = props.activeIndex;\r\n    var activeColor = (activeIndex !== undefined && activeIndex < props.colors.length) ? props.colors[activeIndex] : props.color;\r\n    var gradients = getBoxGradients(props, activeColor);\r\n    var handlePositions = colors.map(function (color) { return getBoxHandlePosition(props, color); });\r\n    function handleInput(x, y, inputType) {\r\n        if (inputType === 0 /* Start */) {\r\n            // getHandleAtPoint() returns the index for the handle if the point 'hits' it, or null otherwise\r\n            var activeHandle = getHandleAtPoint(props, x, y, handlePositions);\r\n            // If the input hit a handle, set it as the active handle, but don't update the color\r\n            if (activeHandle !== null) {\r\n                colorPicker.setActiveColor(activeHandle);\r\n            }\r\n            // If the input didn't hit a handle, set the currently active handle to that position\r\n            else {\r\n                colorPicker.inputActive = true;\r\n                activeColor.hsv = getBoxValueFromInput(props, x, y);\r\n                props.onInput(inputType, props.id);\r\n            }\r\n        }\r\n        // move is fired when the user has started dragging\r\n        else if (inputType === 1 /* Move */) {\r\n            colorPicker.inputActive = true;\r\n            activeColor.hsv = getBoxValueFromInput(props, x, y);\r\n        }\r\n        // let the color picker fire input:start, input:move or input:end events\r\n        props.onInput(inputType, props.id);\r\n    }\r\n    return (h(IroComponentWrapper, Object.assign({}, props, { onInput: handleInput }), function (uid, rootProps, rootStyles) { return (h(\"div\", Object.assign({}, rootProps, { className: \"IroBox\", style: Object.assign({}, {width: cssValue(width),\r\n            height: cssValue(height),\r\n            position: 'relative'},\r\n            rootStyles) }),\r\n        h(\"div\", { className: \"IroBox\", style: Object.assign({}, {width: '100%',\r\n                height: '100%',\r\n                borderRadius: cssValue(radius)},\r\n                cssBorderStyles(props),\r\n                {background: cssGradient('linear', 'to bottom', gradients[1])\r\n                    + ',' +\r\n                    cssGradient('linear', 'to right', gradients[0])}) }),\r\n        colors.filter(function (color) { return color !== activeColor; }).map(function (color) { return (h(IroHandle, { isActive: false, index: color.index, fill: color.hslString, r: props.handleRadius, url: props.handleSvg, props: props.handleProps, x: handlePositions[color.index].x, y: handlePositions[color.index].y })); }),\r\n        h(IroHandle, { isActive: true, index: activeColor.index, fill: activeColor.hslString, r: props.activeHandleRadius || props.handleRadius, url: props.handleSvg, props: props.handleProps, x: handlePositions[activeColor.index].x, y: handlePositions[activeColor.index].y }))); }));\r\n}\n\nvar HUE_GRADIENT_CLOCKWISE = 'conic-gradient(red, yellow, lime, aqua, blue, magenta, red)';\r\nvar HUE_GRADIENT_ANTICLOCKWISE = 'conic-gradient(red, magenta, blue, aqua, lime, yellow, red)';\r\nfunction IroWheel(props) {\r\n    var ref = getWheelDimensions(props);\n    var width = ref.width;\n    var colors = props.colors;\n    var borderWidth = props.borderWidth;\r\n    var colorPicker = props.parent;\r\n    var activeColor = props.color;\r\n    var hsv = activeColor.hsv;\r\n    var handlePositions = colors.map(function (color) { return getWheelHandlePosition(props, color); });\r\n    var circleStyles = {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        width: '100%',\r\n        height: '100%',\r\n        borderRadius: '50%',\r\n        boxSizing: 'border-box'\r\n    };\r\n    function handleInput(x, y, inputType) {\r\n        if (inputType === 0 /* Start */) {\r\n            // input hitbox is a square, \r\n            // so we want to ignore any initial clicks outside the circular shape of the wheel\r\n            if (!isInputInsideWheel(props, x, y)) {\r\n                // returning false will cease all event handling for this interaction\r\n                return false;\r\n            }\r\n            // getHandleAtPoint() returns the index for the handle if the point 'hits' it, or null otherwise\r\n            var activeHandle = getHandleAtPoint(props, x, y, handlePositions);\r\n            // If the input hit a handle, set it as the active handle, but don't update the color\r\n            if (activeHandle !== null) {\r\n                colorPicker.setActiveColor(activeHandle);\r\n            }\r\n            // If the input didn't hit a handle, set the currently active handle to that position\r\n            else {\r\n                colorPicker.inputActive = true;\r\n                activeColor.hsv = getWheelValueFromInput(props, x, y);\r\n                props.onInput(inputType, props.id);\r\n            }\r\n        }\r\n        // move is fired when the user has started dragging\r\n        else if (inputType === 1 /* Move */) {\r\n            colorPicker.inputActive = true;\r\n            activeColor.hsv = getWheelValueFromInput(props, x, y);\r\n        }\r\n        // let the color picker fire input:start, input:move or input:end events\r\n        props.onInput(inputType, props.id);\r\n    }\r\n    return (h(IroComponentWrapper, Object.assign({}, props, { onInput: handleInput }), function (uid, rootProps, rootStyles) { return (h(\"div\", Object.assign({}, rootProps, { className: \"IroWheel\", style: Object.assign({}, {width: cssValue(width),\r\n            height: cssValue(width),\r\n            position: 'relative'},\r\n            rootStyles) }),\r\n        h(\"div\", { className: \"IroWheelHue\", style: Object.assign({}, circleStyles,\r\n                {transform: (\"rotateZ(\" + (props.wheelAngle + 90) + \"deg)\"),\r\n                background: props.wheelDirection === 'clockwise' ? HUE_GRADIENT_CLOCKWISE : HUE_GRADIENT_ANTICLOCKWISE}) }),\r\n        h(\"div\", { className: \"IroWheelSaturation\", style: Object.assign({}, circleStyles,\r\n                {background: 'radial-gradient(circle closest-side, #fff, transparent)'}) }),\r\n        props.wheelLightness && (h(\"div\", { className: \"IroWheelLightness\", style: Object.assign({}, circleStyles,\r\n                {background: '#000',\r\n                opacity: 1 - hsv.v / 100}) })),\r\n        h(\"div\", { className: \"IroWheelBorder\", style: Object.assign({}, circleStyles,\r\n                cssBorderStyles(props)) }),\r\n        colors.filter(function (color) { return color !== activeColor; }).map(function (color) { return (h(IroHandle, { isActive: false, index: color.index, fill: color.hslString, r: props.handleRadius, url: props.handleSvg, props: props.handleProps, x: handlePositions[color.index].x, y: handlePositions[color.index].y })); }),\r\n        h(IroHandle, { isActive: true, index: activeColor.index, fill: activeColor.hslString, r: props.activeHandleRadius || props.handleRadius, url: props.handleSvg, props: props.handleProps, x: handlePositions[activeColor.index].x, y: handlePositions[activeColor.index].y }))); }));\r\n}\n\nfunction createWidget(WidgetComponent) {\r\n    var widgetFactory = function (parent, props) {\r\n        var widget; // will become an instance of the widget component class\r\n        var widgetRoot = document.createElement('div');\r\n        // Render widget into a temp DOM node\r\n        I(h(WidgetComponent, Object.assign({}, {ref: function (ref) { return widget = ref; }},\r\n            props)), widgetRoot);\r\n        function mountWidget() {\r\n            var container = parent instanceof Element ? parent : document.querySelector(parent);\r\n            container.appendChild(widget.base);\r\n            widget.onMount(container);\r\n        }\r\n        // Mount it into the DOM when the page document is ready\r\n        if (document.readyState !== 'loading') {\r\n            mountWidget();\r\n        }\r\n        else {\r\n            document.addEventListener('DOMContentLoaded', mountWidget);\r\n        }\r\n        return widget;\r\n    };\r\n    // Allow the widget factory to inherit component prototype + static class methods\r\n    // This makes it easier for plugin authors to extend the base widget component\r\n    widgetFactory.prototype = WidgetComponent.prototype;\r\n    Object.assign(widgetFactory, WidgetComponent);\r\n    // Add reference to base component too\r\n    widgetFactory.__component = WidgetComponent;\r\n    return widgetFactory;\r\n}\n\nvar IroColorPicker = /*@__PURE__*/(function (Component) {\n    function IroColorPicker(props) {\n        var this$1 = this;\n\r\n        Component.call(this, props);\r\n        this.colors = [];\r\n        this.inputActive = false;\r\n        this.events = {};\r\n        this.activeEvents = {};\r\n        this.deferredEvents = {};\r\n        this.id = props.id;\r\n        var colors = props.colors.length > 0 ? props.colors : [props.color];\r\n        colors.forEach(function (colorValue) { return this$1.addColor(colorValue); });\r\n        this.setActiveColor(0);\r\n        // Pass all the props into the component's state,\r\n        // Except we want to add the color object and make sure that refs aren't passed down to children\r\n        this.state = Object.assign({}, props,\r\n            {color: this.color,\r\n            colors: this.colors,\r\n            layout: props.layout});\r\n    }\n\n    if ( Component ) IroColorPicker.__proto__ = Component;\n    IroColorPicker.prototype = Object.create( Component && Component.prototype );\n    IroColorPicker.prototype.constructor = IroColorPicker;\r\n    // Plubic multicolor API\r\n    /**\r\n    * @desc Add a color to the color picker\r\n    * @param color new color to add\r\n    * @param index optional color index\r\n    */\r\n    IroColorPicker.prototype.addColor = function addColor (color, index) {\n        if ( index === void 0 ) index = this.colors.length;\n\r\n        // Create a new iro.Color\r\n        // Also bind it to onColorChange, so whenever the color changes it updates the color picker\r\n        var newColor = new IroColor(color, this.onColorChange.bind(this));\r\n        // Insert color @ the given index\r\n        this.colors.splice(index, 0, newColor);\r\n        // Reindex colors\r\n        this.colors.forEach(function (color, index) { return color.index = index; });\r\n        // Update picker state if necessary\r\n        if (this.state) {\r\n            this.setState({ colors: this.colors });\r\n        }\r\n        // Fire color init event\r\n        this.deferredEmit('color:init', newColor);\r\n    };\r\n    /**\r\n     * @desc Remove a color from the color picker\r\n     * @param index color index\r\n     */\r\n    IroColorPicker.prototype.removeColor = function removeColor (index) {\r\n        var color = this.colors.splice(index, 1)[0];\r\n        // Destroy the color object -- this unbinds it from the color picker\r\n        color.unbind();\r\n        // Reindex colors\r\n        this.colors.forEach(function (color, index) { return color.index = index; });\r\n        // Update picker state if necessary\r\n        if (this.state) {\r\n            this.setState({ colors: this.colors });\r\n        }\r\n        // If the active color was removed, default active color to 0\r\n        if (color.index === this.color.index) {\r\n            this.setActiveColor(0);\r\n        }\r\n        // Fire color remove event\r\n        this.emit('color:remove', color);\r\n    };\r\n    /**\r\n     * @desc Set the currently active color\r\n     * @param index color index\r\n     */\r\n    IroColorPicker.prototype.setActiveColor = function setActiveColor (index) {\r\n        this.color = this.colors[index];\r\n        if (this.state) {\r\n            this.setState({ color: this.color });\r\n        }\r\n        // Fire color switch event\r\n        this.emit('color:setActive', this.color);\r\n    };\r\n    /**\r\n     * @desc Replace all of the current colorPicker colors\r\n     * @param newColorValues list of new colors to add\r\n     */\r\n    IroColorPicker.prototype.setColors = function setColors (newColorValues, activeColorIndex) {\n        var this$1 = this;\n        if ( activeColorIndex === void 0 ) activeColorIndex = 0;\n\r\n        // Unbind color events\r\n        this.colors.forEach(function (color) { return color.unbind(); });\r\n        // Destroy old colors\r\n        this.colors = [];\r\n        // Add new colors\r\n        newColorValues.forEach(function (colorValue) { return this$1.addColor(colorValue); });\r\n        // Reset active color\r\n        this.setActiveColor(activeColorIndex);\r\n        this.emit('color:setAll', this.colors);\r\n    };\r\n    // Public ColorPicker events API\r\n    /**\r\n     * @desc Set a callback function for an event\r\n     * @param eventList event(s) to listen to\r\n     * @param callback - Function called when the event is fired\r\n     */\r\n    IroColorPicker.prototype.on = function on (eventList, callback) {\n        var this$1 = this;\n\r\n        var events = this.events;\r\n        // eventList can be an eventType string or an array of eventType strings\r\n        (!Array.isArray(eventList) ? [eventList] : eventList).forEach(function (eventType) {\r\n            // Add event callback\r\n            (events[eventType] || (events[eventType] = [])).push(callback);\r\n            // Call deferred events\r\n            // These are events that can be stored until a listener for them is added\r\n            if (this$1.deferredEvents[eventType]) {\r\n                // Deffered events store an array of arguments from when the event was called\r\n                this$1.deferredEvents[eventType].forEach(function (args) {\r\n                    callback.apply(null, args);\r\n                });\r\n                // Clear deferred events\r\n                this$1.deferredEvents[eventType] = [];\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @desc Remove a callback function for an event added with on()\r\n     * @param eventList - event(s) to listen to\r\n     * @param callback - original callback function to remove\r\n     */\r\n    IroColorPicker.prototype.off = function off (eventList, callback) {\n        var this$1 = this;\n\r\n        (!Array.isArray(eventList) ? [eventList] : eventList).forEach(function (eventType) {\r\n            var callbackList = this$1.events[eventType];\r\n            // this.emitHook('event:off', eventType, callback);\r\n            if (callbackList)\r\n                { callbackList.splice(callbackList.indexOf(callback), 1); }\r\n        });\r\n    };\r\n    /**\r\n     * @desc Emit an event\r\n     * @param eventType event to emit\r\n     */\r\n    IroColorPicker.prototype.emit = function emit (eventType) {\n        var this$1 = this;\n        var args = [], len = arguments.length - 1;\n        while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\r\n        var activeEvents = this.activeEvents;\r\n        var isEventActive = activeEvents.hasOwnProperty(eventType) ? activeEvents[eventType] : false;\r\n        // Prevent event callbacks from firing if the event is already active\r\n        // This stops infinite loops if something in an event callback causes the same event to be fired again\r\n        // (e.g. setting the color inside a color:change callback)\r\n        if (!isEventActive) {\r\n            activeEvents[eventType] = true;\r\n            var callbackList = this.events[eventType] || [];\r\n            callbackList.forEach(function (fn) { return fn.apply(this$1, args); });\r\n            activeEvents[eventType] = false;\r\n        }\r\n    };\r\n    /**\r\n     * @desc Emit an event now, or save it for when the relevent event listener is added\r\n     * @param eventType - The name of the event to emit\r\n     */\r\n    IroColorPicker.prototype.deferredEmit = function deferredEmit (eventType) {\n        var ref;\n\n        var args = [], len = arguments.length - 1;\n        while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\r\n        var deferredEvents = this.deferredEvents;\r\n        (ref = this).emit.apply(ref, [ eventType ].concat( args ));\r\n        (deferredEvents[eventType] || (deferredEvents[eventType] = [])).push(args);\r\n    };\r\n    // Public utility methods\r\n    IroColorPicker.prototype.setOptions = function setOptions (newOptions) {\r\n        this.setState(newOptions);\r\n    };\r\n    /**\r\n     * @desc Resize the color picker\r\n     * @param width - new width\r\n     */\r\n    IroColorPicker.prototype.resize = function resize (width) {\r\n        this.setOptions({ width: width });\r\n    };\r\n    /**\r\n     * @desc Reset the color picker to the initial color provided in the color picker options\r\n     */\r\n    IroColorPicker.prototype.reset = function reset () {\r\n        this.colors.forEach(function (color) { return color.reset(); });\r\n        this.setState({ colors: this.colors });\r\n    };\r\n    /**\r\n     * @desc Called by the createWidget wrapper when the element is mounted into the page\r\n     * @param container - the container element for this ColorPicker instance\r\n     */\r\n    IroColorPicker.prototype.onMount = function onMount (container) {\r\n        this.el = container;\r\n        this.deferredEmit('mount', this);\r\n    };\r\n    // Internal methods\r\n    /**\r\n     * @desc React to a color update\r\n     * @param color - current color\r\n     * @param changes - shows which h,s,v,a color channels changed\r\n     */\r\n    IroColorPicker.prototype.onColorChange = function onColorChange (color, changes) {\r\n        this.setState({ color: this.color });\r\n        if (this.inputActive) {\r\n            this.inputActive = false;\r\n            this.emit('input:change', color, changes);\r\n        }\r\n        this.emit('color:change', color, changes);\r\n    };\r\n    /**\r\n     * @desc Handle input from a UI control element\r\n     * @param type - event type\r\n     */\r\n    IroColorPicker.prototype.emitInputEvent = function emitInputEvent (type, originId) {\r\n        if (type === 0 /* Start */) {\r\n            this.emit('input:start', this.color, originId);\r\n        }\r\n        else if (type === 1 /* Move */) {\r\n            this.emit('input:move', this.color, originId);\r\n        }\r\n        else if (type === 2 /* End */) {\r\n            this.emit('input:end', this.color, originId);\r\n        }\r\n    };\r\n    IroColorPicker.prototype.render = function render (props, state) {\n        var this$1 = this;\n\r\n        var layout = state.layout;\r\n        // use layout shorthands\r\n        if (!Array.isArray(layout)) {\r\n            switch (layout) {\r\n                // TODO: implement some?\r\n                default:\r\n                    layout = [\r\n                        { component: IroWheel },\r\n                        { component: IroSlider } ];\r\n            }\r\n            // add transparency slider to the layout\r\n            if (state.transparency) {\r\n                layout.push({\r\n                    component: IroSlider,\r\n                    options: {\r\n                        sliderType: 'alpha'\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return (h(\"div\", { class: \"IroColorPicker\", id: state.id, style: {\r\n                display: state.display\r\n            } }, layout.map(function (ref, componentIndex) {\n                var UiComponent = ref.component;\n                var options = ref.options;\n\n                return (h(UiComponent, Object.assign({}, state, options, { ref: undefined, onInput: this$1.emitInputEvent.bind(this$1), parent: this$1, index: componentIndex })));\n        })));\r\n    };\n\n    return IroColorPicker;\n}(m));\r\nIroColorPicker.defaultProps = Object.assign({}, iroColorPickerOptionDefaults,\r\n    {colors: [],\r\n    display: 'block',\r\n    id: null,\r\n    layout: 'default',\r\n    margin: null});\r\nvar IroColorPickerWidget = createWidget(IroColorPicker);\n\nvar iro;\r\n(function (iro) {\r\n    iro.version = \"5.5.2\"; // replaced by @rollup/plugin-replace; see rollup.config.js\r\n    iro.Color = IroColor;\r\n    iro.ColorPicker = IroColorPickerWidget;\r\n    var ui;\r\n    (function (ui) {\r\n        ui.h = h;\r\n        ui.ComponentBase = IroComponentWrapper;\r\n        ui.Handle = IroHandle;\r\n        ui.Slider = IroSlider;\r\n        ui.Wheel = IroWheel;\r\n        ui.Box = IroBox;\r\n    })(ui = iro.ui || (iro.ui = {}));\r\n})(iro || (iro = {}));\r\nvar iro$1 = iro;\n\nexport default iro$1;\n","/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t=window,e=t.ShadowRoot&&(void 0===t.ShadyCSS||t.ShadyCSS.nativeShadow)&&\"adoptedStyleSheets\"in Document.prototype&&\"replace\"in CSSStyleSheet.prototype,s=Symbol(),n=new WeakMap;class o{constructor(t,e,n){if(this._$cssResult$=!0,n!==s)throw Error(\"CSSResult is not constructable. Use `unsafeCSS` or `css` instead.\");this.cssText=t,this.t=e}get styleSheet(){let t=this.o;const s=this.t;if(e&&void 0===t){const e=void 0!==s&&1===s.length;e&&(t=n.get(s)),void 0===t&&((this.o=t=new CSSStyleSheet).replaceSync(this.cssText),e&&n.set(s,t))}return t}toString(){return this.cssText}}const r=t=>new o(\"string\"==typeof t?t:t+\"\",void 0,s),i=(t,...e)=>{const n=1===t.length?t[0]:e.reduce(((e,s,n)=>e+(t=>{if(!0===t._$cssResult$)return t.cssText;if(\"number\"==typeof t)return t;throw Error(\"Value passed to 'css' function must be a 'css' function result: \"+t+\". Use 'unsafeCSS' to pass non-literal values, but take care to ensure page security.\")})(s)+t[n+1]),t[0]);return new o(n,t,s)},S=(s,n)=>{e?s.adoptedStyleSheets=n.map((t=>t instanceof CSSStyleSheet?t:t.styleSheet)):n.forEach((e=>{const n=document.createElement(\"style\"),o=t.litNonce;void 0!==o&&n.setAttribute(\"nonce\",o),n.textContent=e.cssText,s.appendChild(n)}))},c=e?t=>t:t=>t instanceof CSSStyleSheet?(t=>{let e=\"\";for(const s of t.cssRules)e+=s.cssText;return r(e)})(t):t;export{o as CSSResult,S as adoptStyles,i as css,c as getCompatibleStyle,e as supportsAdoptingStyleSheets,r as unsafeCSS};\n//# sourceMappingURL=css-tag.js.map\n","import{adoptStyles as t}from\"@lit/reactive-element/css-tag.js\";\n/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */function e(e){return class extends e{createRenderRoot(){const e=this.constructor,{registry:s,elementDefinitions:n,shadowRootOptions:o}=e;n&&!s&&(e.registry=new CustomElementRegistry,Object.entries(n).forEach((([t,s])=>e.registry.define(t,s))));const i=this.renderOptions.creationScope=this.attachShadow({...o,customElements:e.registry});return t(i,this.constructor.elementStyles),i}}}export{e as ScopedRegistryHost};\n//# sourceMappingURL=scoped-registry-mixin.js.map\n","import { css } from 'lit';\n\nconst style = css`\n  .IroSlider {\n    display: none !important;\n  }\n\n  .light-entity-card {\n    padding: 16px;\n  }\n\n  .light-entity-child-card {\n    box-shadow: none !important;\n    padding: 0 !important;\n  }\n\n  .light-entity-card.group {\n    padding-bottom: 5;\n    padding-top: 0;\n  }\n\n  .ha-slider-full-width ha-slider {\n    width: 100%;\n  }\n\n  .percent-slider {\n    color: var(--primary-text-color);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .light-entity-card__header {\n    display: flex;\n    justify-content: space-between;\n    @apply --paper-font-headline;\n    line-height: 40px;\n    color: var(--primary-text-color);\n  }\n\n  .group .light-entity-card__header {\n  }\n\n  .light-entity-card-sliders > div {\n    margin-top: 10px;\n  }\n\n  .group .light-entity-card-sliders > div {\n    margin-top: 0px;\n  }\n\n  .light-entity-card__toggle {\n    display: flex;\n    cursor: pointer;\n  }\n\n  .light-entity-card__color-picker {\n    display: flex;\n    justify-content: space-around;\n    margin-top: 10px;\n  }\n  \n  .light-entity-card-color_temp {\n    background-image: var(--ha-slider-background);\n  }\n\n  .light-entity-card-effectlist {\n    padding-top: 10px;\n    padding-bottom: 10px;\n  }\n\n  .group .light-entity-card-effectlist {\n    padding-bottom: 20px;\n  }\n\n  .light-entity-card-center {\n    display: flex;\n    justify-content: center;\n    cursor: pointer;\n  }\n\n  .hidden {\n    display: none;\n  }\n\n  .icon-container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nexport default style;\n","export default {\n  shorten_cards: false,\n  consolidate_entities: false,\n  child_card: false,\n  hide_header: false,\n  show_header_icon: false,\n  header: '',\n\n  color_wheel: true,\n  persist_features: false,\n  brightness: true,\n  color_temp: true,\n  white_value: true,\n  color_picker: true,\n  speed: true,\n  intensity: true,\n\n  force_features: false,\n\n  show_slider_percent: false,\n  full_width_sliders: false,\n\n  brightness_icon: 'weather-sunny',\n  white_icon: 'file-word-box',\n  temperature_icon: 'thermometer',\n  speed_icon: 'speedometer',\n  intensity_icon: 'transit-connection-horizontal',\n};\n","import { css } from 'lit';\n\nconst style = css`\n  .entities {\n    padding-top: 10px;\n    padding-bottom: 10px;\n    display: flex;\n  }\n\n  .entities ha-formfield {\n    display: block;\n    margin-bottom: 10px;\n    margin-left: 10px;\n  }\n\n  .checkbox-options {\n    display: flex;\n  }\n  \n  mwc-select {\n    width: 100%;\n  }\n\n  .checkbox-options ha-formfield,\n  .entities mwc-switch,\n  .entities ha-form-string {\n    padding-right: 2%;\n    width: 48%;\n  }\n\n  .checkbox-options ha-formfield {\n    margin-top: 10px;\n  }\n\n  .overall-config {\n    margin-bottom: 20px;\n  }\n`;\n\nexport default style;\n","const buildElementDefinitions = (elements, constructor) => elements.reduce((aggregate, element) => {\n  if (element.defineId) {\n    // eslint-disable-next-line no-param-reassign\n    aggregate[element.defineId] = element;\n  } else {\n    element.promise.then((clazz) => {\n      if (constructor.registry.get(element.name) === undefined) {\n        constructor.registry.define(element.name, clazz);\n      }\n    });\n  }\n  return aggregate;\n}, {});\n\nexport default buildElementDefinitions;\n","const globalElementLoader = name => ({\n  name,\n  promise: customElements.whenDefined(name).then(() => customElements.get(name)),\n});\n\nexport default globalElementLoader;\n","import { LitElement, html } from 'lit';\nimport { ScopedRegistryHost } from '@lit-labs/scoped-registry-mixin';\nimport style from './style-editor';\nimport defaultConfig from './defaults';\nimport buildElementDefinitions from './buildElementDefinitions';\nimport globalElementLoader from './globalElementLoader';\n\nexport const fireEvent = (node, type, detail = {}, options = {}) => {\n  const event = new Event(type, {\n    bubbles: options.bubbles === undefined ? true : options.bubbles,\n    cancelable: Boolean(options.cancelable),\n    composed: options.composed === undefined ? true : options.composed,\n  });\n\n  event.detail = detail;\n  node.dispatchEvent(event);\n  return event;\n};\n\nexport default class LightEntityCardEditor extends ScopedRegistryHost(LitElement) {\n  static get elementDefinitions() {\n    return buildElementDefinitions([\n      globalElementLoader('ha-checkbox'),\n      globalElementLoader('ha-formfield'),\n      globalElementLoader('ha-form-string'),\n      globalElementLoader('ha-select'),\n      globalElementLoader('mwc-list-item'),\n    ], LightEntityCardEditor);\n  }\n\n  static get styles() {\n    return style;\n  }\n\n  static get properties() {\n    return { hass: {}, _config: {} };\n  }\n\n  setConfig(config) {\n    this._config = {\n      ...defaultConfig,\n      ...config,\n    };\n  }\n\n  get entityOptions() {\n    const allEntities = Object.keys(this.hass.states).filter(eid => ['switch', 'light', 'group'].includes(eid.substr(0, eid.indexOf('.'))));\n\n    allEntities.sort();\n    return allEntities;\n  }\n\n  firstUpdated() {\n    this._firstRendered = true;\n  }\n\n  render() {\n    if (!this.hass) {\n      return html``;\n    }\n\n    // get header name\n    let { header } = this._config;\n    if (!header && this._config.entity) {\n      let name = this._config.entity.split('.')[1] || '';\n      if (name) {\n        name = name.charAt(0).toUpperCase() + name.slice(1);\n        header = name;\n      }\n    }\n\n    // eslint-disable-next-line arrow-body-style\n    // eslint-disable-next-line arrow-parens\n    const options = this.entityOptions.map(entity => html`<mwc-list-item value=\"${entity}\" ?selected=${entity === this._config.entity}>${entity}</mwc-list-item>`);\n\n    return html`\n      <div class=\"card-config\">\n\n        <div class=overall-config'>\n          <ha-form-string\n            .schema=${{ name: 'header', type: 'string' }}\n            label=\"Header\"\n            .data=\"${header}\"\n            .configValue=\"${'header'}\"\n            @changed=\"${this.configChanged}\"\n          ></ha-form-string>\n        </div>\n\n        <div class='entities'>\n          <ha-select\n            label=\"Entity\"\n            @selected=\"${this.configChanged}\" \n            @closed=\"${e => e.stopPropagation()}\" \n            .configValue=\"${'entity'}\"\n          >\n            ${options}\n          </ha-select>\n          <ha-form-string\n            .schema=${{ name: 'brightness_icon', type: 'string' }}\n            label=\"Brightness Icon\"\n            .data=\"${this._config.brightness_icon}\"\n            .configValue=\"${'brightness_icon'}\"\n            @changed=\"${this.configChanged}\"\n          ></ha-form-string>\n        </div>\n\n        <div class='entities'>\n         <ha-form-string\n           .schema=${{ name: 'white_icon', type: 'string' }}\n           label=\"White Icon\"\n            .data=\"${this._config.white_icon}\"\n            .configValue=\"${'white_icon'}\"\n            @changed=\"${this.configChanged}\"\n          ></ha-form-string>\n          <ha-form-string\n            .schema=${{ name: 'temperature_icon', type: 'string' }}\n            label=\"Temperature Icon\"\n            .data=\"${this._config.temperature_icon}\"\n            .configValue=\"${'temperature_icon'}\"\n            @changed=\"${this.configChanged}\"\n          ></ha-form-string>\n        </div>\n\n        <div class='overall-config'>\n          <div class='checkbox-options'>\n            <ha-formfield label=\"Show Color Wheel\">\n              <ha-checkbox\n                @change=\"${this.checkboxConfigChanged}\" \n                .checked=${this._config.color_wheel}\n                .value=\"${'color_wheel'}\"\n              ></ha-checkbox>\n            </ha-formfield>\n            <ha-formfield label=\"Shorten Cards\">\n              <ha-checkbox\n                @change=\"${this.checkboxConfigChanged}\"\n                .checked=${this._config.shorten_cards}\n                .value=\"${'shorten_cards'}\"\n              ></ha-checkbox>\n            </ha-formfield>\n            </div>\n\n            <div class='checkbox-options'>\n              <ha-formfield label=\"Persist Features\">\n                <ha-checkbox\n                  @change=\"${this.checkboxConfigChanged}\"\n                  .checked=${this._config.persist_features}\n                  .value=\"${'persist_features'}\"\n                ></ha-checkbox>\n              </ha-formfield>\n              <ha-formfield label=\"Show Brightness\">\n                <ha-checkbox\n                  @change=\"${this.checkboxConfigChanged}\"\n                  .checked=${this._config.brightness}\n                  .value=\"${'brightness'}\"\n                ></ha-checkbox>\n              </ha-formfield>\n            </div>\n\n            <div class='checkbox-options'>\n              <ha-formfield label=\"Show Color Temp\">\n                <ha-checkbox\n                  @change=\"${this.checkboxConfigChanged}\"\n                  .checked=${this._config.color_temp}\n                  .value=\"${'color_temp'}\"\n                ></ha-checkbox>\n              </ha-formfield>\n              <ha-formfield label=\"Show White Value\">\n                <ha-checkbox\n                  @change=\"${this.checkboxConfigChanged}\"\n                  .checked=${this._config.white_value}\n                  .value=\"${'white_value'}\"\n                ></ha-checkbox>\n              </ha-formfield>\n            </div>\n\n            <div class='checkbox-options'>\n              <ha-formfield label=\"Show Speed\">\n                <ha-checkbox\n                  @change=\"${this.checkboxConfigChanged}\"\n                  .checked=${this._config.speed}\n                  .value=\"${'speed'}\"\n                ></ha-checkbox>\n              </ha-formfield>\n              <ha-formfield label=\"Show Intensity\">\n                <ha-checkbox\n                  @change=\"${this.checkboxConfigChanged}\"\n                  .checked=${this._config.intensity}\n                  .value=\"${'intensity'}\"\n                ></ha-checkbox>\n              </ha-formfield>\n            </div>\n\n            <div class='checkbox-options'>\n              <ha-formfield label=\"Show Color Picker\">\n                <ha-checkbox\n                  @change=\"${this.checkboxConfigChanged}\"\n                  .checked=${this._config.color_picker}\n                  .value=\"${'color_picker'}\"\n                ></ha-checkbox>\n              </ha-formfield>\n              <ha-formfield label=\"Show Effects List\">\n                <ha-checkbox\n                  @change=\"${this.checkboxConfigChanged}\"\n                  .checked=${this._config.effects_list}\n                  .value=\"${'effects_list'}\"\n                ></ha-checkbox>\n              </ha-formfield>\n            </div>\n\n            <div class='checkbox-options'>\n              <ha-formfield label=\"Full Width Sliders\">\n                <ha-checkbox\n                  @change=\"${this.checkboxConfigChanged}\"\n                  .checked=${this._config.full_width_sliders}\n                  .value=\"${'full_width_sliders'}\"\n                ></ha-checkbox>\n              </ha-formfield>\n              <ha-formfield label=\"Show Slider Percent\">\n                <ha-checkbox\n                  @change=\"${this.checkboxConfigChanged}\"\n                  .checked=${this._config.show_slider_percent}\n                  .value=\"${'show_slider_percent'}\"\n                ></ha-checkbox>\n              </ha-formfield>\n            </div>\n\n            <div class='checkbox-options'>\n              <ha-formfield label=\"Hide Header\">\n                <ha-checkbox\n                  @change=\"${this.checkboxConfigChanged}\"\n                  .checked=${this._config.hide_header}\n                  .value=\"${'hide_header'}\"\n                ></ha-checkbox>\n              </ha-formfield>\n              <ha-formfield label=\"Show Header Icon\">\n                <ha-checkbox\n                  @change=\"${this.checkboxConfigChanged}\"\n                  .checked=${this._config.show_header_icon}\n                  .value=\"${'show_header_icon'}\"\n                ></ha-checkbox>\n              </ha-formfield>\n              <ha-formfield label=\"Child Card\">\n                <ha-checkbox\n                  @change=\"${this.checkboxConfigChanged}\"\n                  .checked=${this._config.child_card}\n                  .value=\"${'child_card'}\"\n                ></ha-checkbox>\n              </ha-formfield>\n            </div>\n\n            <div class='checkbox-options'>\n              <ha-formfield label=\"Force Features\">\n                <ha-checkbox\n                  @change=\"${this.checkboxConfigChanged}\"\n                  .checked=${this._config.force_features}\n                  .value=\"${'force_features'}\"\n                ></ha-checkbox>\n              </ha-formfield>\n            </div>\n\n            <div class='checkbox-options'>\n            <ha-formfield label=\"Consolidate Entities\">\n              <ha-checkbox\n                @change=\"${this.checkboxConfigChanged}\"\n                .checked=${this._config.consolidate_entities}\n                .value=\"${'consolidate_entities'}\"\n              ></ha-checkbox>\n            </ha-formfield>\n          </div>\n          </div>\n      </div>\n    `;\n  }\n\n  configChanged(ev) {\n    if (!this._config || !this.hass || !this._firstRendered) return;\n    const {\n      target: { configValue, value },\n      detail: { value: checkedValue },\n    } = ev;\n\n    if (checkedValue !== undefined && checkedValue !== null) {\n      this._config = { ...this._config, [configValue]: checkedValue };\n    } else {\n      this._config = { ...this._config, [configValue]: value };\n    }\n\n    fireEvent(this, 'config-changed', { config: this._config });\n  }\n\n  checkboxConfigChanged(ev) {\n    if (!this._config || !this.hass || !this._firstRendered) return;\n    const {\n      target: { value, checked },\n    } = ev;\n\n    this._config = { ...this._config, [value]: checked };\n\n    fireEvent(this, 'config-changed', { config: this._config });\n  }\n}\n","import { LitElement, html } from 'lit';\nimport iro from '@jaames/iro';\nimport { ScopedRegistryHost } from '@lit-labs/scoped-registry-mixin';\n\nimport style from './style';\nimport defaultConfig from './defaults';\nimport LightEntityCardEditor from './index-editor';\nimport packageJson from '../package.json';\nimport buildElementDefinitions from './buildElementDefinitions';\nimport globalElementLoader from './globalElementLoader';\n\nconst editorName = 'light-entity-card-editor';\ncustomElements.define(editorName, LightEntityCardEditor);\n\nconsole.info(`light-entity-card v${packageJson.version}`);\n\nclass LightEntityCard extends ScopedRegistryHost(LitElement) {\n  static get elementDefinitions() {\n    return buildElementDefinitions(\n      [\n        globalElementLoader('ha-card'),\n        globalElementLoader('more-info-light'),\n        globalElementLoader('ha-switch'),\n        globalElementLoader('ha-icon'),\n        globalElementLoader('state-badge'),\n        globalElementLoader('ha-slider'),\n        globalElementLoader('ha-color-picker'),\n        globalElementLoader('ha-select'),\n        globalElementLoader('mwc-list-item'),\n      ],\n      LightEntityCard\n    );\n  }\n  \n  static get properties() {\n    return {\n      hass: {},\n      config: {},\n    };\n  }\n\n  async firstUpdated() {\n    this.setColorWheels();\n    this._firstUpdate = true;\n  }\n  \n  async updated() {\n    this.setColorWheels();\n  }\n\n  setColorWheels() {\n    if(!this._shownStateObjects) return;\n\n    const colorPickerWidth = this.getColorPickerWidth();\n\n    for(const entity of this._shownStateObjects) {\n      const picker = this.renderRoot.getElementById(`picker-${entity.entity_id}`)\n      if(!picker) continue;\n      picker.innerHTML = '';\n\n      let color = { h: 0, s: 0, l: 50 }\n\n      if(entity.attributes.hs_color) {\n        const h = parseInt(entity.attributes.hs_color[0]);\n        const s = parseInt(entity.attributes.hs_color[1]);\n        color = { h, s, l: 50 }\n      }\n\n      const colorPicker = new iro.ColorPicker(picker, {\n        sliderSize: 0,\n        color,\n        width: colorPickerWidth,\n        wheelLightness: false,\n      })\n\n      colorPicker.on(\"input:end\", color => this.setColorPicker(color.hsl, entity));\n    }\n  }\n\n  getColorPickerWidth() {\n    const elem = this.shadowRoot.querySelector('.light-entity-card');\n\n    const width = elem.offsetWidth;\n    const shorten = this.config.shorten_cards;\n\n    const calcWidth = width - (shorten ? 100: 50);\n    const maxWidth = shorten ? 200 : 300;\n    const realWidth = maxWidth > calcWidth ? calcWidth : maxWidth\n\n    return realWidth;\n  }\n\n  /**\n   * checks and saves config of entity\n   * @param {*} config\n   */\n  setConfig(config) {\n    if (!config.entity) throw Error('entity required.');\n\n    this.config = {\n      ...defaultConfig,\n      ...config,\n    };\n  }\n\n  static async getConfigElement() {\n    // eslint-disable-next-line no-undef\n    return document.createElement(editorName);\n  }\n\n  static get featureNames() {\n    return {\n      brightness: 1,\n      colorTemp: 2,\n      effectList: 4,\n      color: 16,\n      whiteValue: 128,\n    };\n  }\n\n  static get cmdToggle() {\n    return {\n      on: 'turn_on',\n      off: 'turn_off',\n    };\n  }\n\n  static get entityLength() {\n    return {\n      light: 10,\n      switch: 1,\n    };\n  }\n\n  /**\n   * get the current size of the card\n   * @return {Number}\n   */\n  getCardSize() {\n    if (!this.config || !this.__hass || !this.__hass.states[this.config.entity]) {\n      return 1;\n    }\n\n    let cardLength = 0;\n    const entities = this.__hass.states[this.config.entity];\n\n    // if given a group entity then sum length of each entity by type\n    // else just get the sible entity length\n    if (Array.isArray(entities.attributes.entity_id)) {\n      entities.attributes.entity_id.forEach(entity_id => (cardLength += this.getEntityLength(entity_id)));\n    } else {\n      cardLength += this.getEntityLength(entities.attributes.entity_id);\n    }\n\n    // if we are compacting the card account for that\n    if (this.config.group) {\n      cardLength *= 0.8;\n    }\n\n    return parseInt(cardLength, 1);\n  }\n\n  /**\n   * determines the UI length of an entity\n   * @param {string} entity_id\n   */\n  getEntityLength(entity_id) {\n    if (/^light\\./.test(entity_id)) {\n      return LightEntityCard.entityLength.light;\n    } else if (/^switch\\./.test(entity_id)) {\n      return LightEntityCard.entityLength.switch;\n    } else {\n      return 0;\n    }\n  }\n\n  /**\n   * generates the CSS styles for this card\n   * @return {TemplateResult}\n   */\n  get styles() {\n    return style;\n  }\n\n  get language() {\n    return this.__hass.resources[this.__hass.language];\n  }\n\n  /**\n   * check if the given entity is on or off\n   * @param {LightEntity} stateObj\n   * @return {Boolean}\n   */\n  isEntityOn(stateObj) {\n    return stateObj.state === 'on';\n  }\n\n  /**\n   * generates a card for each given entiy in the config\n   * @return {TemplateResult}\n   */\n  render() {\n    const entity = this.hass.states[this.config.entity];\n    if (!entity) {\n      return html`\n        <style>\n          ${this.styles}\n        </style>\n        <ha-card> ${`Invalid entity: ${this.config.entity}`} </ha-card>\n      `;\n    }\n\n    this._stateObjects = this.getEntitiesToShow(entity);\n\n    // need to find what state objects are actually going to be shown\n    if (this.config.consolidate_entities) {\n      this._shownStateObjects = [entity];\n    } else {\n      this._shownStateObjects = [...this._stateObjects];\n    }\n\n    const templates = this._shownStateObjects.reduce(\n      (htmlTemplate, stateObj) => html`${htmlTemplate}${this.createEntityTemplate(stateObj)}`,\n      // eslint-disable-next-line comma-dangle\n      ''\n    );\n\n    const css = `light-entity-card ${this.config.shorten_cards ? ' group' : ''} ${\n      this.config.child_card ? ' light-entity-child-card' : ''\n    }`;\n\n    setTimeout(() => {\n      this.setColorWheels();\n    }, 100)\n\n    return html`\n      <style>\n        ${this.styles}\n      </style>\n      <ha-card class=\"${css}\">\n        ${templates}\n      </ha-card>\n    `;\n  }\n\n  /**\n   * gets all the entities we need to build this card for\n   * @param {LightEntity|GroupEntity} entities\n   * @return {Array<LightEntity>}\n   */\n  getEntitiesToShow(entities) {\n    if (entities.attributes.entity_id && Array.isArray(entities.attributes.entity_id))\n      return entities.attributes.entity_id.map(entity_id => this.hass.states[entity_id]).filter(Boolean);\n\n    return [entities];\n  }\n\n  /**\n   * creates an entity's template\n   * @param {LightEntity} stateObj\n   * @return {TemplateResult}\n   */\n  createEntityTemplate(stateObj) {\n    const sliderClass = this.config.full_width_sliders ? 'ha-slider-full-width' : '';\n\n    return html`\n      ${this.createHeader(stateObj)}\n      <div class=\"light-entity-card-sliders ${sliderClass}\">\n        ${this.createBrightnessSlider(stateObj)} ${this.createSpeedSlider(stateObj)}\n        ${this.createIntensitySlider(stateObj)} ${this.createColorTemperature(stateObj)}\n        ${this.createWhiteValue(stateObj)}\n      </div>\n      ${this.createColorPicker(stateObj)} ${this.createEffectList(stateObj)}\n    `;\n  }\n\n  /**\n   * creates card header with state toggle for a given entity\n   * @param {LightEntity} stateObj\n   * @return {TemplateResult}\n   */\n  createHeader(stateObj) {\n    if (this.config.hide_header) return html``;\n    const title = this.config.header || stateObj.attributes.friendly_name || stateObj.entity_id;\n\n    return html`\n      <div class=\"light-entity-card__header\">\n        ${this.showHeaderIcon(stateObj)}\n        <div class=\"light-entity-card__title\">${title}</div>\n        <div class=\"light-entity-card-toggle\">\n          <ha-switch .checked=${this.isEntityOn(stateObj)} @change=${e => this.setToggle(e, stateObj)}></ha-switch>\n        </div>\n      </div>\n    `;\n  }\n\n  showHeaderIcon(stateObj) {\n    if (!this.config.show_header_icon) return html``;\n\n    return html`\n      <div class=\"icon-container\">\n        <state-badge .stateObj=${stateObj}></state-badge>\n      </div>\n    `;\n  }\n\n  /**\n   * creates brightness slider\n   * @param {LightEntity} stateObj\n   * @return {TemplateResult}\n   */\n  createBrightnessSlider(stateObj) {\n    if (this.config.brightness === false) return html``;\n    if (this.dontShowFeature('brightness', stateObj)) return html``;\n\n    return html`\n      <div class=\"control light-entity-card-center\">\n        <div class=\"icon-container\">\n          <ha-icon icon=\"hass:${this.config.brightness_icon}\"></ha-icon>\n        </div>\n        <ha-slider\n          .value=\"${stateObj.attributes.brightness || 0}\"\n          @change=\"${event => this._setValue(event, stateObj, 'brightness')}\"\n          min=\"1\"\n          max=\"255\"\n        ></ha-slider>\n        ${this.showPercent(stateObj.attributes.brightness, 0, 254)}\n      </div>\n    `;\n  }\n\n  /**\n   * creates speed slider\n   * @param {LightEntity} stateObj\n   * @return {TemplateResult}\n   */\n  createSpeedSlider(stateObj) {\n    if (this.config.speed === false) return html``;\n    if (this.dontShowFeature('speed', stateObj)) return html``;\n\n    return html`\n      <div class=\"control light-entity-card-center\">\n        <div class=\"icon-container\">\n          <ha-icon icon=\"hass:${this.config.speed_icon}\"></ha-icon>\n        </div>\n        <ha-slider\n          .value=\"${stateObj.attributes.speed || 0}\"\n          @change=\"${event => this._setValue(event, stateObj, 'speed')}\"\n          min=\"1\"\n          max=\"255\"\n        ></ha-slider>\n        ${this.showPercent(stateObj.attributes.speed, 0, 254)}\n      </div>\n    `;\n  }\n\n  /**\n   * creates intensity slider\n   * @param {LightEntity} stateObj\n   * @return {TemplateResult}\n   */\n  createIntensitySlider(stateObj) {\n    if (this.config.speed === false) return html``;\n    if (this.dontShowFeature('intensity', stateObj)) return html``;\n\n    return html`\n      <div class=\"control light-entity-card-center\">\n        <div class=\"icon-container\">\n          <ha-icon icon=\"hass:${this.config.intensity_icon}\"></ha-icon>\n        </div>\n        <ha-slider\n          .value=\"${stateObj.attributes.intensity || 0}\"\n          @change=\"${event => this._setValue(event, stateObj, 'intensity')}\"\n          min=\"1\"\n          max=\"255\"\n        ></ha-slider>\n        ${this.showPercent(stateObj.attributes.intensity, 0, 254)}\n      </div>\n    `;\n  }\n\n  /**\n   * shows slider percent if config is set\n   * @param {number} value\n   * @param {number} min\n   * @param {number} max\n   * @return {TemplateResult}\n   */\n  showPercent(value, min, max) {\n    if (!this.config.show_slider_percent) return html``;\n    let percent = parseInt(((value - min) * 100) / (max - min), 0);\n    if (isNaN(percent)) percent = 0;\n\n    return html` <div class=\"percent-slider\">${percent}%</div> `;\n  }\n\n  /**\n   * creates color temperature slider for a given entity\n   * @param {LightEntity} stateObj\n   * @return {TemplateResult}\n   */\n  createColorTemperature(stateObj) {\n    if (this.config.color_temp === false) return html``;\n    if (this.dontShowFeature('colorTemp', stateObj)) return html``;\n\n    const percent = this.showPercent(\n      stateObj.attributes.color_temp,\n      stateObj.attributes.min_mireds - 1,\n      // eslint-disable-next-line comma-dangle\n      stateObj.attributes.max_mireds - 1\n    );\n\n    return html`\n      <div class=\"control light-entity-card-center\">\n        <div class=\"icon-container\">\n          <ha-icon icon=\"hass:${this.config.temperature_icon}\"></ha-icon>\n        </div>\n        <ha-slider\n          class=\"light-entity-card-color_temp\"\n          min=\"${stateObj.attributes.min_mireds}\"\n          max=\"${stateObj.attributes.max_mireds}\"\n          .value=${stateObj.attributes.color_temp || 0}\n          @change=\"${event => this._setValue(event, stateObj, 'color_temp')}\"\n        >\n        </ha-slider>\n        ${percent}\n      </div>\n    `;\n  }\n\n  /**\n   * creates white value slider for a given entity\n   * @param {LightEntity} stateObj\n   * @return {TemplateResult}\n   */\n  createWhiteValue(stateObj) {\n    if (this.config.white_value === false) return html``;\n    if (this.dontShowFeature('whiteValue', stateObj)) return html``;\n\n    return html`\n      <div class=\"control light-entity-card-center\">\n        <div class=\"icon-container\">\n          <ha-icon icon=\"hass:${this.config.white_icon}\"></ha-icon>\n        </div>\n        <ha-slider\n          max=\"255\"\n          .value=\"${stateObj.attributes.white_value || 0}\"\n          @change=\"${event => this._setValue(event, stateObj, 'white_value')}\"\n        >\n        </ha-slider>\n        ${this.showPercent(stateObj.attributes.white_value, 0, 254)}\n      </div>\n    `;\n  }\n\n  /**\n   * creates effect list dropdown for a given entity\n   * @param {LightEntity} stateObj\n   * @return {TemplateResult}\n   */\n  createEffectList(stateObj) {\n    // do we disable effect list always?\n    if (this.config.effects_list === false) return html``;\n\n    // need to check state and persist_features here because if given custom effect list we may\n    // want to sho that even if the feature doesn't exist so dont check that part to move forward just persist_features/state\n    if (!this.config.persist_features && !this.isEntityOn(stateObj)) return html``;\n\n    let effect_list = stateObj.attributes.effect_list || [];\n\n    // if we were given a custom list then use that\n    if (this.config.effects_list && Array.isArray(this.config.effects_list)) {\n      effect_list = this.config.effects_list;\n    } else if (this.config.effects_list && this.hass.states[this.config.effects_list]) {\n      // else if given an input_select entity use that as effect list\n      const inputSelect = this.hass.states[this.config.effects_list];\n      effect_list = (inputSelect.attributes && inputSelect.attributes.options) || [];\n    } else if (this.dontShowFeature('effectList', stateObj)) {\n      // finally if no custom list nor feature exists then dont show effect list\n      return html``;\n    }\n\n    const listItems = effect_list.map(effect => this.createListItem(stateObj, effect));\n    const caption = this.language['ui.card.light.effect'];\n\n    return html`\n      <div class=\"control light-entity-card-center light-entity-card-effectlist\">\n        <ha-select \n          @closed=\"${e => e.stopPropagation()}\" \n          @selected=${e => this.setEffect(e, stateObj)} \n          label=\"${caption}\" \n        >\n          ${listItems}\n        </ha-select>\n      </div>\n    `;\n  }\n\n  createListItem(stateObj, effect) {\n    return html`<mwc-list-item value=\"${effect}\" ?selected=${effect === stateObj.attributes.effect}\n      >${effect}</mwc-list-item\n    >`;\n  }\n\n  /**\n   * creates color picker wheel for a given entity\n   * @param {LightEntity} stateObj\n   * @return {TemplateResult}\n   */\n  createColorPicker(stateObj) {\n    if (this.config.color_picker === false) return html``;\n    if (this.dontShowFeature('color', stateObj)) return html``;\n\n    return html`\n      <div class=\"light-entity-card__color-picker\">\n        <div id=\"picker-${stateObj.entity_id}\"></div>\n      </div>\n    `;\n    \n  }\n\n  /**\n   * do we show a feature or not?\n   * @param {string} featureName\n   * @param {LightEntity} stateObj\n   * @return {boolean}\n   */\n  dontShowFeature(featureName, stateObj) {\n    // show all feature if this is set to true\n    if (this.config.force_features) return false;\n\n    // WLED support\n    if (featureName === 'speed' && 'speed' in stateObj.attributes) return true;\n    if (featureName === 'intensity' && 'intensity' in stateObj.attributes) return true;\n\n    // old deprecated way to seeing if supported feature\n    let featureSupported = LightEntityCard.featureNames[featureName] & stateObj.attributes.supported_features;\n\n    // support new color modes https://developers.home-assistant.io/docs/core/entity/light/#color-modes\n    const colorModes = stateObj.attributes.supported_color_modes || [];\n\n    if (!featureSupported) {\n      switch (featureName) {\n        case 'brightness':\n          featureSupported = Object.prototype.hasOwnProperty.call(stateObj.attributes, 'brightness');\n          if (!featureSupported) {\n            const supportedModes = ['hs', 'rgb', 'rgbw', 'rgbww', 'white', 'brightness', 'color_temp', 'xy'];\n            featureSupported = [...new Set(colorModes.filter(mode => supportedModes.includes(mode)))].length > 0;\n          }\n\n          break;\n        case 'colorTemp':\n          if (colorModes) {\n            const supportedModes = ['color_temp'];\n            featureSupported = [...new Set(colorModes.filter(mode => supportedModes.includes(mode)))].length > 0;\n          }\n          break;\n        case 'effectList':\n          featureSupported = stateObj.attributes.effect_list && stateObj.attributes.effect_list.length;\n          break;\n        case 'color':\n          if (!featureSupported) {\n            const supportedModes = ['hs', 'rgb', 'rgbw', 'rgbww', 'xy'];\n            featureSupported = [...new Set(colorModes.filter(mode => supportedModes.includes(mode)))].length > 0;\n          }\n          break;\n        case 'whiteValue':\n          featureSupported = Object.prototype.hasOwnProperty.call(stateObj.attributes, 'white_value');\n          break;\n        default:\n          featureSupported = false;\n          break;\n      }\n    }\n\n    if (!featureSupported) return true;\n    if (!this.config.persist_features && !this.isEntityOn(stateObj)) return true;\n  }\n\n  /**\n   * change to hs color for a given entity\n   * @param {HSL} hsl\n   * @param {LightEntity} stateObj\n   */\n  setColorPicker(hsl, stateObj) {\n    this.callEntityService({ hs_color: [hsl.h, hsl.s] }, stateObj);\n  }\n\n  _setValue(event, stateObj, valueName) {\n    const newValue = parseInt(event.target.value, 0);\n    if (isNaN(newValue) || parseInt(stateObj.attributes[valueName], 0) === newValue) return;\n\n    this.callEntityService({ [valueName]: newValue }, stateObj);\n  }\n\n  /**\n   * sets the toggle state based on the given entity state\n   * @param {CustomEvent} event\n   * @param {LightEntity} stateObj\n   */\n  setToggle(event, stateObj) {\n    const newState = this.isEntityOn(stateObj) ? LightEntityCard.cmdToggle.off : LightEntityCard.cmdToggle.on;\n    this.callEntityService({}, stateObj, newState);\n  }\n\n  /**\n   * sets the current effect selected for an entity\n   * @param {CustomEvent} event\n   * @param {LightEntity} entity\n   */\n  setEffect(event, stateObj) {\n    if(!event.target.value ) return;\n    this.callEntityService({ effect: event.target.value }, stateObj);\n  }\n\n  /**\n   * call light service to update a state of an entity\n   * @param {Object} payload\n   * @param {LightEntity} entity\n   * @param {String} state\n   */\n  callEntityService(payload, stateObj, state) {\n    if(!this._firstUpdate) return;\n    \n    let entityType = stateObj.entity_id.split('.')[0];\n    if (entityType === 'group') entityType = 'homeassistant';\n\n    this.hass.callService(entityType, state || LightEntityCard.cmdToggle.on, {\n      entity_id: stateObj.entity_id,\n      ...payload,\n    });\n  }\n}\n\ncustomElements.define('light-entity-card', LightEntityCard);\nwindow.customCards = window.customCards || [];\nwindow.customCards.push({\n  type: 'light-entity-card',\n  name: 'Light Entity Card',\n  description: 'Control lights and switches',\n});\n"],"sourceRoot":""}